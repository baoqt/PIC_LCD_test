// Version 1.37
// Generated 11/03/2016 GMT

/*
 * Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
 * All rights reserved.
 * 
 * This software is developed by Microchip Technology Inc. and its subsidiaries ("Microchip").
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *     1. Redistributions of source code must retain the above copyright notice, this list of
 *        conditions and the following disclaimer.
 * 
 *     2. Redistributions in binary form must reproduce the above copyright notice, this list
 *        of conditions and the following disclaimer in the documentation and/or other
 *        materials provided with the distribution.
 * 
 *     3. Microchip's name may not be used to endorse or promote products derived from this
 *        software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *  */

#ifndef _PIC16F18324_H_
#define _PIC16F18324_H_

/*
 * C Header file for the Microchip PIC Microcontroller
 * PIC16F18324
 *  */
#ifndef __XC8
#warning Header file pic16f18324.h included directly. Use #include <xc.h> instead.
#endif

/*
 * Register Definitions
 *  */

// Register: INDF0
extern volatile unsigned char           INDF0               @ 0x000;
#ifndef _LIB_BUILD
asm("INDF0 equ 00h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INDF0                  :8;
    };
} INDF0bits_t;
extern volatile INDF0bits_t INDF0bits @ 0x000;
// bitfield macros
#define _INDF0_INDF0_POSN                                   0x0
#define _INDF0_INDF0_POSITION                               0x0
#define _INDF0_INDF0_SIZE                                   0x8
#define _INDF0_INDF0_LENGTH                                 0x8
#define _INDF0_INDF0_MASK                                   0xFF

// Register: INDF1
extern volatile unsigned char           INDF1               @ 0x001;
#ifndef _LIB_BUILD
asm("INDF1 equ 01h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INDF1                  :8;
    };
} INDF1bits_t;
extern volatile INDF1bits_t INDF1bits @ 0x001;
// bitfield macros
#define _INDF1_INDF1_POSN                                   0x0
#define _INDF1_INDF1_POSITION                               0x0
#define _INDF1_INDF1_SIZE                                   0x8
#define _INDF1_INDF1_LENGTH                                 0x8
#define _INDF1_INDF1_MASK                                   0xFF

// Register: PCL
extern volatile unsigned char           PCL                 @ 0x002;
#ifndef _LIB_BUILD
asm("PCL equ 02h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCL                    :8;
    };
} PCLbits_t;
extern volatile PCLbits_t PCLbits @ 0x002;
// bitfield macros
#define _PCL_PCL_POSN                                       0x0
#define _PCL_PCL_POSITION                                   0x0
#define _PCL_PCL_SIZE                                       0x8
#define _PCL_PCL_LENGTH                                     0x8
#define _PCL_PCL_MASK                                       0xFF

// Register: STATUS
extern volatile unsigned char           STATUS              @ 0x003;
#ifndef _LIB_BUILD
asm("STATUS equ 03h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C                      :1;
        unsigned DC                     :1;
        unsigned Z                      :1;
        unsigned nPD                    :1;
        unsigned nTO                    :1;
    };
    struct {
        unsigned CARRY                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned ZERO                   :1;
    };
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits @ 0x003;
// bitfield macros
#define _STATUS_C_POSN                                      0x0
#define _STATUS_C_POSITION                                  0x0
#define _STATUS_C_SIZE                                      0x1
#define _STATUS_C_LENGTH                                    0x1
#define _STATUS_C_MASK                                      0x1
#define _STATUS_DC_POSN                                     0x1
#define _STATUS_DC_POSITION                                 0x1
#define _STATUS_DC_SIZE                                     0x1
#define _STATUS_DC_LENGTH                                   0x1
#define _STATUS_DC_MASK                                     0x2
#define _STATUS_Z_POSN                                      0x2
#define _STATUS_Z_POSITION                                  0x2
#define _STATUS_Z_SIZE                                      0x1
#define _STATUS_Z_LENGTH                                    0x1
#define _STATUS_Z_MASK                                      0x4
#define _STATUS_nPD_POSN                                    0x3
#define _STATUS_nPD_POSITION                                0x3
#define _STATUS_nPD_SIZE                                    0x1
#define _STATUS_nPD_LENGTH                                  0x1
#define _STATUS_nPD_MASK                                    0x8
#define _STATUS_nTO_POSN                                    0x4
#define _STATUS_nTO_POSITION                                0x4
#define _STATUS_nTO_SIZE                                    0x1
#define _STATUS_nTO_LENGTH                                  0x1
#define _STATUS_nTO_MASK                                    0x10
#define _STATUS_CARRY_POSN                                  0x0
#define _STATUS_CARRY_POSITION                              0x0
#define _STATUS_CARRY_SIZE                                  0x1
#define _STATUS_CARRY_LENGTH                                0x1
#define _STATUS_CARRY_MASK                                  0x1
#define _STATUS_ZERO_POSN                                   0x2
#define _STATUS_ZERO_POSITION                               0x2
#define _STATUS_ZERO_SIZE                                   0x1
#define _STATUS_ZERO_LENGTH                                 0x1
#define _STATUS_ZERO_MASK                                   0x4

// Register: FSR0
extern volatile unsigned short          FSR0                @ 0x004;

// Register: FSR0L
extern volatile unsigned char           FSR0L               @ 0x004;
#ifndef _LIB_BUILD
asm("FSR0L equ 04h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR0L                  :8;
    };
} FSR0Lbits_t;
extern volatile FSR0Lbits_t FSR0Lbits @ 0x004;
// bitfield macros
#define _FSR0L_FSR0L_POSN                                   0x0
#define _FSR0L_FSR0L_POSITION                               0x0
#define _FSR0L_FSR0L_SIZE                                   0x8
#define _FSR0L_FSR0L_LENGTH                                 0x8
#define _FSR0L_FSR0L_MASK                                   0xFF

// Register: FSR0H
extern volatile unsigned char           FSR0H               @ 0x005;
#ifndef _LIB_BUILD
asm("FSR0H equ 05h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR0H                  :8;
    };
} FSR0Hbits_t;
extern volatile FSR0Hbits_t FSR0Hbits @ 0x005;
// bitfield macros
#define _FSR0H_FSR0H_POSN                                   0x0
#define _FSR0H_FSR0H_POSITION                               0x0
#define _FSR0H_FSR0H_SIZE                                   0x8
#define _FSR0H_FSR0H_LENGTH                                 0x8
#define _FSR0H_FSR0H_MASK                                   0xFF

// Register: FSR1
extern volatile unsigned short          FSR1                @ 0x006;

// Register: FSR1L
extern volatile unsigned char           FSR1L               @ 0x006;
#ifndef _LIB_BUILD
asm("FSR1L equ 06h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR1L                  :8;
    };
} FSR1Lbits_t;
extern volatile FSR1Lbits_t FSR1Lbits @ 0x006;
// bitfield macros
#define _FSR1L_FSR1L_POSN                                   0x0
#define _FSR1L_FSR1L_POSITION                               0x0
#define _FSR1L_FSR1L_SIZE                                   0x8
#define _FSR1L_FSR1L_LENGTH                                 0x8
#define _FSR1L_FSR1L_MASK                                   0xFF

// Register: FSR1H
extern volatile unsigned char           FSR1H               @ 0x007;
#ifndef _LIB_BUILD
asm("FSR1H equ 07h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR1H                  :8;
    };
} FSR1Hbits_t;
extern volatile FSR1Hbits_t FSR1Hbits @ 0x007;
// bitfield macros
#define _FSR1H_FSR1H_POSN                                   0x0
#define _FSR1H_FSR1H_POSITION                               0x0
#define _FSR1H_FSR1H_SIZE                                   0x8
#define _FSR1H_FSR1H_LENGTH                                 0x8
#define _FSR1H_FSR1H_MASK                                   0xFF

// Register: BSR
extern volatile unsigned char           BSR                 @ 0x008;
#ifndef _LIB_BUILD
asm("BSR equ 08h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BSR                    :5;
    };
    struct {
        unsigned BSR0                   :1;
        unsigned BSR1                   :1;
        unsigned BSR2                   :1;
        unsigned BSR3                   :1;
        unsigned BSR4                   :1;
    };
} BSRbits_t;
extern volatile BSRbits_t BSRbits @ 0x008;
// bitfield macros
#define _BSR_BSR_POSN                                       0x0
#define _BSR_BSR_POSITION                                   0x0
#define _BSR_BSR_SIZE                                       0x5
#define _BSR_BSR_LENGTH                                     0x5
#define _BSR_BSR_MASK                                       0x1F
#define _BSR_BSR0_POSN                                      0x0
#define _BSR_BSR0_POSITION                                  0x0
#define _BSR_BSR0_SIZE                                      0x1
#define _BSR_BSR0_LENGTH                                    0x1
#define _BSR_BSR0_MASK                                      0x1
#define _BSR_BSR1_POSN                                      0x1
#define _BSR_BSR1_POSITION                                  0x1
#define _BSR_BSR1_SIZE                                      0x1
#define _BSR_BSR1_LENGTH                                    0x1
#define _BSR_BSR1_MASK                                      0x2
#define _BSR_BSR2_POSN                                      0x2
#define _BSR_BSR2_POSITION                                  0x2
#define _BSR_BSR2_SIZE                                      0x1
#define _BSR_BSR2_LENGTH                                    0x1
#define _BSR_BSR2_MASK                                      0x4
#define _BSR_BSR3_POSN                                      0x3
#define _BSR_BSR3_POSITION                                  0x3
#define _BSR_BSR3_SIZE                                      0x1
#define _BSR_BSR3_LENGTH                                    0x1
#define _BSR_BSR3_MASK                                      0x8
#define _BSR_BSR4_POSN                                      0x4
#define _BSR_BSR4_POSITION                                  0x4
#define _BSR_BSR4_SIZE                                      0x1
#define _BSR_BSR4_LENGTH                                    0x1
#define _BSR_BSR4_MASK                                      0x10

// Register: WREG
extern volatile unsigned char           WREG                @ 0x009;
#ifndef _LIB_BUILD
asm("WREG equ 09h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WREG0                  :8;
    };
} WREGbits_t;
extern volatile WREGbits_t WREGbits @ 0x009;
// bitfield macros
#define _WREG_WREG0_POSN                                    0x0
#define _WREG_WREG0_POSITION                                0x0
#define _WREG_WREG0_SIZE                                    0x8
#define _WREG_WREG0_LENGTH                                  0x8
#define _WREG_WREG0_MASK                                    0xFF

// Register: PCLATH
extern volatile unsigned char           PCLATH              @ 0x00A;
#ifndef _LIB_BUILD
asm("PCLATH equ 0Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCLATH                 :7;
    };
} PCLATHbits_t;
extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
// bitfield macros
#define _PCLATH_PCLATH_POSN                                 0x0
#define _PCLATH_PCLATH_POSITION                             0x0
#define _PCLATH_PCLATH_SIZE                                 0x7
#define _PCLATH_PCLATH_LENGTH                               0x7
#define _PCLATH_PCLATH_MASK                                 0x7F

// Register: INTCON
extern volatile unsigned char           INTCON              @ 0x00B;
#ifndef _LIB_BUILD
asm("INTCON equ 0Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTEDG                 :1;
        unsigned                        :5;
        unsigned PEIE                   :1;
        unsigned GIE                    :1;
    };
} INTCONbits_t;
extern volatile INTCONbits_t INTCONbits @ 0x00B;
// bitfield macros
#define _INTCON_INTEDG_POSN                                 0x0
#define _INTCON_INTEDG_POSITION                             0x0
#define _INTCON_INTEDG_SIZE                                 0x1
#define _INTCON_INTEDG_LENGTH                               0x1
#define _INTCON_INTEDG_MASK                                 0x1
#define _INTCON_PEIE_POSN                                   0x6
#define _INTCON_PEIE_POSITION                               0x6
#define _INTCON_PEIE_SIZE                                   0x1
#define _INTCON_PEIE_LENGTH                                 0x1
#define _INTCON_PEIE_MASK                                   0x40
#define _INTCON_GIE_POSN                                    0x7
#define _INTCON_GIE_POSITION                                0x7
#define _INTCON_GIE_SIZE                                    0x1
#define _INTCON_GIE_LENGTH                                  0x1
#define _INTCON_GIE_MASK                                    0x80

// Register: PORTA
extern volatile unsigned char           PORTA               @ 0x00C;
#ifndef _LIB_BUILD
asm("PORTA equ 0Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA0                    :1;
        unsigned RA1                    :1;
        unsigned RA2                    :1;
        unsigned RA3                    :1;
        unsigned RA4                    :1;
        unsigned RA5                    :1;
    };
} PORTAbits_t;
extern volatile PORTAbits_t PORTAbits @ 0x00C;
// bitfield macros
#define _PORTA_RA0_POSN                                     0x0
#define _PORTA_RA0_POSITION                                 0x0
#define _PORTA_RA0_SIZE                                     0x1
#define _PORTA_RA0_LENGTH                                   0x1
#define _PORTA_RA0_MASK                                     0x1
#define _PORTA_RA1_POSN                                     0x1
#define _PORTA_RA1_POSITION                                 0x1
#define _PORTA_RA1_SIZE                                     0x1
#define _PORTA_RA1_LENGTH                                   0x1
#define _PORTA_RA1_MASK                                     0x2
#define _PORTA_RA2_POSN                                     0x2
#define _PORTA_RA2_POSITION                                 0x2
#define _PORTA_RA2_SIZE                                     0x1
#define _PORTA_RA2_LENGTH                                   0x1
#define _PORTA_RA2_MASK                                     0x4
#define _PORTA_RA3_POSN                                     0x3
#define _PORTA_RA3_POSITION                                 0x3
#define _PORTA_RA3_SIZE                                     0x1
#define _PORTA_RA3_LENGTH                                   0x1
#define _PORTA_RA3_MASK                                     0x8
#define _PORTA_RA4_POSN                                     0x4
#define _PORTA_RA4_POSITION                                 0x4
#define _PORTA_RA4_SIZE                                     0x1
#define _PORTA_RA4_LENGTH                                   0x1
#define _PORTA_RA4_MASK                                     0x10
#define _PORTA_RA5_POSN                                     0x5
#define _PORTA_RA5_POSITION                                 0x5
#define _PORTA_RA5_SIZE                                     0x1
#define _PORTA_RA5_LENGTH                                   0x1
#define _PORTA_RA5_MASK                                     0x20

// Register: PORTC
extern volatile unsigned char           PORTC               @ 0x00E;
#ifndef _LIB_BUILD
asm("PORTC equ 0Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC0                    :1;
        unsigned RC1                    :1;
        unsigned RC2                    :1;
        unsigned RC3                    :1;
        unsigned RC4                    :1;
        unsigned RC5                    :1;
    };
} PORTCbits_t;
extern volatile PORTCbits_t PORTCbits @ 0x00E;
// bitfield macros
#define _PORTC_RC0_POSN                                     0x0
#define _PORTC_RC0_POSITION                                 0x0
#define _PORTC_RC0_SIZE                                     0x1
#define _PORTC_RC0_LENGTH                                   0x1
#define _PORTC_RC0_MASK                                     0x1
#define _PORTC_RC1_POSN                                     0x1
#define _PORTC_RC1_POSITION                                 0x1
#define _PORTC_RC1_SIZE                                     0x1
#define _PORTC_RC1_LENGTH                                   0x1
#define _PORTC_RC1_MASK                                     0x2
#define _PORTC_RC2_POSN                                     0x2
#define _PORTC_RC2_POSITION                                 0x2
#define _PORTC_RC2_SIZE                                     0x1
#define _PORTC_RC2_LENGTH                                   0x1
#define _PORTC_RC2_MASK                                     0x4
#define _PORTC_RC3_POSN                                     0x3
#define _PORTC_RC3_POSITION                                 0x3
#define _PORTC_RC3_SIZE                                     0x1
#define _PORTC_RC3_LENGTH                                   0x1
#define _PORTC_RC3_MASK                                     0x8
#define _PORTC_RC4_POSN                                     0x4
#define _PORTC_RC4_POSITION                                 0x4
#define _PORTC_RC4_SIZE                                     0x1
#define _PORTC_RC4_LENGTH                                   0x1
#define _PORTC_RC4_MASK                                     0x10
#define _PORTC_RC5_POSN                                     0x5
#define _PORTC_RC5_POSITION                                 0x5
#define _PORTC_RC5_SIZE                                     0x1
#define _PORTC_RC5_LENGTH                                   0x1
#define _PORTC_RC5_MASK                                     0x20

// Register: PIR0
extern volatile unsigned char           PIR0                @ 0x010;
#ifndef _LIB_BUILD
asm("PIR0 equ 010h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTF                   :1;
        unsigned                        :3;
        unsigned IOCIF                  :1;
        unsigned TMR0IF                 :1;
    };
} PIR0bits_t;
extern volatile PIR0bits_t PIR0bits @ 0x010;
// bitfield macros
#define _PIR0_INTF_POSN                                     0x0
#define _PIR0_INTF_POSITION                                 0x0
#define _PIR0_INTF_SIZE                                     0x1
#define _PIR0_INTF_LENGTH                                   0x1
#define _PIR0_INTF_MASK                                     0x1
#define _PIR0_IOCIF_POSN                                    0x4
#define _PIR0_IOCIF_POSITION                                0x4
#define _PIR0_IOCIF_SIZE                                    0x1
#define _PIR0_IOCIF_LENGTH                                  0x1
#define _PIR0_IOCIF_MASK                                    0x10
#define _PIR0_TMR0IF_POSN                                   0x5
#define _PIR0_TMR0IF_POSITION                               0x5
#define _PIR0_TMR0IF_SIZE                                   0x1
#define _PIR0_TMR0IF_LENGTH                                 0x1
#define _PIR0_TMR0IF_MASK                                   0x20

// Register: PIR1
extern volatile unsigned char           PIR1                @ 0x011;
#ifndef _LIB_BUILD
asm("PIR1 equ 011h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IF                 :1;
        unsigned TMR2IF                 :1;
        unsigned BCL1IF                 :1;
        unsigned SSP1IF                 :1;
        unsigned TXIF                   :1;
        unsigned RCIF                   :1;
        unsigned ADIF                   :1;
        unsigned TMR1GIF                :1;
    };
} PIR1bits_t;
extern volatile PIR1bits_t PIR1bits @ 0x011;
// bitfield macros
#define _PIR1_TMR1IF_POSN                                   0x0
#define _PIR1_TMR1IF_POSITION                               0x0
#define _PIR1_TMR1IF_SIZE                                   0x1
#define _PIR1_TMR1IF_LENGTH                                 0x1
#define _PIR1_TMR1IF_MASK                                   0x1
#define _PIR1_TMR2IF_POSN                                   0x1
#define _PIR1_TMR2IF_POSITION                               0x1
#define _PIR1_TMR2IF_SIZE                                   0x1
#define _PIR1_TMR2IF_LENGTH                                 0x1
#define _PIR1_TMR2IF_MASK                                   0x2
#define _PIR1_BCL1IF_POSN                                   0x2
#define _PIR1_BCL1IF_POSITION                               0x2
#define _PIR1_BCL1IF_SIZE                                   0x1
#define _PIR1_BCL1IF_LENGTH                                 0x1
#define _PIR1_BCL1IF_MASK                                   0x4
#define _PIR1_SSP1IF_POSN                                   0x3
#define _PIR1_SSP1IF_POSITION                               0x3
#define _PIR1_SSP1IF_SIZE                                   0x1
#define _PIR1_SSP1IF_LENGTH                                 0x1
#define _PIR1_SSP1IF_MASK                                   0x8
#define _PIR1_TXIF_POSN                                     0x4
#define _PIR1_TXIF_POSITION                                 0x4
#define _PIR1_TXIF_SIZE                                     0x1
#define _PIR1_TXIF_LENGTH                                   0x1
#define _PIR1_TXIF_MASK                                     0x10
#define _PIR1_RCIF_POSN                                     0x5
#define _PIR1_RCIF_POSITION                                 0x5
#define _PIR1_RCIF_SIZE                                     0x1
#define _PIR1_RCIF_LENGTH                                   0x1
#define _PIR1_RCIF_MASK                                     0x20
#define _PIR1_ADIF_POSN                                     0x6
#define _PIR1_ADIF_POSITION                                 0x6
#define _PIR1_ADIF_SIZE                                     0x1
#define _PIR1_ADIF_LENGTH                                   0x1
#define _PIR1_ADIF_MASK                                     0x40
#define _PIR1_TMR1GIF_POSN                                  0x7
#define _PIR1_TMR1GIF_POSITION                              0x7
#define _PIR1_TMR1GIF_SIZE                                  0x1
#define _PIR1_TMR1GIF_LENGTH                                0x1
#define _PIR1_TMR1GIF_MASK                                  0x80

// Register: PIR2
extern volatile unsigned char           PIR2                @ 0x012;
#ifndef _LIB_BUILD
asm("PIR2 equ 012h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCO1IF                 :1;
        unsigned TMR4IF                 :1;
        unsigned                        :2;
        unsigned NVMIF                  :1;
        unsigned C1IF                   :1;
        unsigned C2IF                   :1;
        unsigned TMR6IF                 :1;
    };
} PIR2bits_t;
extern volatile PIR2bits_t PIR2bits @ 0x012;
// bitfield macros
#define _PIR2_NCO1IF_POSN                                   0x0
#define _PIR2_NCO1IF_POSITION                               0x0
#define _PIR2_NCO1IF_SIZE                                   0x1
#define _PIR2_NCO1IF_LENGTH                                 0x1
#define _PIR2_NCO1IF_MASK                                   0x1
#define _PIR2_TMR4IF_POSN                                   0x1
#define _PIR2_TMR4IF_POSITION                               0x1
#define _PIR2_TMR4IF_SIZE                                   0x1
#define _PIR2_TMR4IF_LENGTH                                 0x1
#define _PIR2_TMR4IF_MASK                                   0x2
#define _PIR2_NVMIF_POSN                                    0x4
#define _PIR2_NVMIF_POSITION                                0x4
#define _PIR2_NVMIF_SIZE                                    0x1
#define _PIR2_NVMIF_LENGTH                                  0x1
#define _PIR2_NVMIF_MASK                                    0x10
#define _PIR2_C1IF_POSN                                     0x5
#define _PIR2_C1IF_POSITION                                 0x5
#define _PIR2_C1IF_SIZE                                     0x1
#define _PIR2_C1IF_LENGTH                                   0x1
#define _PIR2_C1IF_MASK                                     0x20
#define _PIR2_C2IF_POSN                                     0x6
#define _PIR2_C2IF_POSITION                                 0x6
#define _PIR2_C2IF_SIZE                                     0x1
#define _PIR2_C2IF_LENGTH                                   0x1
#define _PIR2_C2IF_MASK                                     0x40
#define _PIR2_TMR6IF_POSN                                   0x7
#define _PIR2_TMR6IF_POSITION                               0x7
#define _PIR2_TMR6IF_SIZE                                   0x1
#define _PIR2_TMR6IF_LENGTH                                 0x1
#define _PIR2_TMR6IF_MASK                                   0x80

// Register: PIR3
extern volatile unsigned char           PIR3                @ 0x013;
#ifndef _LIB_BUILD
asm("PIR3 equ 013h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLC1IF                 :1;
        unsigned CLC2IF                 :1;
        unsigned CLC3IF                 :1;
        unsigned CLC4IF                 :1;
        unsigned TMR3IF                 :1;
        unsigned TMR3GIF                :1;
        unsigned CSWIF                  :1;
        unsigned OSFIF                  :1;
    };
} PIR3bits_t;
extern volatile PIR3bits_t PIR3bits @ 0x013;
// bitfield macros
#define _PIR3_CLC1IF_POSN                                   0x0
#define _PIR3_CLC1IF_POSITION                               0x0
#define _PIR3_CLC1IF_SIZE                                   0x1
#define _PIR3_CLC1IF_LENGTH                                 0x1
#define _PIR3_CLC1IF_MASK                                   0x1
#define _PIR3_CLC2IF_POSN                                   0x1
#define _PIR3_CLC2IF_POSITION                               0x1
#define _PIR3_CLC2IF_SIZE                                   0x1
#define _PIR3_CLC2IF_LENGTH                                 0x1
#define _PIR3_CLC2IF_MASK                                   0x2
#define _PIR3_CLC3IF_POSN                                   0x2
#define _PIR3_CLC3IF_POSITION                               0x2
#define _PIR3_CLC3IF_SIZE                                   0x1
#define _PIR3_CLC3IF_LENGTH                                 0x1
#define _PIR3_CLC3IF_MASK                                   0x4
#define _PIR3_CLC4IF_POSN                                   0x3
#define _PIR3_CLC4IF_POSITION                               0x3
#define _PIR3_CLC4IF_SIZE                                   0x1
#define _PIR3_CLC4IF_LENGTH                                 0x1
#define _PIR3_CLC4IF_MASK                                   0x8
#define _PIR3_TMR3IF_POSN                                   0x4
#define _PIR3_TMR3IF_POSITION                               0x4
#define _PIR3_TMR3IF_SIZE                                   0x1
#define _PIR3_TMR3IF_LENGTH                                 0x1
#define _PIR3_TMR3IF_MASK                                   0x10
#define _PIR3_TMR3GIF_POSN                                  0x5
#define _PIR3_TMR3GIF_POSITION                              0x5
#define _PIR3_TMR3GIF_SIZE                                  0x1
#define _PIR3_TMR3GIF_LENGTH                                0x1
#define _PIR3_TMR3GIF_MASK                                  0x20
#define _PIR3_CSWIF_POSN                                    0x6
#define _PIR3_CSWIF_POSITION                                0x6
#define _PIR3_CSWIF_SIZE                                    0x1
#define _PIR3_CSWIF_LENGTH                                  0x1
#define _PIR3_CSWIF_MASK                                    0x40
#define _PIR3_OSFIF_POSN                                    0x7
#define _PIR3_OSFIF_POSITION                                0x7
#define _PIR3_OSFIF_SIZE                                    0x1
#define _PIR3_OSFIF_LENGTH                                  0x1
#define _PIR3_OSFIF_MASK                                    0x80

// Register: PIR4
extern volatile unsigned char           PIR4                @ 0x014;
#ifndef _LIB_BUILD
asm("PIR4 equ 014h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP1IF                 :1;
        unsigned CCP2IF                 :1;
        unsigned CCP3IF                 :1;
        unsigned CCP4IF                 :1;
        unsigned TMR5IF                 :1;
        unsigned TMR5GIF                :1;
        unsigned CWG1IF                 :1;
        unsigned CWG2IF                 :1;
    };
} PIR4bits_t;
extern volatile PIR4bits_t PIR4bits @ 0x014;
// bitfield macros
#define _PIR4_CCP1IF_POSN                                   0x0
#define _PIR4_CCP1IF_POSITION                               0x0
#define _PIR4_CCP1IF_SIZE                                   0x1
#define _PIR4_CCP1IF_LENGTH                                 0x1
#define _PIR4_CCP1IF_MASK                                   0x1
#define _PIR4_CCP2IF_POSN                                   0x1
#define _PIR4_CCP2IF_POSITION                               0x1
#define _PIR4_CCP2IF_SIZE                                   0x1
#define _PIR4_CCP2IF_LENGTH                                 0x1
#define _PIR4_CCP2IF_MASK                                   0x2
#define _PIR4_CCP3IF_POSN                                   0x2
#define _PIR4_CCP3IF_POSITION                               0x2
#define _PIR4_CCP3IF_SIZE                                   0x1
#define _PIR4_CCP3IF_LENGTH                                 0x1
#define _PIR4_CCP3IF_MASK                                   0x4
#define _PIR4_CCP4IF_POSN                                   0x3
#define _PIR4_CCP4IF_POSITION                               0x3
#define _PIR4_CCP4IF_SIZE                                   0x1
#define _PIR4_CCP4IF_LENGTH                                 0x1
#define _PIR4_CCP4IF_MASK                                   0x8
#define _PIR4_TMR5IF_POSN                                   0x4
#define _PIR4_TMR5IF_POSITION                               0x4
#define _PIR4_TMR5IF_SIZE                                   0x1
#define _PIR4_TMR5IF_LENGTH                                 0x1
#define _PIR4_TMR5IF_MASK                                   0x10
#define _PIR4_TMR5GIF_POSN                                  0x5
#define _PIR4_TMR5GIF_POSITION                              0x5
#define _PIR4_TMR5GIF_SIZE                                  0x1
#define _PIR4_TMR5GIF_LENGTH                                0x1
#define _PIR4_TMR5GIF_MASK                                  0x20
#define _PIR4_CWG1IF_POSN                                   0x6
#define _PIR4_CWG1IF_POSITION                               0x6
#define _PIR4_CWG1IF_SIZE                                   0x1
#define _PIR4_CWG1IF_LENGTH                                 0x1
#define _PIR4_CWG1IF_MASK                                   0x40
#define _PIR4_CWG2IF_POSN                                   0x7
#define _PIR4_CWG2IF_POSITION                               0x7
#define _PIR4_CWG2IF_SIZE                                   0x1
#define _PIR4_CWG2IF_LENGTH                                 0x1
#define _PIR4_CWG2IF_MASK                                   0x80

// Register: TMR0L
extern volatile unsigned char           TMR0L               @ 0x015;
#ifndef _LIB_BUILD
asm("TMR0L equ 015h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR0L                  :8;
    };
    struct {
        unsigned TMR00                  :1;
        unsigned TMR01                  :1;
        unsigned TMR02                  :1;
        unsigned TMR03                  :1;
        unsigned TMR04                  :1;
        unsigned TMR05                  :1;
        unsigned TMR06                  :1;
        unsigned TMR07                  :1;
    };
} TMR0Lbits_t;
extern volatile TMR0Lbits_t TMR0Lbits @ 0x015;
// bitfield macros
#define _TMR0L_TMR0L_POSN                                   0x0
#define _TMR0L_TMR0L_POSITION                               0x0
#define _TMR0L_TMR0L_SIZE                                   0x8
#define _TMR0L_TMR0L_LENGTH                                 0x8
#define _TMR0L_TMR0L_MASK                                   0xFF
#define _TMR0L_TMR00_POSN                                   0x0
#define _TMR0L_TMR00_POSITION                               0x0
#define _TMR0L_TMR00_SIZE                                   0x1
#define _TMR0L_TMR00_LENGTH                                 0x1
#define _TMR0L_TMR00_MASK                                   0x1
#define _TMR0L_TMR01_POSN                                   0x1
#define _TMR0L_TMR01_POSITION                               0x1
#define _TMR0L_TMR01_SIZE                                   0x1
#define _TMR0L_TMR01_LENGTH                                 0x1
#define _TMR0L_TMR01_MASK                                   0x2
#define _TMR0L_TMR02_POSN                                   0x2
#define _TMR0L_TMR02_POSITION                               0x2
#define _TMR0L_TMR02_SIZE                                   0x1
#define _TMR0L_TMR02_LENGTH                                 0x1
#define _TMR0L_TMR02_MASK                                   0x4
#define _TMR0L_TMR03_POSN                                   0x3
#define _TMR0L_TMR03_POSITION                               0x3
#define _TMR0L_TMR03_SIZE                                   0x1
#define _TMR0L_TMR03_LENGTH                                 0x1
#define _TMR0L_TMR03_MASK                                   0x8
#define _TMR0L_TMR04_POSN                                   0x4
#define _TMR0L_TMR04_POSITION                               0x4
#define _TMR0L_TMR04_SIZE                                   0x1
#define _TMR0L_TMR04_LENGTH                                 0x1
#define _TMR0L_TMR04_MASK                                   0x10
#define _TMR0L_TMR05_POSN                                   0x5
#define _TMR0L_TMR05_POSITION                               0x5
#define _TMR0L_TMR05_SIZE                                   0x1
#define _TMR0L_TMR05_LENGTH                                 0x1
#define _TMR0L_TMR05_MASK                                   0x20
#define _TMR0L_TMR06_POSN                                   0x6
#define _TMR0L_TMR06_POSITION                               0x6
#define _TMR0L_TMR06_SIZE                                   0x1
#define _TMR0L_TMR06_LENGTH                                 0x1
#define _TMR0L_TMR06_MASK                                   0x40
#define _TMR0L_TMR07_POSN                                   0x7
#define _TMR0L_TMR07_POSITION                               0x7
#define _TMR0L_TMR07_SIZE                                   0x1
#define _TMR0L_TMR07_LENGTH                                 0x1
#define _TMR0L_TMR07_MASK                                   0x80

// Register: TMR0H
extern volatile unsigned char           TMR0H               @ 0x016;
#ifndef _LIB_BUILD
asm("TMR0H equ 016h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR0H                  :8;
    };
    struct {
        unsigned TMR08                  :1;
        unsigned TMR09                  :1;
        unsigned TMR010                 :1;
        unsigned TMR011                 :1;
        unsigned TMR012                 :1;
        unsigned TMR013                 :1;
        unsigned TMR014                 :1;
        unsigned TMR015                 :1;
    };
} TMR0Hbits_t;
extern volatile TMR0Hbits_t TMR0Hbits @ 0x016;
// bitfield macros
#define _TMR0H_TMR0H_POSN                                   0x0
#define _TMR0H_TMR0H_POSITION                               0x0
#define _TMR0H_TMR0H_SIZE                                   0x8
#define _TMR0H_TMR0H_LENGTH                                 0x8
#define _TMR0H_TMR0H_MASK                                   0xFF
#define _TMR0H_TMR08_POSN                                   0x0
#define _TMR0H_TMR08_POSITION                               0x0
#define _TMR0H_TMR08_SIZE                                   0x1
#define _TMR0H_TMR08_LENGTH                                 0x1
#define _TMR0H_TMR08_MASK                                   0x1
#define _TMR0H_TMR09_POSN                                   0x1
#define _TMR0H_TMR09_POSITION                               0x1
#define _TMR0H_TMR09_SIZE                                   0x1
#define _TMR0H_TMR09_LENGTH                                 0x1
#define _TMR0H_TMR09_MASK                                   0x2
#define _TMR0H_TMR010_POSN                                  0x2
#define _TMR0H_TMR010_POSITION                              0x2
#define _TMR0H_TMR010_SIZE                                  0x1
#define _TMR0H_TMR010_LENGTH                                0x1
#define _TMR0H_TMR010_MASK                                  0x4
#define _TMR0H_TMR011_POSN                                  0x3
#define _TMR0H_TMR011_POSITION                              0x3
#define _TMR0H_TMR011_SIZE                                  0x1
#define _TMR0H_TMR011_LENGTH                                0x1
#define _TMR0H_TMR011_MASK                                  0x8
#define _TMR0H_TMR012_POSN                                  0x4
#define _TMR0H_TMR012_POSITION                              0x4
#define _TMR0H_TMR012_SIZE                                  0x1
#define _TMR0H_TMR012_LENGTH                                0x1
#define _TMR0H_TMR012_MASK                                  0x10
#define _TMR0H_TMR013_POSN                                  0x5
#define _TMR0H_TMR013_POSITION                              0x5
#define _TMR0H_TMR013_SIZE                                  0x1
#define _TMR0H_TMR013_LENGTH                                0x1
#define _TMR0H_TMR013_MASK                                  0x20
#define _TMR0H_TMR014_POSN                                  0x6
#define _TMR0H_TMR014_POSITION                              0x6
#define _TMR0H_TMR014_SIZE                                  0x1
#define _TMR0H_TMR014_LENGTH                                0x1
#define _TMR0H_TMR014_MASK                                  0x40
#define _TMR0H_TMR015_POSN                                  0x7
#define _TMR0H_TMR015_POSITION                              0x7
#define _TMR0H_TMR015_SIZE                                  0x1
#define _TMR0H_TMR015_LENGTH                                0x1
#define _TMR0H_TMR015_MASK                                  0x80

// Register: T0CON0
extern volatile unsigned char           T0CON0              @ 0x017;
#ifndef _LIB_BUILD
asm("T0CON0 equ 017h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T0OUTPS                :4;
        unsigned T016BIT                :1;
        unsigned T0OUT                  :1;
        unsigned                        :1;
        unsigned T0EN                   :1;
    };
    struct {
        unsigned T0OUTPS0               :1;
        unsigned T0OUTPS1               :1;
        unsigned T0OUTPS2               :1;
        unsigned T0OUTPS3               :1;
    };
} T0CON0bits_t;
extern volatile T0CON0bits_t T0CON0bits @ 0x017;
// bitfield macros
#define _T0CON0_T0OUTPS_POSN                                0x0
#define _T0CON0_T0OUTPS_POSITION                            0x0
#define _T0CON0_T0OUTPS_SIZE                                0x4
#define _T0CON0_T0OUTPS_LENGTH                              0x4
#define _T0CON0_T0OUTPS_MASK                                0xF
#define _T0CON0_T016BIT_POSN                                0x4
#define _T0CON0_T016BIT_POSITION                            0x4
#define _T0CON0_T016BIT_SIZE                                0x1
#define _T0CON0_T016BIT_LENGTH                              0x1
#define _T0CON0_T016BIT_MASK                                0x10
#define _T0CON0_T0OUT_POSN                                  0x5
#define _T0CON0_T0OUT_POSITION                              0x5
#define _T0CON0_T0OUT_SIZE                                  0x1
#define _T0CON0_T0OUT_LENGTH                                0x1
#define _T0CON0_T0OUT_MASK                                  0x20
#define _T0CON0_T0EN_POSN                                   0x7
#define _T0CON0_T0EN_POSITION                               0x7
#define _T0CON0_T0EN_SIZE                                   0x1
#define _T0CON0_T0EN_LENGTH                                 0x1
#define _T0CON0_T0EN_MASK                                   0x80
#define _T0CON0_T0OUTPS0_POSN                               0x0
#define _T0CON0_T0OUTPS0_POSITION                           0x0
#define _T0CON0_T0OUTPS0_SIZE                               0x1
#define _T0CON0_T0OUTPS0_LENGTH                             0x1
#define _T0CON0_T0OUTPS0_MASK                               0x1
#define _T0CON0_T0OUTPS1_POSN                               0x1
#define _T0CON0_T0OUTPS1_POSITION                           0x1
#define _T0CON0_T0OUTPS1_SIZE                               0x1
#define _T0CON0_T0OUTPS1_LENGTH                             0x1
#define _T0CON0_T0OUTPS1_MASK                               0x2
#define _T0CON0_T0OUTPS2_POSN                               0x2
#define _T0CON0_T0OUTPS2_POSITION                           0x2
#define _T0CON0_T0OUTPS2_SIZE                               0x1
#define _T0CON0_T0OUTPS2_LENGTH                             0x1
#define _T0CON0_T0OUTPS2_MASK                               0x4
#define _T0CON0_T0OUTPS3_POSN                               0x3
#define _T0CON0_T0OUTPS3_POSITION                           0x3
#define _T0CON0_T0OUTPS3_SIZE                               0x1
#define _T0CON0_T0OUTPS3_LENGTH                             0x1
#define _T0CON0_T0OUTPS3_MASK                               0x8

// Register: T0CON1
extern volatile unsigned char           T0CON1              @ 0x018;
#ifndef _LIB_BUILD
asm("T0CON1 equ 018h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T0CKPS                 :4;
        unsigned T0ASYNC                :1;
        unsigned T0CS                   :3;
    };
    struct {
        unsigned T0CKPS0                :1;
        unsigned T0CKPS1                :1;
        unsigned T0CKPS2                :1;
        unsigned T0CKPS3                :1;
        unsigned                        :1;
        unsigned T0CS0                  :1;
        unsigned T0CS1                  :1;
        unsigned T0CS2                  :1;
    };
} T0CON1bits_t;
extern volatile T0CON1bits_t T0CON1bits @ 0x018;
// bitfield macros
#define _T0CON1_T0CKPS_POSN                                 0x0
#define _T0CON1_T0CKPS_POSITION                             0x0
#define _T0CON1_T0CKPS_SIZE                                 0x4
#define _T0CON1_T0CKPS_LENGTH                               0x4
#define _T0CON1_T0CKPS_MASK                                 0xF
#define _T0CON1_T0ASYNC_POSN                                0x4
#define _T0CON1_T0ASYNC_POSITION                            0x4
#define _T0CON1_T0ASYNC_SIZE                                0x1
#define _T0CON1_T0ASYNC_LENGTH                              0x1
#define _T0CON1_T0ASYNC_MASK                                0x10
#define _T0CON1_T0CS_POSN                                   0x5
#define _T0CON1_T0CS_POSITION                               0x5
#define _T0CON1_T0CS_SIZE                                   0x3
#define _T0CON1_T0CS_LENGTH                                 0x3
#define _T0CON1_T0CS_MASK                                   0xE0
#define _T0CON1_T0CKPS0_POSN                                0x0
#define _T0CON1_T0CKPS0_POSITION                            0x0
#define _T0CON1_T0CKPS0_SIZE                                0x1
#define _T0CON1_T0CKPS0_LENGTH                              0x1
#define _T0CON1_T0CKPS0_MASK                                0x1
#define _T0CON1_T0CKPS1_POSN                                0x1
#define _T0CON1_T0CKPS1_POSITION                            0x1
#define _T0CON1_T0CKPS1_SIZE                                0x1
#define _T0CON1_T0CKPS1_LENGTH                              0x1
#define _T0CON1_T0CKPS1_MASK                                0x2
#define _T0CON1_T0CKPS2_POSN                                0x2
#define _T0CON1_T0CKPS2_POSITION                            0x2
#define _T0CON1_T0CKPS2_SIZE                                0x1
#define _T0CON1_T0CKPS2_LENGTH                              0x1
#define _T0CON1_T0CKPS2_MASK                                0x4
#define _T0CON1_T0CKPS3_POSN                                0x3
#define _T0CON1_T0CKPS3_POSITION                            0x3
#define _T0CON1_T0CKPS3_SIZE                                0x1
#define _T0CON1_T0CKPS3_LENGTH                              0x1
#define _T0CON1_T0CKPS3_MASK                                0x8
#define _T0CON1_T0CS0_POSN                                  0x5
#define _T0CON1_T0CS0_POSITION                              0x5
#define _T0CON1_T0CS0_SIZE                                  0x1
#define _T0CON1_T0CS0_LENGTH                                0x1
#define _T0CON1_T0CS0_MASK                                  0x20
#define _T0CON1_T0CS1_POSN                                  0x6
#define _T0CON1_T0CS1_POSITION                              0x6
#define _T0CON1_T0CS1_SIZE                                  0x1
#define _T0CON1_T0CS1_LENGTH                                0x1
#define _T0CON1_T0CS1_MASK                                  0x40
#define _T0CON1_T0CS2_POSN                                  0x7
#define _T0CON1_T0CS2_POSITION                              0x7
#define _T0CON1_T0CS2_SIZE                                  0x1
#define _T0CON1_T0CS2_LENGTH                                0x1
#define _T0CON1_T0CS2_MASK                                  0x80

// Register: TMR1
extern volatile unsigned short          TMR1                @ 0x019;
#ifndef _LIB_BUILD
asm("TMR1 equ 019h");
#endif

// Register: TMR1L
extern volatile unsigned char           TMR1L               @ 0x019;
#ifndef _LIB_BUILD
asm("TMR1L equ 019h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1L                  :8;
    };
} TMR1Lbits_t;
extern volatile TMR1Lbits_t TMR1Lbits @ 0x019;
// bitfield macros
#define _TMR1L_TMR1L_POSN                                   0x0
#define _TMR1L_TMR1L_POSITION                               0x0
#define _TMR1L_TMR1L_SIZE                                   0x8
#define _TMR1L_TMR1L_LENGTH                                 0x8
#define _TMR1L_TMR1L_MASK                                   0xFF

// Register: TMR1H
extern volatile unsigned char           TMR1H               @ 0x01A;
#ifndef _LIB_BUILD
asm("TMR1H equ 01Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1H                  :8;
    };
} TMR1Hbits_t;
extern volatile TMR1Hbits_t TMR1Hbits @ 0x01A;
// bitfield macros
#define _TMR1H_TMR1H_POSN                                   0x0
#define _TMR1H_TMR1H_POSITION                               0x0
#define _TMR1H_TMR1H_SIZE                                   0x8
#define _TMR1H_TMR1H_LENGTH                                 0x8
#define _TMR1H_TMR1H_MASK                                   0xFF

// Register: T1CON
extern volatile unsigned char           T1CON               @ 0x01B;
#ifndef _LIB_BUILD
asm("T1CON equ 01Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1ON                 :1;
        unsigned                        :1;
        unsigned T1SYNC                 :1;
        unsigned T1SOSC                 :1;
        unsigned T1CKPS                 :2;
        unsigned TMR1CS                 :2;
    };
    struct {
        unsigned                        :4;
        unsigned T1CKPS0                :1;
        unsigned T1CKPS1                :1;
        unsigned TMR1CS0                :1;
        unsigned TMR1CS1                :1;
    };
} T1CONbits_t;
extern volatile T1CONbits_t T1CONbits @ 0x01B;
// bitfield macros
#define _T1CON_TMR1ON_POSN                                  0x0
#define _T1CON_TMR1ON_POSITION                              0x0
#define _T1CON_TMR1ON_SIZE                                  0x1
#define _T1CON_TMR1ON_LENGTH                                0x1
#define _T1CON_TMR1ON_MASK                                  0x1
#define _T1CON_T1SYNC_POSN                                  0x2
#define _T1CON_T1SYNC_POSITION                              0x2
#define _T1CON_T1SYNC_SIZE                                  0x1
#define _T1CON_T1SYNC_LENGTH                                0x1
#define _T1CON_T1SYNC_MASK                                  0x4
#define _T1CON_T1SOSC_POSN                                  0x3
#define _T1CON_T1SOSC_POSITION                              0x3
#define _T1CON_T1SOSC_SIZE                                  0x1
#define _T1CON_T1SOSC_LENGTH                                0x1
#define _T1CON_T1SOSC_MASK                                  0x8
#define _T1CON_T1CKPS_POSN                                  0x4
#define _T1CON_T1CKPS_POSITION                              0x4
#define _T1CON_T1CKPS_SIZE                                  0x2
#define _T1CON_T1CKPS_LENGTH                                0x2
#define _T1CON_T1CKPS_MASK                                  0x30
#define _T1CON_TMR1CS_POSN                                  0x6
#define _T1CON_TMR1CS_POSITION                              0x6
#define _T1CON_TMR1CS_SIZE                                  0x2
#define _T1CON_TMR1CS_LENGTH                                0x2
#define _T1CON_TMR1CS_MASK                                  0xC0
#define _T1CON_T1CKPS0_POSN                                 0x4
#define _T1CON_T1CKPS0_POSITION                             0x4
#define _T1CON_T1CKPS0_SIZE                                 0x1
#define _T1CON_T1CKPS0_LENGTH                               0x1
#define _T1CON_T1CKPS0_MASK                                 0x10
#define _T1CON_T1CKPS1_POSN                                 0x5
#define _T1CON_T1CKPS1_POSITION                             0x5
#define _T1CON_T1CKPS1_SIZE                                 0x1
#define _T1CON_T1CKPS1_LENGTH                               0x1
#define _T1CON_T1CKPS1_MASK                                 0x20
#define _T1CON_TMR1CS0_POSN                                 0x6
#define _T1CON_TMR1CS0_POSITION                             0x6
#define _T1CON_TMR1CS0_SIZE                                 0x1
#define _T1CON_TMR1CS0_LENGTH                               0x1
#define _T1CON_TMR1CS0_MASK                                 0x40
#define _T1CON_TMR1CS1_POSN                                 0x7
#define _T1CON_TMR1CS1_POSITION                             0x7
#define _T1CON_TMR1CS1_SIZE                                 0x1
#define _T1CON_TMR1CS1_LENGTH                               0x1
#define _T1CON_TMR1CS1_MASK                                 0x80

// Register: T1GCON
extern volatile unsigned char           T1GCON              @ 0x01C;
#ifndef _LIB_BUILD
asm("T1GCON equ 01Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T1GSS                  :2;
        unsigned T1GVAL                 :1;
        unsigned T1GGO_nDONE            :1;
        unsigned T1GSPM                 :1;
        unsigned T1GTM                  :1;
        unsigned T1GPOL                 :1;
        unsigned TMR1GE                 :1;
    };
    struct {
        unsigned T1GSS0                 :1;
        unsigned T1GSS1                 :1;
    };
} T1GCONbits_t;
extern volatile T1GCONbits_t T1GCONbits @ 0x01C;
// bitfield macros
#define _T1GCON_T1GSS_POSN                                  0x0
#define _T1GCON_T1GSS_POSITION                              0x0
#define _T1GCON_T1GSS_SIZE                                  0x2
#define _T1GCON_T1GSS_LENGTH                                0x2
#define _T1GCON_T1GSS_MASK                                  0x3
#define _T1GCON_T1GVAL_POSN                                 0x2
#define _T1GCON_T1GVAL_POSITION                             0x2
#define _T1GCON_T1GVAL_SIZE                                 0x1
#define _T1GCON_T1GVAL_LENGTH                               0x1
#define _T1GCON_T1GVAL_MASK                                 0x4
#define _T1GCON_T1GGO_nDONE_POSN                            0x3
#define _T1GCON_T1GGO_nDONE_POSITION                        0x3
#define _T1GCON_T1GGO_nDONE_SIZE                            0x1
#define _T1GCON_T1GGO_nDONE_LENGTH                          0x1
#define _T1GCON_T1GGO_nDONE_MASK                            0x8
#define _T1GCON_T1GSPM_POSN                                 0x4
#define _T1GCON_T1GSPM_POSITION                             0x4
#define _T1GCON_T1GSPM_SIZE                                 0x1
#define _T1GCON_T1GSPM_LENGTH                               0x1
#define _T1GCON_T1GSPM_MASK                                 0x10
#define _T1GCON_T1GTM_POSN                                  0x5
#define _T1GCON_T1GTM_POSITION                              0x5
#define _T1GCON_T1GTM_SIZE                                  0x1
#define _T1GCON_T1GTM_LENGTH                                0x1
#define _T1GCON_T1GTM_MASK                                  0x20
#define _T1GCON_T1GPOL_POSN                                 0x6
#define _T1GCON_T1GPOL_POSITION                             0x6
#define _T1GCON_T1GPOL_SIZE                                 0x1
#define _T1GCON_T1GPOL_LENGTH                               0x1
#define _T1GCON_T1GPOL_MASK                                 0x40
#define _T1GCON_TMR1GE_POSN                                 0x7
#define _T1GCON_TMR1GE_POSITION                             0x7
#define _T1GCON_TMR1GE_SIZE                                 0x1
#define _T1GCON_TMR1GE_LENGTH                               0x1
#define _T1GCON_TMR1GE_MASK                                 0x80
#define _T1GCON_T1GSS0_POSN                                 0x0
#define _T1GCON_T1GSS0_POSITION                             0x0
#define _T1GCON_T1GSS0_SIZE                                 0x1
#define _T1GCON_T1GSS0_LENGTH                               0x1
#define _T1GCON_T1GSS0_MASK                                 0x1
#define _T1GCON_T1GSS1_POSN                                 0x1
#define _T1GCON_T1GSS1_POSITION                             0x1
#define _T1GCON_T1GSS1_SIZE                                 0x1
#define _T1GCON_T1GSS1_LENGTH                               0x1
#define _T1GCON_T1GSS1_MASK                                 0x2

// Register: TMR2
extern volatile unsigned char           TMR2                @ 0x01D;
#ifndef _LIB_BUILD
asm("TMR2 equ 01Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR2                   :8;
    };
} TMR2bits_t;
extern volatile TMR2bits_t TMR2bits @ 0x01D;
// bitfield macros
#define _TMR2_TMR2_POSN                                     0x0
#define _TMR2_TMR2_POSITION                                 0x0
#define _TMR2_TMR2_SIZE                                     0x8
#define _TMR2_TMR2_LENGTH                                   0x8
#define _TMR2_TMR2_MASK                                     0xFF

// Register: PR2
extern volatile unsigned char           PR2                 @ 0x01E;
#ifndef _LIB_BUILD
asm("PR2 equ 01Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR2                    :8;
    };
} PR2bits_t;
extern volatile PR2bits_t PR2bits @ 0x01E;
// bitfield macros
#define _PR2_PR2_POSN                                       0x0
#define _PR2_PR2_POSITION                                   0x0
#define _PR2_PR2_SIZE                                       0x8
#define _PR2_PR2_LENGTH                                     0x8
#define _PR2_PR2_MASK                                       0xFF

// Register: T2CON
extern volatile unsigned char           T2CON               @ 0x01F;
#ifndef _LIB_BUILD
asm("T2CON equ 01Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T2CKPS                 :2;
        unsigned TMR2ON                 :1;
        unsigned T2OUTPS                :4;
    };
    struct {
        unsigned T2CKPS0                :1;
        unsigned T2CKPS1                :1;
        unsigned                        :1;
        unsigned T2OUTPS0               :1;
        unsigned T2OUTPS1               :1;
        unsigned T2OUTPS2               :1;
        unsigned T2OUTPS3               :1;
    };
} T2CONbits_t;
extern volatile T2CONbits_t T2CONbits @ 0x01F;
// bitfield macros
#define _T2CON_T2CKPS_POSN                                  0x0
#define _T2CON_T2CKPS_POSITION                              0x0
#define _T2CON_T2CKPS_SIZE                                  0x2
#define _T2CON_T2CKPS_LENGTH                                0x2
#define _T2CON_T2CKPS_MASK                                  0x3
#define _T2CON_TMR2ON_POSN                                  0x2
#define _T2CON_TMR2ON_POSITION                              0x2
#define _T2CON_TMR2ON_SIZE                                  0x1
#define _T2CON_TMR2ON_LENGTH                                0x1
#define _T2CON_TMR2ON_MASK                                  0x4
#define _T2CON_T2OUTPS_POSN                                 0x3
#define _T2CON_T2OUTPS_POSITION                             0x3
#define _T2CON_T2OUTPS_SIZE                                 0x4
#define _T2CON_T2OUTPS_LENGTH                               0x4
#define _T2CON_T2OUTPS_MASK                                 0x78
#define _T2CON_T2CKPS0_POSN                                 0x0
#define _T2CON_T2CKPS0_POSITION                             0x0
#define _T2CON_T2CKPS0_SIZE                                 0x1
#define _T2CON_T2CKPS0_LENGTH                               0x1
#define _T2CON_T2CKPS0_MASK                                 0x1
#define _T2CON_T2CKPS1_POSN                                 0x1
#define _T2CON_T2CKPS1_POSITION                             0x1
#define _T2CON_T2CKPS1_SIZE                                 0x1
#define _T2CON_T2CKPS1_LENGTH                               0x1
#define _T2CON_T2CKPS1_MASK                                 0x2
#define _T2CON_T2OUTPS0_POSN                                0x3
#define _T2CON_T2OUTPS0_POSITION                            0x3
#define _T2CON_T2OUTPS0_SIZE                                0x1
#define _T2CON_T2OUTPS0_LENGTH                              0x1
#define _T2CON_T2OUTPS0_MASK                                0x8
#define _T2CON_T2OUTPS1_POSN                                0x4
#define _T2CON_T2OUTPS1_POSITION                            0x4
#define _T2CON_T2OUTPS1_SIZE                                0x1
#define _T2CON_T2OUTPS1_LENGTH                              0x1
#define _T2CON_T2OUTPS1_MASK                                0x10
#define _T2CON_T2OUTPS2_POSN                                0x5
#define _T2CON_T2OUTPS2_POSITION                            0x5
#define _T2CON_T2OUTPS2_SIZE                                0x1
#define _T2CON_T2OUTPS2_LENGTH                              0x1
#define _T2CON_T2OUTPS2_MASK                                0x20
#define _T2CON_T2OUTPS3_POSN                                0x6
#define _T2CON_T2OUTPS3_POSITION                            0x6
#define _T2CON_T2OUTPS3_SIZE                                0x1
#define _T2CON_T2OUTPS3_LENGTH                              0x1
#define _T2CON_T2OUTPS3_MASK                                0x40

// Register: TRISA
extern volatile unsigned char           TRISA               @ 0x08C;
#ifndef _LIB_BUILD
asm("TRISA equ 08Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISA0                 :1;
        unsigned TRISA1                 :1;
        unsigned TRISA2                 :1;
        unsigned                        :1;
        unsigned TRISA4                 :1;
        unsigned TRISA5                 :1;
    };
} TRISAbits_t;
extern volatile TRISAbits_t TRISAbits @ 0x08C;
// bitfield macros
#define _TRISA_TRISA0_POSN                                  0x0
#define _TRISA_TRISA0_POSITION                              0x0
#define _TRISA_TRISA0_SIZE                                  0x1
#define _TRISA_TRISA0_LENGTH                                0x1
#define _TRISA_TRISA0_MASK                                  0x1
#define _TRISA_TRISA1_POSN                                  0x1
#define _TRISA_TRISA1_POSITION                              0x1
#define _TRISA_TRISA1_SIZE                                  0x1
#define _TRISA_TRISA1_LENGTH                                0x1
#define _TRISA_TRISA1_MASK                                  0x2
#define _TRISA_TRISA2_POSN                                  0x2
#define _TRISA_TRISA2_POSITION                              0x2
#define _TRISA_TRISA2_SIZE                                  0x1
#define _TRISA_TRISA2_LENGTH                                0x1
#define _TRISA_TRISA2_MASK                                  0x4
#define _TRISA_TRISA4_POSN                                  0x4
#define _TRISA_TRISA4_POSITION                              0x4
#define _TRISA_TRISA4_SIZE                                  0x1
#define _TRISA_TRISA4_LENGTH                                0x1
#define _TRISA_TRISA4_MASK                                  0x10
#define _TRISA_TRISA5_POSN                                  0x5
#define _TRISA_TRISA5_POSITION                              0x5
#define _TRISA_TRISA5_SIZE                                  0x1
#define _TRISA_TRISA5_LENGTH                                0x1
#define _TRISA_TRISA5_MASK                                  0x20

// Register: TRISC
extern volatile unsigned char           TRISC               @ 0x08E;
#ifndef _LIB_BUILD
asm("TRISC equ 08Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISC0                 :1;
        unsigned TRISC1                 :1;
        unsigned TRISC2                 :1;
        unsigned TRISC3                 :1;
        unsigned TRISC4                 :1;
        unsigned TRISC5                 :1;
    };
} TRISCbits_t;
extern volatile TRISCbits_t TRISCbits @ 0x08E;
// bitfield macros
#define _TRISC_TRISC0_POSN                                  0x0
#define _TRISC_TRISC0_POSITION                              0x0
#define _TRISC_TRISC0_SIZE                                  0x1
#define _TRISC_TRISC0_LENGTH                                0x1
#define _TRISC_TRISC0_MASK                                  0x1
#define _TRISC_TRISC1_POSN                                  0x1
#define _TRISC_TRISC1_POSITION                              0x1
#define _TRISC_TRISC1_SIZE                                  0x1
#define _TRISC_TRISC1_LENGTH                                0x1
#define _TRISC_TRISC1_MASK                                  0x2
#define _TRISC_TRISC2_POSN                                  0x2
#define _TRISC_TRISC2_POSITION                              0x2
#define _TRISC_TRISC2_SIZE                                  0x1
#define _TRISC_TRISC2_LENGTH                                0x1
#define _TRISC_TRISC2_MASK                                  0x4
#define _TRISC_TRISC3_POSN                                  0x3
#define _TRISC_TRISC3_POSITION                              0x3
#define _TRISC_TRISC3_SIZE                                  0x1
#define _TRISC_TRISC3_LENGTH                                0x1
#define _TRISC_TRISC3_MASK                                  0x8
#define _TRISC_TRISC4_POSN                                  0x4
#define _TRISC_TRISC4_POSITION                              0x4
#define _TRISC_TRISC4_SIZE                                  0x1
#define _TRISC_TRISC4_LENGTH                                0x1
#define _TRISC_TRISC4_MASK                                  0x10
#define _TRISC_TRISC5_POSN                                  0x5
#define _TRISC_TRISC5_POSITION                              0x5
#define _TRISC_TRISC5_SIZE                                  0x1
#define _TRISC_TRISC5_LENGTH                                0x1
#define _TRISC_TRISC5_MASK                                  0x20

// Register: PIE0
extern volatile unsigned char           PIE0                @ 0x090;
#ifndef _LIB_BUILD
asm("PIE0 equ 090h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTE                   :1;
        unsigned                        :3;
        unsigned IOCIE                  :1;
        unsigned TMR0IE                 :1;
    };
} PIE0bits_t;
extern volatile PIE0bits_t PIE0bits @ 0x090;
// bitfield macros
#define _PIE0_INTE_POSN                                     0x0
#define _PIE0_INTE_POSITION                                 0x0
#define _PIE0_INTE_SIZE                                     0x1
#define _PIE0_INTE_LENGTH                                   0x1
#define _PIE0_INTE_MASK                                     0x1
#define _PIE0_IOCIE_POSN                                    0x4
#define _PIE0_IOCIE_POSITION                                0x4
#define _PIE0_IOCIE_SIZE                                    0x1
#define _PIE0_IOCIE_LENGTH                                  0x1
#define _PIE0_IOCIE_MASK                                    0x10
#define _PIE0_TMR0IE_POSN                                   0x5
#define _PIE0_TMR0IE_POSITION                               0x5
#define _PIE0_TMR0IE_SIZE                                   0x1
#define _PIE0_TMR0IE_LENGTH                                 0x1
#define _PIE0_TMR0IE_MASK                                   0x20

// Register: PIE1
extern volatile unsigned char           PIE1                @ 0x091;
#ifndef _LIB_BUILD
asm("PIE1 equ 091h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IE                 :1;
        unsigned TMR2IE                 :1;
        unsigned BCL1IE                 :1;
        unsigned SSP1IE                 :1;
        unsigned TXIE                   :1;
        unsigned RCIE                   :1;
        unsigned ADIE                   :1;
        unsigned TMR1GIE                :1;
    };
} PIE1bits_t;
extern volatile PIE1bits_t PIE1bits @ 0x091;
// bitfield macros
#define _PIE1_TMR1IE_POSN                                   0x0
#define _PIE1_TMR1IE_POSITION                               0x0
#define _PIE1_TMR1IE_SIZE                                   0x1
#define _PIE1_TMR1IE_LENGTH                                 0x1
#define _PIE1_TMR1IE_MASK                                   0x1
#define _PIE1_TMR2IE_POSN                                   0x1
#define _PIE1_TMR2IE_POSITION                               0x1
#define _PIE1_TMR2IE_SIZE                                   0x1
#define _PIE1_TMR2IE_LENGTH                                 0x1
#define _PIE1_TMR2IE_MASK                                   0x2
#define _PIE1_BCL1IE_POSN                                   0x2
#define _PIE1_BCL1IE_POSITION                               0x2
#define _PIE1_BCL1IE_SIZE                                   0x1
#define _PIE1_BCL1IE_LENGTH                                 0x1
#define _PIE1_BCL1IE_MASK                                   0x4
#define _PIE1_SSP1IE_POSN                                   0x3
#define _PIE1_SSP1IE_POSITION                               0x3
#define _PIE1_SSP1IE_SIZE                                   0x1
#define _PIE1_SSP1IE_LENGTH                                 0x1
#define _PIE1_SSP1IE_MASK                                   0x8
#define _PIE1_TXIE_POSN                                     0x4
#define _PIE1_TXIE_POSITION                                 0x4
#define _PIE1_TXIE_SIZE                                     0x1
#define _PIE1_TXIE_LENGTH                                   0x1
#define _PIE1_TXIE_MASK                                     0x10
#define _PIE1_RCIE_POSN                                     0x5
#define _PIE1_RCIE_POSITION                                 0x5
#define _PIE1_RCIE_SIZE                                     0x1
#define _PIE1_RCIE_LENGTH                                   0x1
#define _PIE1_RCIE_MASK                                     0x20
#define _PIE1_ADIE_POSN                                     0x6
#define _PIE1_ADIE_POSITION                                 0x6
#define _PIE1_ADIE_SIZE                                     0x1
#define _PIE1_ADIE_LENGTH                                   0x1
#define _PIE1_ADIE_MASK                                     0x40
#define _PIE1_TMR1GIE_POSN                                  0x7
#define _PIE1_TMR1GIE_POSITION                              0x7
#define _PIE1_TMR1GIE_SIZE                                  0x1
#define _PIE1_TMR1GIE_LENGTH                                0x1
#define _PIE1_TMR1GIE_MASK                                  0x80

// Register: PIE2
extern volatile unsigned char           PIE2                @ 0x092;
#ifndef _LIB_BUILD
asm("PIE2 equ 092h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCO1IE                 :1;
        unsigned TMR4IE                 :1;
        unsigned                        :2;
        unsigned NVMIE                  :1;
        unsigned C1IE                   :1;
        unsigned C2IE                   :1;
        unsigned TMR6IE                 :1;
    };
} PIE2bits_t;
extern volatile PIE2bits_t PIE2bits @ 0x092;
// bitfield macros
#define _PIE2_NCO1IE_POSN                                   0x0
#define _PIE2_NCO1IE_POSITION                               0x0
#define _PIE2_NCO1IE_SIZE                                   0x1
#define _PIE2_NCO1IE_LENGTH                                 0x1
#define _PIE2_NCO1IE_MASK                                   0x1
#define _PIE2_TMR4IE_POSN                                   0x1
#define _PIE2_TMR4IE_POSITION                               0x1
#define _PIE2_TMR4IE_SIZE                                   0x1
#define _PIE2_TMR4IE_LENGTH                                 0x1
#define _PIE2_TMR4IE_MASK                                   0x2
#define _PIE2_NVMIE_POSN                                    0x4
#define _PIE2_NVMIE_POSITION                                0x4
#define _PIE2_NVMIE_SIZE                                    0x1
#define _PIE2_NVMIE_LENGTH                                  0x1
#define _PIE2_NVMIE_MASK                                    0x10
#define _PIE2_C1IE_POSN                                     0x5
#define _PIE2_C1IE_POSITION                                 0x5
#define _PIE2_C1IE_SIZE                                     0x1
#define _PIE2_C1IE_LENGTH                                   0x1
#define _PIE2_C1IE_MASK                                     0x20
#define _PIE2_C2IE_POSN                                     0x6
#define _PIE2_C2IE_POSITION                                 0x6
#define _PIE2_C2IE_SIZE                                     0x1
#define _PIE2_C2IE_LENGTH                                   0x1
#define _PIE2_C2IE_MASK                                     0x40
#define _PIE2_TMR6IE_POSN                                   0x7
#define _PIE2_TMR6IE_POSITION                               0x7
#define _PIE2_TMR6IE_SIZE                                   0x1
#define _PIE2_TMR6IE_LENGTH                                 0x1
#define _PIE2_TMR6IE_MASK                                   0x80

// Register: PIE3
extern volatile unsigned char           PIE3                @ 0x093;
#ifndef _LIB_BUILD
asm("PIE3 equ 093h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLC1IE                 :1;
        unsigned CLC2IE                 :1;
        unsigned CLC3IE                 :1;
        unsigned CLC4IE                 :1;
        unsigned TMR3IE                 :1;
        unsigned TMR3GIE                :1;
        unsigned CSWIE                  :1;
        unsigned OSFIE                  :1;
    };
} PIE3bits_t;
extern volatile PIE3bits_t PIE3bits @ 0x093;
// bitfield macros
#define _PIE3_CLC1IE_POSN                                   0x0
#define _PIE3_CLC1IE_POSITION                               0x0
#define _PIE3_CLC1IE_SIZE                                   0x1
#define _PIE3_CLC1IE_LENGTH                                 0x1
#define _PIE3_CLC1IE_MASK                                   0x1
#define _PIE3_CLC2IE_POSN                                   0x1
#define _PIE3_CLC2IE_POSITION                               0x1
#define _PIE3_CLC2IE_SIZE                                   0x1
#define _PIE3_CLC2IE_LENGTH                                 0x1
#define _PIE3_CLC2IE_MASK                                   0x2
#define _PIE3_CLC3IE_POSN                                   0x2
#define _PIE3_CLC3IE_POSITION                               0x2
#define _PIE3_CLC3IE_SIZE                                   0x1
#define _PIE3_CLC3IE_LENGTH                                 0x1
#define _PIE3_CLC3IE_MASK                                   0x4
#define _PIE3_CLC4IE_POSN                                   0x3
#define _PIE3_CLC4IE_POSITION                               0x3
#define _PIE3_CLC4IE_SIZE                                   0x1
#define _PIE3_CLC4IE_LENGTH                                 0x1
#define _PIE3_CLC4IE_MASK                                   0x8
#define _PIE3_TMR3IE_POSN                                   0x4
#define _PIE3_TMR3IE_POSITION                               0x4
#define _PIE3_TMR3IE_SIZE                                   0x1
#define _PIE3_TMR3IE_LENGTH                                 0x1
#define _PIE3_TMR3IE_MASK                                   0x10
#define _PIE3_TMR3GIE_POSN                                  0x5
#define _PIE3_TMR3GIE_POSITION                              0x5
#define _PIE3_TMR3GIE_SIZE                                  0x1
#define _PIE3_TMR3GIE_LENGTH                                0x1
#define _PIE3_TMR3GIE_MASK                                  0x20
#define _PIE3_CSWIE_POSN                                    0x6
#define _PIE3_CSWIE_POSITION                                0x6
#define _PIE3_CSWIE_SIZE                                    0x1
#define _PIE3_CSWIE_LENGTH                                  0x1
#define _PIE3_CSWIE_MASK                                    0x40
#define _PIE3_OSFIE_POSN                                    0x7
#define _PIE3_OSFIE_POSITION                                0x7
#define _PIE3_OSFIE_SIZE                                    0x1
#define _PIE3_OSFIE_LENGTH                                  0x1
#define _PIE3_OSFIE_MASK                                    0x80

// Register: PIE4
extern volatile unsigned char           PIE4                @ 0x094;
#ifndef _LIB_BUILD
asm("PIE4 equ 094h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP1IE                 :1;
        unsigned CCP2IE                 :1;
        unsigned CCP3IE                 :1;
        unsigned CCP4IE                 :1;
        unsigned TMR5IE                 :1;
        unsigned TMR5GIE                :1;
        unsigned CWG1IE                 :1;
        unsigned CWG2IE                 :1;
    };
} PIE4bits_t;
extern volatile PIE4bits_t PIE4bits @ 0x094;
// bitfield macros
#define _PIE4_CCP1IE_POSN                                   0x0
#define _PIE4_CCP1IE_POSITION                               0x0
#define _PIE4_CCP1IE_SIZE                                   0x1
#define _PIE4_CCP1IE_LENGTH                                 0x1
#define _PIE4_CCP1IE_MASK                                   0x1
#define _PIE4_CCP2IE_POSN                                   0x1
#define _PIE4_CCP2IE_POSITION                               0x1
#define _PIE4_CCP2IE_SIZE                                   0x1
#define _PIE4_CCP2IE_LENGTH                                 0x1
#define _PIE4_CCP2IE_MASK                                   0x2
#define _PIE4_CCP3IE_POSN                                   0x2
#define _PIE4_CCP3IE_POSITION                               0x2
#define _PIE4_CCP3IE_SIZE                                   0x1
#define _PIE4_CCP3IE_LENGTH                                 0x1
#define _PIE4_CCP3IE_MASK                                   0x4
#define _PIE4_CCP4IE_POSN                                   0x3
#define _PIE4_CCP4IE_POSITION                               0x3
#define _PIE4_CCP4IE_SIZE                                   0x1
#define _PIE4_CCP4IE_LENGTH                                 0x1
#define _PIE4_CCP4IE_MASK                                   0x8
#define _PIE4_TMR5IE_POSN                                   0x4
#define _PIE4_TMR5IE_POSITION                               0x4
#define _PIE4_TMR5IE_SIZE                                   0x1
#define _PIE4_TMR5IE_LENGTH                                 0x1
#define _PIE4_TMR5IE_MASK                                   0x10
#define _PIE4_TMR5GIE_POSN                                  0x5
#define _PIE4_TMR5GIE_POSITION                              0x5
#define _PIE4_TMR5GIE_SIZE                                  0x1
#define _PIE4_TMR5GIE_LENGTH                                0x1
#define _PIE4_TMR5GIE_MASK                                  0x20
#define _PIE4_CWG1IE_POSN                                   0x6
#define _PIE4_CWG1IE_POSITION                               0x6
#define _PIE4_CWG1IE_SIZE                                   0x1
#define _PIE4_CWG1IE_LENGTH                                 0x1
#define _PIE4_CWG1IE_MASK                                   0x40
#define _PIE4_CWG2IE_POSN                                   0x7
#define _PIE4_CWG2IE_POSITION                               0x7
#define _PIE4_CWG2IE_SIZE                                   0x1
#define _PIE4_CWG2IE_LENGTH                                 0x1
#define _PIE4_CWG2IE_MASK                                   0x80

// Register: WDTCON
extern volatile unsigned char           WDTCON              @ 0x097;
#ifndef _LIB_BUILD
asm("WDTCON equ 097h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SWDTEN                 :1;
        unsigned WDTPS                  :5;
    };
    struct {
        unsigned                        :1;
        unsigned WDTPS0                 :1;
        unsigned WDTPS1                 :1;
        unsigned WDTPS2                 :1;
        unsigned WDTPS3                 :1;
        unsigned WDTPS4                 :1;
    };
} WDTCONbits_t;
extern volatile WDTCONbits_t WDTCONbits @ 0x097;
// bitfield macros
#define _WDTCON_SWDTEN_POSN                                 0x0
#define _WDTCON_SWDTEN_POSITION                             0x0
#define _WDTCON_SWDTEN_SIZE                                 0x1
#define _WDTCON_SWDTEN_LENGTH                               0x1
#define _WDTCON_SWDTEN_MASK                                 0x1
#define _WDTCON_WDTPS_POSN                                  0x1
#define _WDTCON_WDTPS_POSITION                              0x1
#define _WDTCON_WDTPS_SIZE                                  0x5
#define _WDTCON_WDTPS_LENGTH                                0x5
#define _WDTCON_WDTPS_MASK                                  0x3E
#define _WDTCON_WDTPS0_POSN                                 0x1
#define _WDTCON_WDTPS0_POSITION                             0x1
#define _WDTCON_WDTPS0_SIZE                                 0x1
#define _WDTCON_WDTPS0_LENGTH                               0x1
#define _WDTCON_WDTPS0_MASK                                 0x2
#define _WDTCON_WDTPS1_POSN                                 0x2
#define _WDTCON_WDTPS1_POSITION                             0x2
#define _WDTCON_WDTPS1_SIZE                                 0x1
#define _WDTCON_WDTPS1_LENGTH                               0x1
#define _WDTCON_WDTPS1_MASK                                 0x4
#define _WDTCON_WDTPS2_POSN                                 0x3
#define _WDTCON_WDTPS2_POSITION                             0x3
#define _WDTCON_WDTPS2_SIZE                                 0x1
#define _WDTCON_WDTPS2_LENGTH                               0x1
#define _WDTCON_WDTPS2_MASK                                 0x8
#define _WDTCON_WDTPS3_POSN                                 0x4
#define _WDTCON_WDTPS3_POSITION                             0x4
#define _WDTCON_WDTPS3_SIZE                                 0x1
#define _WDTCON_WDTPS3_LENGTH                               0x1
#define _WDTCON_WDTPS3_MASK                                 0x10
#define _WDTCON_WDTPS4_POSN                                 0x5
#define _WDTCON_WDTPS4_POSITION                             0x5
#define _WDTCON_WDTPS4_SIZE                                 0x1
#define _WDTCON_WDTPS4_LENGTH                               0x1
#define _WDTCON_WDTPS4_MASK                                 0x20

// Register: ADRES
extern volatile unsigned short          ADRES               @ 0x09B;
#ifndef _LIB_BUILD
asm("ADRES equ 09Bh");
#endif

// Register: ADRESL
extern volatile unsigned char           ADRESL              @ 0x09B;
#ifndef _LIB_BUILD
asm("ADRESL equ 09Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADRESL                 :8;
    };
} ADRESLbits_t;
extern volatile ADRESLbits_t ADRESLbits @ 0x09B;
// bitfield macros
#define _ADRESL_ADRESL_POSN                                 0x0
#define _ADRESL_ADRESL_POSITION                             0x0
#define _ADRESL_ADRESL_SIZE                                 0x8
#define _ADRESL_ADRESL_LENGTH                               0x8
#define _ADRESL_ADRESL_MASK                                 0xFF

// Register: ADRESH
extern volatile unsigned char           ADRESH              @ 0x09C;
#ifndef _LIB_BUILD
asm("ADRESH equ 09Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADRESH                 :8;
    };
} ADRESHbits_t;
extern volatile ADRESHbits_t ADRESHbits @ 0x09C;
// bitfield macros
#define _ADRESH_ADRESH_POSN                                 0x0
#define _ADRESH_ADRESH_POSITION                             0x0
#define _ADRESH_ADRESH_SIZE                                 0x8
#define _ADRESH_ADRESH_LENGTH                               0x8
#define _ADRESH_ADRESH_MASK                                 0xFF

// Register: ADCON0
extern volatile unsigned char           ADCON0              @ 0x09D;
#ifndef _LIB_BUILD
asm("ADCON0 equ 09Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADON                   :1;
        unsigned GO_nDONE               :1;
        unsigned CHS                    :6;
    };
    struct {
        unsigned                        :1;
        unsigned ADGO                   :1;
        unsigned CHS0                   :1;
        unsigned CHS1                   :1;
        unsigned CHS2                   :1;
        unsigned CHS3                   :1;
        unsigned CHS4                   :1;
        unsigned CHS5                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned GO                     :1;
    };
} ADCON0bits_t;
extern volatile ADCON0bits_t ADCON0bits @ 0x09D;
// bitfield macros
#define _ADCON0_ADON_POSN                                   0x0
#define _ADCON0_ADON_POSITION                               0x0
#define _ADCON0_ADON_SIZE                                   0x1
#define _ADCON0_ADON_LENGTH                                 0x1
#define _ADCON0_ADON_MASK                                   0x1
#define _ADCON0_GO_nDONE_POSN                               0x1
#define _ADCON0_GO_nDONE_POSITION                           0x1
#define _ADCON0_GO_nDONE_SIZE                               0x1
#define _ADCON0_GO_nDONE_LENGTH                             0x1
#define _ADCON0_GO_nDONE_MASK                               0x2
#define _ADCON0_CHS_POSN                                    0x2
#define _ADCON0_CHS_POSITION                                0x2
#define _ADCON0_CHS_SIZE                                    0x6
#define _ADCON0_CHS_LENGTH                                  0x6
#define _ADCON0_CHS_MASK                                    0xFC
#define _ADCON0_ADGO_POSN                                   0x1
#define _ADCON0_ADGO_POSITION                               0x1
#define _ADCON0_ADGO_SIZE                                   0x1
#define _ADCON0_ADGO_LENGTH                                 0x1
#define _ADCON0_ADGO_MASK                                   0x2
#define _ADCON0_CHS0_POSN                                   0x2
#define _ADCON0_CHS0_POSITION                               0x2
#define _ADCON0_CHS0_SIZE                                   0x1
#define _ADCON0_CHS0_LENGTH                                 0x1
#define _ADCON0_CHS0_MASK                                   0x4
#define _ADCON0_CHS1_POSN                                   0x3
#define _ADCON0_CHS1_POSITION                               0x3
#define _ADCON0_CHS1_SIZE                                   0x1
#define _ADCON0_CHS1_LENGTH                                 0x1
#define _ADCON0_CHS1_MASK                                   0x8
#define _ADCON0_CHS2_POSN                                   0x4
#define _ADCON0_CHS2_POSITION                               0x4
#define _ADCON0_CHS2_SIZE                                   0x1
#define _ADCON0_CHS2_LENGTH                                 0x1
#define _ADCON0_CHS2_MASK                                   0x10
#define _ADCON0_CHS3_POSN                                   0x5
#define _ADCON0_CHS3_POSITION                               0x5
#define _ADCON0_CHS3_SIZE                                   0x1
#define _ADCON0_CHS3_LENGTH                                 0x1
#define _ADCON0_CHS3_MASK                                   0x20
#define _ADCON0_CHS4_POSN                                   0x6
#define _ADCON0_CHS4_POSITION                               0x6
#define _ADCON0_CHS4_SIZE                                   0x1
#define _ADCON0_CHS4_LENGTH                                 0x1
#define _ADCON0_CHS4_MASK                                   0x40
#define _ADCON0_CHS5_POSN                                   0x7
#define _ADCON0_CHS5_POSITION                               0x7
#define _ADCON0_CHS5_SIZE                                   0x1
#define _ADCON0_CHS5_LENGTH                                 0x1
#define _ADCON0_CHS5_MASK                                   0x80
#define _ADCON0_GO_POSN                                     0x1
#define _ADCON0_GO_POSITION                                 0x1
#define _ADCON0_GO_SIZE                                     0x1
#define _ADCON0_GO_LENGTH                                   0x1
#define _ADCON0_GO_MASK                                     0x2

// Register: ADCON1
extern volatile unsigned char           ADCON1              @ 0x09E;
#ifndef _LIB_BUILD
asm("ADCON1 equ 09Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADPREF                 :2;
        unsigned ADNREF                 :1;
        unsigned                        :1;
        unsigned ADCS                   :3;
        unsigned ADFM                   :1;
    };
    struct {
        unsigned ADPREF0                :1;
        unsigned ADPREF1                :1;
        unsigned                        :2;
        unsigned ADCS0                  :1;
        unsigned ADCS1                  :1;
        unsigned ADCS2                  :1;
    };
} ADCON1bits_t;
extern volatile ADCON1bits_t ADCON1bits @ 0x09E;
// bitfield macros
#define _ADCON1_ADPREF_POSN                                 0x0
#define _ADCON1_ADPREF_POSITION                             0x0
#define _ADCON1_ADPREF_SIZE                                 0x2
#define _ADCON1_ADPREF_LENGTH                               0x2
#define _ADCON1_ADPREF_MASK                                 0x3
#define _ADCON1_ADNREF_POSN                                 0x2
#define _ADCON1_ADNREF_POSITION                             0x2
#define _ADCON1_ADNREF_SIZE                                 0x1
#define _ADCON1_ADNREF_LENGTH                               0x1
#define _ADCON1_ADNREF_MASK                                 0x4
#define _ADCON1_ADCS_POSN                                   0x4
#define _ADCON1_ADCS_POSITION                               0x4
#define _ADCON1_ADCS_SIZE                                   0x3
#define _ADCON1_ADCS_LENGTH                                 0x3
#define _ADCON1_ADCS_MASK                                   0x70
#define _ADCON1_ADFM_POSN                                   0x7
#define _ADCON1_ADFM_POSITION                               0x7
#define _ADCON1_ADFM_SIZE                                   0x1
#define _ADCON1_ADFM_LENGTH                                 0x1
#define _ADCON1_ADFM_MASK                                   0x80
#define _ADCON1_ADPREF0_POSN                                0x0
#define _ADCON1_ADPREF0_POSITION                            0x0
#define _ADCON1_ADPREF0_SIZE                                0x1
#define _ADCON1_ADPREF0_LENGTH                              0x1
#define _ADCON1_ADPREF0_MASK                                0x1
#define _ADCON1_ADPREF1_POSN                                0x1
#define _ADCON1_ADPREF1_POSITION                            0x1
#define _ADCON1_ADPREF1_SIZE                                0x1
#define _ADCON1_ADPREF1_LENGTH                              0x1
#define _ADCON1_ADPREF1_MASK                                0x2
#define _ADCON1_ADCS0_POSN                                  0x4
#define _ADCON1_ADCS0_POSITION                              0x4
#define _ADCON1_ADCS0_SIZE                                  0x1
#define _ADCON1_ADCS0_LENGTH                                0x1
#define _ADCON1_ADCS0_MASK                                  0x10
#define _ADCON1_ADCS1_POSN                                  0x5
#define _ADCON1_ADCS1_POSITION                              0x5
#define _ADCON1_ADCS1_SIZE                                  0x1
#define _ADCON1_ADCS1_LENGTH                                0x1
#define _ADCON1_ADCS1_MASK                                  0x20
#define _ADCON1_ADCS2_POSN                                  0x6
#define _ADCON1_ADCS2_POSITION                              0x6
#define _ADCON1_ADCS2_SIZE                                  0x1
#define _ADCON1_ADCS2_LENGTH                                0x1
#define _ADCON1_ADCS2_MASK                                  0x40

// Register: ADACT
extern volatile unsigned char           ADACT               @ 0x09F;
#ifndef _LIB_BUILD
asm("ADACT equ 09Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADACT                  :5;
    };
    struct {
        unsigned ADACT0                 :1;
        unsigned ADACT1                 :1;
        unsigned ADACT2                 :1;
        unsigned ADACT3                 :1;
        unsigned ADACT4                 :1;
    };
} ADACTbits_t;
extern volatile ADACTbits_t ADACTbits @ 0x09F;
// bitfield macros
#define _ADACT_ADACT_POSN                                   0x0
#define _ADACT_ADACT_POSITION                               0x0
#define _ADACT_ADACT_SIZE                                   0x5
#define _ADACT_ADACT_LENGTH                                 0x5
#define _ADACT_ADACT_MASK                                   0x1F
#define _ADACT_ADACT0_POSN                                  0x0
#define _ADACT_ADACT0_POSITION                              0x0
#define _ADACT_ADACT0_SIZE                                  0x1
#define _ADACT_ADACT0_LENGTH                                0x1
#define _ADACT_ADACT0_MASK                                  0x1
#define _ADACT_ADACT1_POSN                                  0x1
#define _ADACT_ADACT1_POSITION                              0x1
#define _ADACT_ADACT1_SIZE                                  0x1
#define _ADACT_ADACT1_LENGTH                                0x1
#define _ADACT_ADACT1_MASK                                  0x2
#define _ADACT_ADACT2_POSN                                  0x2
#define _ADACT_ADACT2_POSITION                              0x2
#define _ADACT_ADACT2_SIZE                                  0x1
#define _ADACT_ADACT2_LENGTH                                0x1
#define _ADACT_ADACT2_MASK                                  0x4
#define _ADACT_ADACT3_POSN                                  0x3
#define _ADACT_ADACT3_POSITION                              0x3
#define _ADACT_ADACT3_SIZE                                  0x1
#define _ADACT_ADACT3_LENGTH                                0x1
#define _ADACT_ADACT3_MASK                                  0x8
#define _ADACT_ADACT4_POSN                                  0x4
#define _ADACT_ADACT4_POSITION                              0x4
#define _ADACT_ADACT4_SIZE                                  0x1
#define _ADACT_ADACT4_LENGTH                                0x1
#define _ADACT_ADACT4_MASK                                  0x10

// Register: LATA
extern volatile unsigned char           LATA                @ 0x10C;
#ifndef _LIB_BUILD
asm("LATA equ 010Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATA0                  :1;
        unsigned LATA1                  :1;
        unsigned LATA2                  :1;
        unsigned                        :1;
        unsigned LATA4                  :1;
        unsigned LATA5                  :1;
    };
} LATAbits_t;
extern volatile LATAbits_t LATAbits @ 0x10C;
// bitfield macros
#define _LATA_LATA0_POSN                                    0x0
#define _LATA_LATA0_POSITION                                0x0
#define _LATA_LATA0_SIZE                                    0x1
#define _LATA_LATA0_LENGTH                                  0x1
#define _LATA_LATA0_MASK                                    0x1
#define _LATA_LATA1_POSN                                    0x1
#define _LATA_LATA1_POSITION                                0x1
#define _LATA_LATA1_SIZE                                    0x1
#define _LATA_LATA1_LENGTH                                  0x1
#define _LATA_LATA1_MASK                                    0x2
#define _LATA_LATA2_POSN                                    0x2
#define _LATA_LATA2_POSITION                                0x2
#define _LATA_LATA2_SIZE                                    0x1
#define _LATA_LATA2_LENGTH                                  0x1
#define _LATA_LATA2_MASK                                    0x4
#define _LATA_LATA4_POSN                                    0x4
#define _LATA_LATA4_POSITION                                0x4
#define _LATA_LATA4_SIZE                                    0x1
#define _LATA_LATA4_LENGTH                                  0x1
#define _LATA_LATA4_MASK                                    0x10
#define _LATA_LATA5_POSN                                    0x5
#define _LATA_LATA5_POSITION                                0x5
#define _LATA_LATA5_SIZE                                    0x1
#define _LATA_LATA5_LENGTH                                  0x1
#define _LATA_LATA5_MASK                                    0x20

// Register: LATC
extern volatile unsigned char           LATC                @ 0x10E;
#ifndef _LIB_BUILD
asm("LATC equ 010Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATC0                  :1;
        unsigned LATC1                  :1;
        unsigned LATC2                  :1;
        unsigned LATC3                  :1;
        unsigned LATC4                  :1;
        unsigned LATC5                  :1;
    };
} LATCbits_t;
extern volatile LATCbits_t LATCbits @ 0x10E;
// bitfield macros
#define _LATC_LATC0_POSN                                    0x0
#define _LATC_LATC0_POSITION                                0x0
#define _LATC_LATC0_SIZE                                    0x1
#define _LATC_LATC0_LENGTH                                  0x1
#define _LATC_LATC0_MASK                                    0x1
#define _LATC_LATC1_POSN                                    0x1
#define _LATC_LATC1_POSITION                                0x1
#define _LATC_LATC1_SIZE                                    0x1
#define _LATC_LATC1_LENGTH                                  0x1
#define _LATC_LATC1_MASK                                    0x2
#define _LATC_LATC2_POSN                                    0x2
#define _LATC_LATC2_POSITION                                0x2
#define _LATC_LATC2_SIZE                                    0x1
#define _LATC_LATC2_LENGTH                                  0x1
#define _LATC_LATC2_MASK                                    0x4
#define _LATC_LATC3_POSN                                    0x3
#define _LATC_LATC3_POSITION                                0x3
#define _LATC_LATC3_SIZE                                    0x1
#define _LATC_LATC3_LENGTH                                  0x1
#define _LATC_LATC3_MASK                                    0x8
#define _LATC_LATC4_POSN                                    0x4
#define _LATC_LATC4_POSITION                                0x4
#define _LATC_LATC4_SIZE                                    0x1
#define _LATC_LATC4_LENGTH                                  0x1
#define _LATC_LATC4_MASK                                    0x10
#define _LATC_LATC5_POSN                                    0x5
#define _LATC_LATC5_POSITION                                0x5
#define _LATC_LATC5_SIZE                                    0x1
#define _LATC_LATC5_LENGTH                                  0x1
#define _LATC_LATC5_MASK                                    0x20

// Register: CM1CON0
extern volatile unsigned char           CM1CON0             @ 0x111;
#ifndef _LIB_BUILD
asm("CM1CON0 equ 0111h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C1SYNC                 :1;
        unsigned C1HYS                  :1;
        unsigned C1SP                   :1;
        unsigned                        :1;
        unsigned C1POL                  :1;
        unsigned                        :1;
        unsigned C1OUT                  :1;
        unsigned C1ON                   :1;
    };
} CM1CON0bits_t;
extern volatile CM1CON0bits_t CM1CON0bits @ 0x111;
// bitfield macros
#define _CM1CON0_C1SYNC_POSN                                0x0
#define _CM1CON0_C1SYNC_POSITION                            0x0
#define _CM1CON0_C1SYNC_SIZE                                0x1
#define _CM1CON0_C1SYNC_LENGTH                              0x1
#define _CM1CON0_C1SYNC_MASK                                0x1
#define _CM1CON0_C1HYS_POSN                                 0x1
#define _CM1CON0_C1HYS_POSITION                             0x1
#define _CM1CON0_C1HYS_SIZE                                 0x1
#define _CM1CON0_C1HYS_LENGTH                               0x1
#define _CM1CON0_C1HYS_MASK                                 0x2
#define _CM1CON0_C1SP_POSN                                  0x2
#define _CM1CON0_C1SP_POSITION                              0x2
#define _CM1CON0_C1SP_SIZE                                  0x1
#define _CM1CON0_C1SP_LENGTH                                0x1
#define _CM1CON0_C1SP_MASK                                  0x4
#define _CM1CON0_C1POL_POSN                                 0x4
#define _CM1CON0_C1POL_POSITION                             0x4
#define _CM1CON0_C1POL_SIZE                                 0x1
#define _CM1CON0_C1POL_LENGTH                               0x1
#define _CM1CON0_C1POL_MASK                                 0x10
#define _CM1CON0_C1OUT_POSN                                 0x6
#define _CM1CON0_C1OUT_POSITION                             0x6
#define _CM1CON0_C1OUT_SIZE                                 0x1
#define _CM1CON0_C1OUT_LENGTH                               0x1
#define _CM1CON0_C1OUT_MASK                                 0x40
#define _CM1CON0_C1ON_POSN                                  0x7
#define _CM1CON0_C1ON_POSITION                              0x7
#define _CM1CON0_C1ON_SIZE                                  0x1
#define _CM1CON0_C1ON_LENGTH                                0x1
#define _CM1CON0_C1ON_MASK                                  0x80

// Register: CM1CON1
extern volatile unsigned char           CM1CON1             @ 0x112;
#ifndef _LIB_BUILD
asm("CM1CON1 equ 0112h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C1NCH                  :3;
        unsigned C1PCH                  :3;
        unsigned C1INTN                 :1;
        unsigned C1INTP                 :1;
    };
    struct {
        unsigned C1NCH0                 :1;
        unsigned C1NCH1                 :1;
        unsigned C1NCH2                 :1;
        unsigned C1PCH0                 :1;
        unsigned C1PCH1                 :1;
        unsigned C1PCH2                 :1;
    };
} CM1CON1bits_t;
extern volatile CM1CON1bits_t CM1CON1bits @ 0x112;
// bitfield macros
#define _CM1CON1_C1NCH_POSN                                 0x0
#define _CM1CON1_C1NCH_POSITION                             0x0
#define _CM1CON1_C1NCH_SIZE                                 0x3
#define _CM1CON1_C1NCH_LENGTH                               0x3
#define _CM1CON1_C1NCH_MASK                                 0x7
#define _CM1CON1_C1PCH_POSN                                 0x3
#define _CM1CON1_C1PCH_POSITION                             0x3
#define _CM1CON1_C1PCH_SIZE                                 0x3
#define _CM1CON1_C1PCH_LENGTH                               0x3
#define _CM1CON1_C1PCH_MASK                                 0x38
#define _CM1CON1_C1INTN_POSN                                0x6
#define _CM1CON1_C1INTN_POSITION                            0x6
#define _CM1CON1_C1INTN_SIZE                                0x1
#define _CM1CON1_C1INTN_LENGTH                              0x1
#define _CM1CON1_C1INTN_MASK                                0x40
#define _CM1CON1_C1INTP_POSN                                0x7
#define _CM1CON1_C1INTP_POSITION                            0x7
#define _CM1CON1_C1INTP_SIZE                                0x1
#define _CM1CON1_C1INTP_LENGTH                              0x1
#define _CM1CON1_C1INTP_MASK                                0x80
#define _CM1CON1_C1NCH0_POSN                                0x0
#define _CM1CON1_C1NCH0_POSITION                            0x0
#define _CM1CON1_C1NCH0_SIZE                                0x1
#define _CM1CON1_C1NCH0_LENGTH                              0x1
#define _CM1CON1_C1NCH0_MASK                                0x1
#define _CM1CON1_C1NCH1_POSN                                0x1
#define _CM1CON1_C1NCH1_POSITION                            0x1
#define _CM1CON1_C1NCH1_SIZE                                0x1
#define _CM1CON1_C1NCH1_LENGTH                              0x1
#define _CM1CON1_C1NCH1_MASK                                0x2
#define _CM1CON1_C1NCH2_POSN                                0x2
#define _CM1CON1_C1NCH2_POSITION                            0x2
#define _CM1CON1_C1NCH2_SIZE                                0x1
#define _CM1CON1_C1NCH2_LENGTH                              0x1
#define _CM1CON1_C1NCH2_MASK                                0x4
#define _CM1CON1_C1PCH0_POSN                                0x3
#define _CM1CON1_C1PCH0_POSITION                            0x3
#define _CM1CON1_C1PCH0_SIZE                                0x1
#define _CM1CON1_C1PCH0_LENGTH                              0x1
#define _CM1CON1_C1PCH0_MASK                                0x8
#define _CM1CON1_C1PCH1_POSN                                0x4
#define _CM1CON1_C1PCH1_POSITION                            0x4
#define _CM1CON1_C1PCH1_SIZE                                0x1
#define _CM1CON1_C1PCH1_LENGTH                              0x1
#define _CM1CON1_C1PCH1_MASK                                0x10
#define _CM1CON1_C1PCH2_POSN                                0x5
#define _CM1CON1_C1PCH2_POSITION                            0x5
#define _CM1CON1_C1PCH2_SIZE                                0x1
#define _CM1CON1_C1PCH2_LENGTH                              0x1
#define _CM1CON1_C1PCH2_MASK                                0x20

// Register: CM2CON0
extern volatile unsigned char           CM2CON0             @ 0x113;
#ifndef _LIB_BUILD
asm("CM2CON0 equ 0113h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C2SYNC                 :1;
        unsigned C2HYS                  :1;
        unsigned C2SP                   :1;
        unsigned                        :1;
        unsigned C2POL                  :1;
        unsigned                        :1;
        unsigned C2OUT                  :1;
        unsigned C2ON                   :1;
    };
} CM2CON0bits_t;
extern volatile CM2CON0bits_t CM2CON0bits @ 0x113;
// bitfield macros
#define _CM2CON0_C2SYNC_POSN                                0x0
#define _CM2CON0_C2SYNC_POSITION                            0x0
#define _CM2CON0_C2SYNC_SIZE                                0x1
#define _CM2CON0_C2SYNC_LENGTH                              0x1
#define _CM2CON0_C2SYNC_MASK                                0x1
#define _CM2CON0_C2HYS_POSN                                 0x1
#define _CM2CON0_C2HYS_POSITION                             0x1
#define _CM2CON0_C2HYS_SIZE                                 0x1
#define _CM2CON0_C2HYS_LENGTH                               0x1
#define _CM2CON0_C2HYS_MASK                                 0x2
#define _CM2CON0_C2SP_POSN                                  0x2
#define _CM2CON0_C2SP_POSITION                              0x2
#define _CM2CON0_C2SP_SIZE                                  0x1
#define _CM2CON0_C2SP_LENGTH                                0x1
#define _CM2CON0_C2SP_MASK                                  0x4
#define _CM2CON0_C2POL_POSN                                 0x4
#define _CM2CON0_C2POL_POSITION                             0x4
#define _CM2CON0_C2POL_SIZE                                 0x1
#define _CM2CON0_C2POL_LENGTH                               0x1
#define _CM2CON0_C2POL_MASK                                 0x10
#define _CM2CON0_C2OUT_POSN                                 0x6
#define _CM2CON0_C2OUT_POSITION                             0x6
#define _CM2CON0_C2OUT_SIZE                                 0x1
#define _CM2CON0_C2OUT_LENGTH                               0x1
#define _CM2CON0_C2OUT_MASK                                 0x40
#define _CM2CON0_C2ON_POSN                                  0x7
#define _CM2CON0_C2ON_POSITION                              0x7
#define _CM2CON0_C2ON_SIZE                                  0x1
#define _CM2CON0_C2ON_LENGTH                                0x1
#define _CM2CON0_C2ON_MASK                                  0x80

// Register: CM2CON1
extern volatile unsigned char           CM2CON1             @ 0x114;
#ifndef _LIB_BUILD
asm("CM2CON1 equ 0114h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C2NCH                  :3;
        unsigned C2PCH                  :3;
        unsigned C2INTN                 :1;
        unsigned C2INTP                 :1;
    };
    struct {
        unsigned C2NCH0                 :1;
        unsigned C2NCH1                 :1;
        unsigned C2NCH2                 :1;
        unsigned C2PCH0                 :1;
        unsigned C2PCH1                 :1;
        unsigned C2PCH2                 :1;
    };
} CM2CON1bits_t;
extern volatile CM2CON1bits_t CM2CON1bits @ 0x114;
// bitfield macros
#define _CM2CON1_C2NCH_POSN                                 0x0
#define _CM2CON1_C2NCH_POSITION                             0x0
#define _CM2CON1_C2NCH_SIZE                                 0x3
#define _CM2CON1_C2NCH_LENGTH                               0x3
#define _CM2CON1_C2NCH_MASK                                 0x7
#define _CM2CON1_C2PCH_POSN                                 0x3
#define _CM2CON1_C2PCH_POSITION                             0x3
#define _CM2CON1_C2PCH_SIZE                                 0x3
#define _CM2CON1_C2PCH_LENGTH                               0x3
#define _CM2CON1_C2PCH_MASK                                 0x38
#define _CM2CON1_C2INTN_POSN                                0x6
#define _CM2CON1_C2INTN_POSITION                            0x6
#define _CM2CON1_C2INTN_SIZE                                0x1
#define _CM2CON1_C2INTN_LENGTH                              0x1
#define _CM2CON1_C2INTN_MASK                                0x40
#define _CM2CON1_C2INTP_POSN                                0x7
#define _CM2CON1_C2INTP_POSITION                            0x7
#define _CM2CON1_C2INTP_SIZE                                0x1
#define _CM2CON1_C2INTP_LENGTH                              0x1
#define _CM2CON1_C2INTP_MASK                                0x80
#define _CM2CON1_C2NCH0_POSN                                0x0
#define _CM2CON1_C2NCH0_POSITION                            0x0
#define _CM2CON1_C2NCH0_SIZE                                0x1
#define _CM2CON1_C2NCH0_LENGTH                              0x1
#define _CM2CON1_C2NCH0_MASK                                0x1
#define _CM2CON1_C2NCH1_POSN                                0x1
#define _CM2CON1_C2NCH1_POSITION                            0x1
#define _CM2CON1_C2NCH1_SIZE                                0x1
#define _CM2CON1_C2NCH1_LENGTH                              0x1
#define _CM2CON1_C2NCH1_MASK                                0x2
#define _CM2CON1_C2NCH2_POSN                                0x2
#define _CM2CON1_C2NCH2_POSITION                            0x2
#define _CM2CON1_C2NCH2_SIZE                                0x1
#define _CM2CON1_C2NCH2_LENGTH                              0x1
#define _CM2CON1_C2NCH2_MASK                                0x4
#define _CM2CON1_C2PCH0_POSN                                0x3
#define _CM2CON1_C2PCH0_POSITION                            0x3
#define _CM2CON1_C2PCH0_SIZE                                0x1
#define _CM2CON1_C2PCH0_LENGTH                              0x1
#define _CM2CON1_C2PCH0_MASK                                0x8
#define _CM2CON1_C2PCH1_POSN                                0x4
#define _CM2CON1_C2PCH1_POSITION                            0x4
#define _CM2CON1_C2PCH1_SIZE                                0x1
#define _CM2CON1_C2PCH1_LENGTH                              0x1
#define _CM2CON1_C2PCH1_MASK                                0x10
#define _CM2CON1_C2PCH2_POSN                                0x5
#define _CM2CON1_C2PCH2_POSITION                            0x5
#define _CM2CON1_C2PCH2_SIZE                                0x1
#define _CM2CON1_C2PCH2_LENGTH                              0x1
#define _CM2CON1_C2PCH2_MASK                                0x20

// Register: CMOUT
extern volatile unsigned char           CMOUT               @ 0x115;
#ifndef _LIB_BUILD
asm("CMOUT equ 0115h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MC1OUT                 :1;
        unsigned MC2OUT                 :1;
    };
} CMOUTbits_t;
extern volatile CMOUTbits_t CMOUTbits @ 0x115;
// bitfield macros
#define _CMOUT_MC1OUT_POSN                                  0x0
#define _CMOUT_MC1OUT_POSITION                              0x0
#define _CMOUT_MC1OUT_SIZE                                  0x1
#define _CMOUT_MC1OUT_LENGTH                                0x1
#define _CMOUT_MC1OUT_MASK                                  0x1
#define _CMOUT_MC2OUT_POSN                                  0x1
#define _CMOUT_MC2OUT_POSITION                              0x1
#define _CMOUT_MC2OUT_SIZE                                  0x1
#define _CMOUT_MC2OUT_LENGTH                                0x1
#define _CMOUT_MC2OUT_MASK                                  0x2

// Register: BORCON
extern volatile unsigned char           BORCON              @ 0x116;
#ifndef _LIB_BUILD
asm("BORCON equ 0116h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BORRDY                 :1;
        unsigned                        :6;
        unsigned SBOREN                 :1;
    };
} BORCONbits_t;
extern volatile BORCONbits_t BORCONbits @ 0x116;
// bitfield macros
#define _BORCON_BORRDY_POSN                                 0x0
#define _BORCON_BORRDY_POSITION                             0x0
#define _BORCON_BORRDY_SIZE                                 0x1
#define _BORCON_BORRDY_LENGTH                               0x1
#define _BORCON_BORRDY_MASK                                 0x1
#define _BORCON_SBOREN_POSN                                 0x7
#define _BORCON_SBOREN_POSITION                             0x7
#define _BORCON_SBOREN_SIZE                                 0x1
#define _BORCON_SBOREN_LENGTH                               0x1
#define _BORCON_SBOREN_MASK                                 0x80

// Register: FVRCON
extern volatile unsigned char           FVRCON              @ 0x117;
#ifndef _LIB_BUILD
asm("FVRCON equ 0117h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADFVR                  :2;
        unsigned CDAFVR                 :2;
        unsigned TSRNG                  :1;
        unsigned TSEN                   :1;
        unsigned FVRRDY                 :1;
        unsigned FVREN                  :1;
    };
    struct {
        unsigned ADFVR0                 :1;
        unsigned ADFVR1                 :1;
        unsigned CDAFVR0                :1;
        unsigned CDAFVR1                :1;
    };
} FVRCONbits_t;
extern volatile FVRCONbits_t FVRCONbits @ 0x117;
// bitfield macros
#define _FVRCON_ADFVR_POSN                                  0x0
#define _FVRCON_ADFVR_POSITION                              0x0
#define _FVRCON_ADFVR_SIZE                                  0x2
#define _FVRCON_ADFVR_LENGTH                                0x2
#define _FVRCON_ADFVR_MASK                                  0x3
#define _FVRCON_CDAFVR_POSN                                 0x2
#define _FVRCON_CDAFVR_POSITION                             0x2
#define _FVRCON_CDAFVR_SIZE                                 0x2
#define _FVRCON_CDAFVR_LENGTH                               0x2
#define _FVRCON_CDAFVR_MASK                                 0xC
#define _FVRCON_TSRNG_POSN                                  0x4
#define _FVRCON_TSRNG_POSITION                              0x4
#define _FVRCON_TSRNG_SIZE                                  0x1
#define _FVRCON_TSRNG_LENGTH                                0x1
#define _FVRCON_TSRNG_MASK                                  0x10
#define _FVRCON_TSEN_POSN                                   0x5
#define _FVRCON_TSEN_POSITION                               0x5
#define _FVRCON_TSEN_SIZE                                   0x1
#define _FVRCON_TSEN_LENGTH                                 0x1
#define _FVRCON_TSEN_MASK                                   0x20
#define _FVRCON_FVRRDY_POSN                                 0x6
#define _FVRCON_FVRRDY_POSITION                             0x6
#define _FVRCON_FVRRDY_SIZE                                 0x1
#define _FVRCON_FVRRDY_LENGTH                               0x1
#define _FVRCON_FVRRDY_MASK                                 0x40
#define _FVRCON_FVREN_POSN                                  0x7
#define _FVRCON_FVREN_POSITION                              0x7
#define _FVRCON_FVREN_SIZE                                  0x1
#define _FVRCON_FVREN_LENGTH                                0x1
#define _FVRCON_FVREN_MASK                                  0x80
#define _FVRCON_ADFVR0_POSN                                 0x0
#define _FVRCON_ADFVR0_POSITION                             0x0
#define _FVRCON_ADFVR0_SIZE                                 0x1
#define _FVRCON_ADFVR0_LENGTH                               0x1
#define _FVRCON_ADFVR0_MASK                                 0x1
#define _FVRCON_ADFVR1_POSN                                 0x1
#define _FVRCON_ADFVR1_POSITION                             0x1
#define _FVRCON_ADFVR1_SIZE                                 0x1
#define _FVRCON_ADFVR1_LENGTH                               0x1
#define _FVRCON_ADFVR1_MASK                                 0x2
#define _FVRCON_CDAFVR0_POSN                                0x2
#define _FVRCON_CDAFVR0_POSITION                            0x2
#define _FVRCON_CDAFVR0_SIZE                                0x1
#define _FVRCON_CDAFVR0_LENGTH                              0x1
#define _FVRCON_CDAFVR0_MASK                                0x4
#define _FVRCON_CDAFVR1_POSN                                0x3
#define _FVRCON_CDAFVR1_POSITION                            0x3
#define _FVRCON_CDAFVR1_SIZE                                0x1
#define _FVRCON_CDAFVR1_LENGTH                              0x1
#define _FVRCON_CDAFVR1_MASK                                0x8

// Register: DACCON0
extern volatile unsigned char           DACCON0             @ 0x118;
#ifndef _LIB_BUILD
asm("DACCON0 equ 0118h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DAC1NSS                :1;
        unsigned                        :1;
        unsigned DAC1PSS                :2;
        unsigned                        :1;
        unsigned DAC1OE                 :1;
        unsigned                        :1;
        unsigned DAC1EN                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned DAC1PSS0               :1;
        unsigned DAC1PSS1               :1;
    };
} DACCON0bits_t;
extern volatile DACCON0bits_t DACCON0bits @ 0x118;
// bitfield macros
#define _DACCON0_DAC1NSS_POSN                               0x0
#define _DACCON0_DAC1NSS_POSITION                           0x0
#define _DACCON0_DAC1NSS_SIZE                               0x1
#define _DACCON0_DAC1NSS_LENGTH                             0x1
#define _DACCON0_DAC1NSS_MASK                               0x1
#define _DACCON0_DAC1PSS_POSN                               0x2
#define _DACCON0_DAC1PSS_POSITION                           0x2
#define _DACCON0_DAC1PSS_SIZE                               0x2
#define _DACCON0_DAC1PSS_LENGTH                             0x2
#define _DACCON0_DAC1PSS_MASK                               0xC
#define _DACCON0_DAC1OE_POSN                                0x5
#define _DACCON0_DAC1OE_POSITION                            0x5
#define _DACCON0_DAC1OE_SIZE                                0x1
#define _DACCON0_DAC1OE_LENGTH                              0x1
#define _DACCON0_DAC1OE_MASK                                0x20
#define _DACCON0_DAC1EN_POSN                                0x7
#define _DACCON0_DAC1EN_POSITION                            0x7
#define _DACCON0_DAC1EN_SIZE                                0x1
#define _DACCON0_DAC1EN_LENGTH                              0x1
#define _DACCON0_DAC1EN_MASK                                0x80
#define _DACCON0_DAC1PSS0_POSN                              0x2
#define _DACCON0_DAC1PSS0_POSITION                          0x2
#define _DACCON0_DAC1PSS0_SIZE                              0x1
#define _DACCON0_DAC1PSS0_LENGTH                            0x1
#define _DACCON0_DAC1PSS0_MASK                              0x4
#define _DACCON0_DAC1PSS1_POSN                              0x3
#define _DACCON0_DAC1PSS1_POSITION                          0x3
#define _DACCON0_DAC1PSS1_SIZE                              0x1
#define _DACCON0_DAC1PSS1_LENGTH                            0x1
#define _DACCON0_DAC1PSS1_MASK                              0x8

// Register: DACCON1
extern volatile unsigned char           DACCON1             @ 0x119;
#ifndef _LIB_BUILD
asm("DACCON1 equ 0119h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DAC1R                  :5;
    };
    struct {
        unsigned DAC1R0                 :1;
        unsigned DAC1R1                 :1;
        unsigned DAC1R2                 :1;
        unsigned DAC1R3                 :1;
        unsigned DAC1R4                 :1;
    };
} DACCON1bits_t;
extern volatile DACCON1bits_t DACCON1bits @ 0x119;
// bitfield macros
#define _DACCON1_DAC1R_POSN                                 0x0
#define _DACCON1_DAC1R_POSITION                             0x0
#define _DACCON1_DAC1R_SIZE                                 0x5
#define _DACCON1_DAC1R_LENGTH                               0x5
#define _DACCON1_DAC1R_MASK                                 0x1F
#define _DACCON1_DAC1R0_POSN                                0x0
#define _DACCON1_DAC1R0_POSITION                            0x0
#define _DACCON1_DAC1R0_SIZE                                0x1
#define _DACCON1_DAC1R0_LENGTH                              0x1
#define _DACCON1_DAC1R0_MASK                                0x1
#define _DACCON1_DAC1R1_POSN                                0x1
#define _DACCON1_DAC1R1_POSITION                            0x1
#define _DACCON1_DAC1R1_SIZE                                0x1
#define _DACCON1_DAC1R1_LENGTH                              0x1
#define _DACCON1_DAC1R1_MASK                                0x2
#define _DACCON1_DAC1R2_POSN                                0x2
#define _DACCON1_DAC1R2_POSITION                            0x2
#define _DACCON1_DAC1R2_SIZE                                0x1
#define _DACCON1_DAC1R2_LENGTH                              0x1
#define _DACCON1_DAC1R2_MASK                                0x4
#define _DACCON1_DAC1R3_POSN                                0x3
#define _DACCON1_DAC1R3_POSITION                            0x3
#define _DACCON1_DAC1R3_SIZE                                0x1
#define _DACCON1_DAC1R3_LENGTH                              0x1
#define _DACCON1_DAC1R3_MASK                                0x8
#define _DACCON1_DAC1R4_POSN                                0x4
#define _DACCON1_DAC1R4_POSITION                            0x4
#define _DACCON1_DAC1R4_SIZE                                0x1
#define _DACCON1_DAC1R4_LENGTH                              0x1
#define _DACCON1_DAC1R4_MASK                                0x10

// Register: ANSELA
extern volatile unsigned char           ANSELA              @ 0x18C;
#ifndef _LIB_BUILD
asm("ANSELA equ 018Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ANSA0                  :1;
        unsigned ANSA1                  :1;
        unsigned ANSA2                  :1;
        unsigned                        :1;
        unsigned ANSA4                  :1;
        unsigned ANSA5                  :1;
    };
} ANSELAbits_t;
extern volatile ANSELAbits_t ANSELAbits @ 0x18C;
// bitfield macros
#define _ANSELA_ANSA0_POSN                                  0x0
#define _ANSELA_ANSA0_POSITION                              0x0
#define _ANSELA_ANSA0_SIZE                                  0x1
#define _ANSELA_ANSA0_LENGTH                                0x1
#define _ANSELA_ANSA0_MASK                                  0x1
#define _ANSELA_ANSA1_POSN                                  0x1
#define _ANSELA_ANSA1_POSITION                              0x1
#define _ANSELA_ANSA1_SIZE                                  0x1
#define _ANSELA_ANSA1_LENGTH                                0x1
#define _ANSELA_ANSA1_MASK                                  0x2
#define _ANSELA_ANSA2_POSN                                  0x2
#define _ANSELA_ANSA2_POSITION                              0x2
#define _ANSELA_ANSA2_SIZE                                  0x1
#define _ANSELA_ANSA2_LENGTH                                0x1
#define _ANSELA_ANSA2_MASK                                  0x4
#define _ANSELA_ANSA4_POSN                                  0x4
#define _ANSELA_ANSA4_POSITION                              0x4
#define _ANSELA_ANSA4_SIZE                                  0x1
#define _ANSELA_ANSA4_LENGTH                                0x1
#define _ANSELA_ANSA4_MASK                                  0x10
#define _ANSELA_ANSA5_POSN                                  0x5
#define _ANSELA_ANSA5_POSITION                              0x5
#define _ANSELA_ANSA5_SIZE                                  0x1
#define _ANSELA_ANSA5_LENGTH                                0x1
#define _ANSELA_ANSA5_MASK                                  0x20

// Register: ANSELC
extern volatile unsigned char           ANSELC              @ 0x18E;
#ifndef _LIB_BUILD
asm("ANSELC equ 018Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ANSC0                  :1;
        unsigned ANSC1                  :1;
        unsigned ANSC2                  :1;
        unsigned ANSC3                  :1;
        unsigned ANSC4                  :1;
        unsigned ANSC5                  :1;
    };
} ANSELCbits_t;
extern volatile ANSELCbits_t ANSELCbits @ 0x18E;
// bitfield macros
#define _ANSELC_ANSC0_POSN                                  0x0
#define _ANSELC_ANSC0_POSITION                              0x0
#define _ANSELC_ANSC0_SIZE                                  0x1
#define _ANSELC_ANSC0_LENGTH                                0x1
#define _ANSELC_ANSC0_MASK                                  0x1
#define _ANSELC_ANSC1_POSN                                  0x1
#define _ANSELC_ANSC1_POSITION                              0x1
#define _ANSELC_ANSC1_SIZE                                  0x1
#define _ANSELC_ANSC1_LENGTH                                0x1
#define _ANSELC_ANSC1_MASK                                  0x2
#define _ANSELC_ANSC2_POSN                                  0x2
#define _ANSELC_ANSC2_POSITION                              0x2
#define _ANSELC_ANSC2_SIZE                                  0x1
#define _ANSELC_ANSC2_LENGTH                                0x1
#define _ANSELC_ANSC2_MASK                                  0x4
#define _ANSELC_ANSC3_POSN                                  0x3
#define _ANSELC_ANSC3_POSITION                              0x3
#define _ANSELC_ANSC3_SIZE                                  0x1
#define _ANSELC_ANSC3_LENGTH                                0x1
#define _ANSELC_ANSC3_MASK                                  0x8
#define _ANSELC_ANSC4_POSN                                  0x4
#define _ANSELC_ANSC4_POSITION                              0x4
#define _ANSELC_ANSC4_SIZE                                  0x1
#define _ANSELC_ANSC4_LENGTH                                0x1
#define _ANSELC_ANSC4_MASK                                  0x10
#define _ANSELC_ANSC5_POSN                                  0x5
#define _ANSELC_ANSC5_POSITION                              0x5
#define _ANSELC_ANSC5_SIZE                                  0x1
#define _ANSELC_ANSC5_LENGTH                                0x1
#define _ANSELC_ANSC5_MASK                                  0x20

// Register: VREGCON
extern volatile unsigned char           VREGCON             @ 0x197;
#ifndef _LIB_BUILD
asm("VREGCON equ 0197h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned VREGPM                 :1;
    };
} VREGCONbits_t;
extern volatile VREGCONbits_t VREGCONbits @ 0x197;
// bitfield macros
#define _VREGCON_VREGPM_POSN                                0x1
#define _VREGCON_VREGPM_POSITION                            0x1
#define _VREGCON_VREGPM_SIZE                                0x1
#define _VREGCON_VREGPM_LENGTH                              0x1
#define _VREGCON_VREGPM_MASK                                0x2

// Register: RC1REG
extern volatile unsigned char           RC1REG              @ 0x199;
#ifndef _LIB_BUILD
asm("RC1REG equ 0199h");
#endif
// aliases
extern volatile unsigned char           RCREG               @ 0x199;
#ifndef _LIB_BUILD
asm("RCREG equ 0199h");
#endif
extern volatile unsigned char           RCREG1              @ 0x199;
#ifndef _LIB_BUILD
asm("RCREG1 equ 0199h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC1REG                 :8;
    };
} RC1REGbits_t;
extern volatile RC1REGbits_t RC1REGbits @ 0x199;
// bitfield macros
#define _RC1REG_RC1REG_POSN                                 0x0
#define _RC1REG_RC1REG_POSITION                             0x0
#define _RC1REG_RC1REG_SIZE                                 0x8
#define _RC1REG_RC1REG_LENGTH                               0x8
#define _RC1REG_RC1REG_MASK                                 0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned RC1REG                 :8;
    };
} RCREGbits_t;
extern volatile RCREGbits_t RCREGbits @ 0x199;
// bitfield macros
#define _RCREG_RC1REG_POSN                                  0x0
#define _RCREG_RC1REG_POSITION                              0x0
#define _RCREG_RC1REG_SIZE                                  0x8
#define _RCREG_RC1REG_LENGTH                                0x8
#define _RCREG_RC1REG_MASK                                  0xFF
typedef union {
    struct {
        unsigned RC1REG                 :8;
    };
} RCREG1bits_t;
extern volatile RCREG1bits_t RCREG1bits @ 0x199;
// bitfield macros
#define _RCREG1_RC1REG_POSN                                 0x0
#define _RCREG1_RC1REG_POSITION                             0x0
#define _RCREG1_RC1REG_SIZE                                 0x8
#define _RCREG1_RC1REG_LENGTH                               0x8
#define _RCREG1_RC1REG_MASK                                 0xFF

// Register: TX1REG
extern volatile unsigned char           TX1REG              @ 0x19A;
#ifndef _LIB_BUILD
asm("TX1REG equ 019Ah");
#endif
// aliases
extern volatile unsigned char           TXREG1              @ 0x19A;
#ifndef _LIB_BUILD
asm("TXREG1 equ 019Ah");
#endif
extern volatile unsigned char           TXREG               @ 0x19A;
#ifndef _LIB_BUILD
asm("TXREG equ 019Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TX1REG                 :8;
    };
} TX1REGbits_t;
extern volatile TX1REGbits_t TX1REGbits @ 0x19A;
// bitfield macros
#define _TX1REG_TX1REG_POSN                                 0x0
#define _TX1REG_TX1REG_POSITION                             0x0
#define _TX1REG_TX1REG_SIZE                                 0x8
#define _TX1REG_TX1REG_LENGTH                               0x8
#define _TX1REG_TX1REG_MASK                                 0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned TX1REG                 :8;
    };
} TXREG1bits_t;
extern volatile TXREG1bits_t TXREG1bits @ 0x19A;
// bitfield macros
#define _TXREG1_TX1REG_POSN                                 0x0
#define _TXREG1_TX1REG_POSITION                             0x0
#define _TXREG1_TX1REG_SIZE                                 0x8
#define _TXREG1_TX1REG_LENGTH                               0x8
#define _TXREG1_TX1REG_MASK                                 0xFF
typedef union {
    struct {
        unsigned TX1REG                 :8;
    };
} TXREGbits_t;
extern volatile TXREGbits_t TXREGbits @ 0x19A;
// bitfield macros
#define _TXREG_TX1REG_POSN                                  0x0
#define _TXREG_TX1REG_POSITION                              0x0
#define _TXREG_TX1REG_SIZE                                  0x8
#define _TXREG_TX1REG_LENGTH                                0x8
#define _TXREG_TX1REG_MASK                                  0xFF

// Register: SP1BRG
extern volatile unsigned short          SP1BRG              @ 0x19B;
#ifndef _LIB_BUILD
asm("SP1BRG equ 019Bh");
#endif

// Register: SP1BRGL
extern volatile unsigned char           SP1BRGL             @ 0x19B;
#ifndef _LIB_BUILD
asm("SP1BRGL equ 019Bh");
#endif
// aliases
extern volatile unsigned char           SPBRG               @ 0x19B;
#ifndef _LIB_BUILD
asm("SPBRG equ 019Bh");
#endif
extern volatile unsigned char           SPBRG1              @ 0x19B;
#ifndef _LIB_BUILD
asm("SPBRG1 equ 019Bh");
#endif
extern volatile unsigned char           SPBRGL              @ 0x19B;
#ifndef _LIB_BUILD
asm("SPBRGL equ 019Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SP1BRGL                :8;
    };
} SP1BRGLbits_t;
extern volatile SP1BRGLbits_t SP1BRGLbits @ 0x19B;
// bitfield macros
#define _SP1BRGL_SP1BRGL_POSN                               0x0
#define _SP1BRGL_SP1BRGL_POSITION                           0x0
#define _SP1BRGL_SP1BRGL_SIZE                               0x8
#define _SP1BRGL_SP1BRGL_LENGTH                             0x8
#define _SP1BRGL_SP1BRGL_MASK                               0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SP1BRGL                :8;
    };
} SPBRGbits_t;
extern volatile SPBRGbits_t SPBRGbits @ 0x19B;
// bitfield macros
#define _SPBRG_SP1BRGL_POSN                                 0x0
#define _SPBRG_SP1BRGL_POSITION                             0x0
#define _SPBRG_SP1BRGL_SIZE                                 0x8
#define _SPBRG_SP1BRGL_LENGTH                               0x8
#define _SPBRG_SP1BRGL_MASK                                 0xFF
typedef union {
    struct {
        unsigned SP1BRGL                :8;
    };
} SPBRG1bits_t;
extern volatile SPBRG1bits_t SPBRG1bits @ 0x19B;
// bitfield macros
#define _SPBRG1_SP1BRGL_POSN                                0x0
#define _SPBRG1_SP1BRGL_POSITION                            0x0
#define _SPBRG1_SP1BRGL_SIZE                                0x8
#define _SPBRG1_SP1BRGL_LENGTH                              0x8
#define _SPBRG1_SP1BRGL_MASK                                0xFF
typedef union {
    struct {
        unsigned SP1BRGL                :8;
    };
} SPBRGLbits_t;
extern volatile SPBRGLbits_t SPBRGLbits @ 0x19B;
// bitfield macros
#define _SPBRGL_SP1BRGL_POSN                                0x0
#define _SPBRGL_SP1BRGL_POSITION                            0x0
#define _SPBRGL_SP1BRGL_SIZE                                0x8
#define _SPBRGL_SP1BRGL_LENGTH                              0x8
#define _SPBRGL_SP1BRGL_MASK                                0xFF

// Register: SP1BRGH
extern volatile unsigned char           SP1BRGH             @ 0x19C;
#ifndef _LIB_BUILD
asm("SP1BRGH equ 019Ch");
#endif
// aliases
extern volatile unsigned char           SPBRGH              @ 0x19C;
#ifndef _LIB_BUILD
asm("SPBRGH equ 019Ch");
#endif
extern volatile unsigned char           SPBRGH1             @ 0x19C;
#ifndef _LIB_BUILD
asm("SPBRGH1 equ 019Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SP1BRGH                :8;
    };
} SP1BRGHbits_t;
extern volatile SP1BRGHbits_t SP1BRGHbits @ 0x19C;
// bitfield macros
#define _SP1BRGH_SP1BRGH_POSN                               0x0
#define _SP1BRGH_SP1BRGH_POSITION                           0x0
#define _SP1BRGH_SP1BRGH_SIZE                               0x8
#define _SP1BRGH_SP1BRGH_LENGTH                             0x8
#define _SP1BRGH_SP1BRGH_MASK                               0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SP1BRGH                :8;
    };
} SPBRGHbits_t;
extern volatile SPBRGHbits_t SPBRGHbits @ 0x19C;
// bitfield macros
#define _SPBRGH_SP1BRGH_POSN                                0x0
#define _SPBRGH_SP1BRGH_POSITION                            0x0
#define _SPBRGH_SP1BRGH_SIZE                                0x8
#define _SPBRGH_SP1BRGH_LENGTH                              0x8
#define _SPBRGH_SP1BRGH_MASK                                0xFF
typedef union {
    struct {
        unsigned SP1BRGH                :8;
    };
} SPBRGH1bits_t;
extern volatile SPBRGH1bits_t SPBRGH1bits @ 0x19C;
// bitfield macros
#define _SPBRGH1_SP1BRGH_POSN                               0x0
#define _SPBRGH1_SP1BRGH_POSITION                           0x0
#define _SPBRGH1_SP1BRGH_SIZE                               0x8
#define _SPBRGH1_SP1BRGH_LENGTH                             0x8
#define _SPBRGH1_SP1BRGH_MASK                               0xFF

// Register: RC1STA
extern volatile unsigned char           RC1STA              @ 0x19D;
#ifndef _LIB_BUILD
asm("RC1STA equ 019Dh");
#endif
// aliases
extern volatile unsigned char           RCSTA1              @ 0x19D;
#ifndef _LIB_BUILD
asm("RCSTA1 equ 019Dh");
#endif
extern volatile unsigned char           RCSTA               @ 0x19D;
#ifndef _LIB_BUILD
asm("RCSTA equ 019Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
} RC1STAbits_t;
extern volatile RC1STAbits_t RC1STAbits @ 0x19D;
// bitfield macros
#define _RC1STA_RX9D_POSN                                   0x0
#define _RC1STA_RX9D_POSITION                               0x0
#define _RC1STA_RX9D_SIZE                                   0x1
#define _RC1STA_RX9D_LENGTH                                 0x1
#define _RC1STA_RX9D_MASK                                   0x1
#define _RC1STA_OERR_POSN                                   0x1
#define _RC1STA_OERR_POSITION                               0x1
#define _RC1STA_OERR_SIZE                                   0x1
#define _RC1STA_OERR_LENGTH                                 0x1
#define _RC1STA_OERR_MASK                                   0x2
#define _RC1STA_FERR_POSN                                   0x2
#define _RC1STA_FERR_POSITION                               0x2
#define _RC1STA_FERR_SIZE                                   0x1
#define _RC1STA_FERR_LENGTH                                 0x1
#define _RC1STA_FERR_MASK                                   0x4
#define _RC1STA_ADDEN_POSN                                  0x3
#define _RC1STA_ADDEN_POSITION                              0x3
#define _RC1STA_ADDEN_SIZE                                  0x1
#define _RC1STA_ADDEN_LENGTH                                0x1
#define _RC1STA_ADDEN_MASK                                  0x8
#define _RC1STA_CREN_POSN                                   0x4
#define _RC1STA_CREN_POSITION                               0x4
#define _RC1STA_CREN_SIZE                                   0x1
#define _RC1STA_CREN_LENGTH                                 0x1
#define _RC1STA_CREN_MASK                                   0x10
#define _RC1STA_SREN_POSN                                   0x5
#define _RC1STA_SREN_POSITION                               0x5
#define _RC1STA_SREN_SIZE                                   0x1
#define _RC1STA_SREN_LENGTH                                 0x1
#define _RC1STA_SREN_MASK                                   0x20
#define _RC1STA_RX9_POSN                                    0x6
#define _RC1STA_RX9_POSITION                                0x6
#define _RC1STA_RX9_SIZE                                    0x1
#define _RC1STA_RX9_LENGTH                                  0x1
#define _RC1STA_RX9_MASK                                    0x40
#define _RC1STA_SPEN_POSN                                   0x7
#define _RC1STA_SPEN_POSITION                               0x7
#define _RC1STA_SPEN_SIZE                                   0x1
#define _RC1STA_SPEN_LENGTH                                 0x1
#define _RC1STA_SPEN_MASK                                   0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
} RCSTA1bits_t;
extern volatile RCSTA1bits_t RCSTA1bits @ 0x19D;
// bitfield macros
#define _RCSTA1_RX9D_POSN                                   0x0
#define _RCSTA1_RX9D_POSITION                               0x0
#define _RCSTA1_RX9D_SIZE                                   0x1
#define _RCSTA1_RX9D_LENGTH                                 0x1
#define _RCSTA1_RX9D_MASK                                   0x1
#define _RCSTA1_OERR_POSN                                   0x1
#define _RCSTA1_OERR_POSITION                               0x1
#define _RCSTA1_OERR_SIZE                                   0x1
#define _RCSTA1_OERR_LENGTH                                 0x1
#define _RCSTA1_OERR_MASK                                   0x2
#define _RCSTA1_FERR_POSN                                   0x2
#define _RCSTA1_FERR_POSITION                               0x2
#define _RCSTA1_FERR_SIZE                                   0x1
#define _RCSTA1_FERR_LENGTH                                 0x1
#define _RCSTA1_FERR_MASK                                   0x4
#define _RCSTA1_ADDEN_POSN                                  0x3
#define _RCSTA1_ADDEN_POSITION                              0x3
#define _RCSTA1_ADDEN_SIZE                                  0x1
#define _RCSTA1_ADDEN_LENGTH                                0x1
#define _RCSTA1_ADDEN_MASK                                  0x8
#define _RCSTA1_CREN_POSN                                   0x4
#define _RCSTA1_CREN_POSITION                               0x4
#define _RCSTA1_CREN_SIZE                                   0x1
#define _RCSTA1_CREN_LENGTH                                 0x1
#define _RCSTA1_CREN_MASK                                   0x10
#define _RCSTA1_SREN_POSN                                   0x5
#define _RCSTA1_SREN_POSITION                               0x5
#define _RCSTA1_SREN_SIZE                                   0x1
#define _RCSTA1_SREN_LENGTH                                 0x1
#define _RCSTA1_SREN_MASK                                   0x20
#define _RCSTA1_RX9_POSN                                    0x6
#define _RCSTA1_RX9_POSITION                                0x6
#define _RCSTA1_RX9_SIZE                                    0x1
#define _RCSTA1_RX9_LENGTH                                  0x1
#define _RCSTA1_RX9_MASK                                    0x40
#define _RCSTA1_SPEN_POSN                                   0x7
#define _RCSTA1_SPEN_POSITION                               0x7
#define _RCSTA1_SPEN_SIZE                                   0x1
#define _RCSTA1_SPEN_LENGTH                                 0x1
#define _RCSTA1_SPEN_MASK                                   0x80
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
} RCSTAbits_t;
extern volatile RCSTAbits_t RCSTAbits @ 0x19D;
// bitfield macros
#define _RCSTA_RX9D_POSN                                    0x0
#define _RCSTA_RX9D_POSITION                                0x0
#define _RCSTA_RX9D_SIZE                                    0x1
#define _RCSTA_RX9D_LENGTH                                  0x1
#define _RCSTA_RX9D_MASK                                    0x1
#define _RCSTA_OERR_POSN                                    0x1
#define _RCSTA_OERR_POSITION                                0x1
#define _RCSTA_OERR_SIZE                                    0x1
#define _RCSTA_OERR_LENGTH                                  0x1
#define _RCSTA_OERR_MASK                                    0x2
#define _RCSTA_FERR_POSN                                    0x2
#define _RCSTA_FERR_POSITION                                0x2
#define _RCSTA_FERR_SIZE                                    0x1
#define _RCSTA_FERR_LENGTH                                  0x1
#define _RCSTA_FERR_MASK                                    0x4
#define _RCSTA_ADDEN_POSN                                   0x3
#define _RCSTA_ADDEN_POSITION                               0x3
#define _RCSTA_ADDEN_SIZE                                   0x1
#define _RCSTA_ADDEN_LENGTH                                 0x1
#define _RCSTA_ADDEN_MASK                                   0x8
#define _RCSTA_CREN_POSN                                    0x4
#define _RCSTA_CREN_POSITION                                0x4
#define _RCSTA_CREN_SIZE                                    0x1
#define _RCSTA_CREN_LENGTH                                  0x1
#define _RCSTA_CREN_MASK                                    0x10
#define _RCSTA_SREN_POSN                                    0x5
#define _RCSTA_SREN_POSITION                                0x5
#define _RCSTA_SREN_SIZE                                    0x1
#define _RCSTA_SREN_LENGTH                                  0x1
#define _RCSTA_SREN_MASK                                    0x20
#define _RCSTA_RX9_POSN                                     0x6
#define _RCSTA_RX9_POSITION                                 0x6
#define _RCSTA_RX9_SIZE                                     0x1
#define _RCSTA_RX9_LENGTH                                   0x1
#define _RCSTA_RX9_MASK                                     0x40
#define _RCSTA_SPEN_POSN                                    0x7
#define _RCSTA_SPEN_POSITION                                0x7
#define _RCSTA_SPEN_SIZE                                    0x1
#define _RCSTA_SPEN_LENGTH                                  0x1
#define _RCSTA_SPEN_MASK                                    0x80

// Register: TX1STA
extern volatile unsigned char           TX1STA              @ 0x19E;
#ifndef _LIB_BUILD
asm("TX1STA equ 019Eh");
#endif
// aliases
extern volatile unsigned char           TXSTA1              @ 0x19E;
#ifndef _LIB_BUILD
asm("TXSTA1 equ 019Eh");
#endif
extern volatile unsigned char           TXSTA               @ 0x19E;
#ifndef _LIB_BUILD
asm("TXSTA equ 019Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
} TX1STAbits_t;
extern volatile TX1STAbits_t TX1STAbits @ 0x19E;
// bitfield macros
#define _TX1STA_TX9D_POSN                                   0x0
#define _TX1STA_TX9D_POSITION                               0x0
#define _TX1STA_TX9D_SIZE                                   0x1
#define _TX1STA_TX9D_LENGTH                                 0x1
#define _TX1STA_TX9D_MASK                                   0x1
#define _TX1STA_TRMT_POSN                                   0x1
#define _TX1STA_TRMT_POSITION                               0x1
#define _TX1STA_TRMT_SIZE                                   0x1
#define _TX1STA_TRMT_LENGTH                                 0x1
#define _TX1STA_TRMT_MASK                                   0x2
#define _TX1STA_BRGH_POSN                                   0x2
#define _TX1STA_BRGH_POSITION                               0x2
#define _TX1STA_BRGH_SIZE                                   0x1
#define _TX1STA_BRGH_LENGTH                                 0x1
#define _TX1STA_BRGH_MASK                                   0x4
#define _TX1STA_SENDB_POSN                                  0x3
#define _TX1STA_SENDB_POSITION                              0x3
#define _TX1STA_SENDB_SIZE                                  0x1
#define _TX1STA_SENDB_LENGTH                                0x1
#define _TX1STA_SENDB_MASK                                  0x8
#define _TX1STA_SYNC_POSN                                   0x4
#define _TX1STA_SYNC_POSITION                               0x4
#define _TX1STA_SYNC_SIZE                                   0x1
#define _TX1STA_SYNC_LENGTH                                 0x1
#define _TX1STA_SYNC_MASK                                   0x10
#define _TX1STA_TXEN_POSN                                   0x5
#define _TX1STA_TXEN_POSITION                               0x5
#define _TX1STA_TXEN_SIZE                                   0x1
#define _TX1STA_TXEN_LENGTH                                 0x1
#define _TX1STA_TXEN_MASK                                   0x20
#define _TX1STA_TX9_POSN                                    0x6
#define _TX1STA_TX9_POSITION                                0x6
#define _TX1STA_TX9_SIZE                                    0x1
#define _TX1STA_TX9_LENGTH                                  0x1
#define _TX1STA_TX9_MASK                                    0x40
#define _TX1STA_CSRC_POSN                                   0x7
#define _TX1STA_CSRC_POSITION                               0x7
#define _TX1STA_CSRC_SIZE                                   0x1
#define _TX1STA_CSRC_LENGTH                                 0x1
#define _TX1STA_CSRC_MASK                                   0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
} TXSTA1bits_t;
extern volatile TXSTA1bits_t TXSTA1bits @ 0x19E;
// bitfield macros
#define _TXSTA1_TX9D_POSN                                   0x0
#define _TXSTA1_TX9D_POSITION                               0x0
#define _TXSTA1_TX9D_SIZE                                   0x1
#define _TXSTA1_TX9D_LENGTH                                 0x1
#define _TXSTA1_TX9D_MASK                                   0x1
#define _TXSTA1_TRMT_POSN                                   0x1
#define _TXSTA1_TRMT_POSITION                               0x1
#define _TXSTA1_TRMT_SIZE                                   0x1
#define _TXSTA1_TRMT_LENGTH                                 0x1
#define _TXSTA1_TRMT_MASK                                   0x2
#define _TXSTA1_BRGH_POSN                                   0x2
#define _TXSTA1_BRGH_POSITION                               0x2
#define _TXSTA1_BRGH_SIZE                                   0x1
#define _TXSTA1_BRGH_LENGTH                                 0x1
#define _TXSTA1_BRGH_MASK                                   0x4
#define _TXSTA1_SENDB_POSN                                  0x3
#define _TXSTA1_SENDB_POSITION                              0x3
#define _TXSTA1_SENDB_SIZE                                  0x1
#define _TXSTA1_SENDB_LENGTH                                0x1
#define _TXSTA1_SENDB_MASK                                  0x8
#define _TXSTA1_SYNC_POSN                                   0x4
#define _TXSTA1_SYNC_POSITION                               0x4
#define _TXSTA1_SYNC_SIZE                                   0x1
#define _TXSTA1_SYNC_LENGTH                                 0x1
#define _TXSTA1_SYNC_MASK                                   0x10
#define _TXSTA1_TXEN_POSN                                   0x5
#define _TXSTA1_TXEN_POSITION                               0x5
#define _TXSTA1_TXEN_SIZE                                   0x1
#define _TXSTA1_TXEN_LENGTH                                 0x1
#define _TXSTA1_TXEN_MASK                                   0x20
#define _TXSTA1_TX9_POSN                                    0x6
#define _TXSTA1_TX9_POSITION                                0x6
#define _TXSTA1_TX9_SIZE                                    0x1
#define _TXSTA1_TX9_LENGTH                                  0x1
#define _TXSTA1_TX9_MASK                                    0x40
#define _TXSTA1_CSRC_POSN                                   0x7
#define _TXSTA1_CSRC_POSITION                               0x7
#define _TXSTA1_CSRC_SIZE                                   0x1
#define _TXSTA1_CSRC_LENGTH                                 0x1
#define _TXSTA1_CSRC_MASK                                   0x80
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
} TXSTAbits_t;
extern volatile TXSTAbits_t TXSTAbits @ 0x19E;
// bitfield macros
#define _TXSTA_TX9D_POSN                                    0x0
#define _TXSTA_TX9D_POSITION                                0x0
#define _TXSTA_TX9D_SIZE                                    0x1
#define _TXSTA_TX9D_LENGTH                                  0x1
#define _TXSTA_TX9D_MASK                                    0x1
#define _TXSTA_TRMT_POSN                                    0x1
#define _TXSTA_TRMT_POSITION                                0x1
#define _TXSTA_TRMT_SIZE                                    0x1
#define _TXSTA_TRMT_LENGTH                                  0x1
#define _TXSTA_TRMT_MASK                                    0x2
#define _TXSTA_BRGH_POSN                                    0x2
#define _TXSTA_BRGH_POSITION                                0x2
#define _TXSTA_BRGH_SIZE                                    0x1
#define _TXSTA_BRGH_LENGTH                                  0x1
#define _TXSTA_BRGH_MASK                                    0x4
#define _TXSTA_SENDB_POSN                                   0x3
#define _TXSTA_SENDB_POSITION                               0x3
#define _TXSTA_SENDB_SIZE                                   0x1
#define _TXSTA_SENDB_LENGTH                                 0x1
#define _TXSTA_SENDB_MASK                                   0x8
#define _TXSTA_SYNC_POSN                                    0x4
#define _TXSTA_SYNC_POSITION                                0x4
#define _TXSTA_SYNC_SIZE                                    0x1
#define _TXSTA_SYNC_LENGTH                                  0x1
#define _TXSTA_SYNC_MASK                                    0x10
#define _TXSTA_TXEN_POSN                                    0x5
#define _TXSTA_TXEN_POSITION                                0x5
#define _TXSTA_TXEN_SIZE                                    0x1
#define _TXSTA_TXEN_LENGTH                                  0x1
#define _TXSTA_TXEN_MASK                                    0x20
#define _TXSTA_TX9_POSN                                     0x6
#define _TXSTA_TX9_POSITION                                 0x6
#define _TXSTA_TX9_SIZE                                     0x1
#define _TXSTA_TX9_LENGTH                                   0x1
#define _TXSTA_TX9_MASK                                     0x40
#define _TXSTA_CSRC_POSN                                    0x7
#define _TXSTA_CSRC_POSITION                                0x7
#define _TXSTA_CSRC_SIZE                                    0x1
#define _TXSTA_CSRC_LENGTH                                  0x1
#define _TXSTA_CSRC_MASK                                    0x80

// Register: BAUD1CON
extern volatile unsigned char           BAUD1CON            @ 0x19F;
#ifndef _LIB_BUILD
asm("BAUD1CON equ 019Fh");
#endif
// aliases
extern volatile unsigned char           BAUDCON1            @ 0x19F;
#ifndef _LIB_BUILD
asm("BAUDCON1 equ 019Fh");
#endif
extern volatile unsigned char           BAUDCTL1            @ 0x19F;
#ifndef _LIB_BUILD
asm("BAUDCTL1 equ 019Fh");
#endif
extern volatile unsigned char           BAUDCON             @ 0x19F;
#ifndef _LIB_BUILD
asm("BAUDCON equ 019Fh");
#endif
extern volatile unsigned char           BAUDCTL             @ 0x19F;
#ifndef _LIB_BUILD
asm("BAUDCTL equ 019Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned SCKP                   :1;
        unsigned                        :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
} BAUD1CONbits_t;
extern volatile BAUD1CONbits_t BAUD1CONbits @ 0x19F;
// bitfield macros
#define _BAUD1CON_ABDEN_POSN                                0x0
#define _BAUD1CON_ABDEN_POSITION                            0x0
#define _BAUD1CON_ABDEN_SIZE                                0x1
#define _BAUD1CON_ABDEN_LENGTH                              0x1
#define _BAUD1CON_ABDEN_MASK                                0x1
#define _BAUD1CON_WUE_POSN                                  0x1
#define _BAUD1CON_WUE_POSITION                              0x1
#define _BAUD1CON_WUE_SIZE                                  0x1
#define _BAUD1CON_WUE_LENGTH                                0x1
#define _BAUD1CON_WUE_MASK                                  0x2
#define _BAUD1CON_BRG16_POSN                                0x3
#define _BAUD1CON_BRG16_POSITION                            0x3
#define _BAUD1CON_BRG16_SIZE                                0x1
#define _BAUD1CON_BRG16_LENGTH                              0x1
#define _BAUD1CON_BRG16_MASK                                0x8
#define _BAUD1CON_SCKP_POSN                                 0x4
#define _BAUD1CON_SCKP_POSITION                             0x4
#define _BAUD1CON_SCKP_SIZE                                 0x1
#define _BAUD1CON_SCKP_LENGTH                               0x1
#define _BAUD1CON_SCKP_MASK                                 0x10
#define _BAUD1CON_RCIDL_POSN                                0x6
#define _BAUD1CON_RCIDL_POSITION                            0x6
#define _BAUD1CON_RCIDL_SIZE                                0x1
#define _BAUD1CON_RCIDL_LENGTH                              0x1
#define _BAUD1CON_RCIDL_MASK                                0x40
#define _BAUD1CON_ABDOVF_POSN                               0x7
#define _BAUD1CON_ABDOVF_POSITION                           0x7
#define _BAUD1CON_ABDOVF_SIZE                               0x1
#define _BAUD1CON_ABDOVF_LENGTH                             0x1
#define _BAUD1CON_ABDOVF_MASK                               0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned SCKP                   :1;
        unsigned                        :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
} BAUDCON1bits_t;
extern volatile BAUDCON1bits_t BAUDCON1bits @ 0x19F;
// bitfield macros
#define _BAUDCON1_ABDEN_POSN                                0x0
#define _BAUDCON1_ABDEN_POSITION                            0x0
#define _BAUDCON1_ABDEN_SIZE                                0x1
#define _BAUDCON1_ABDEN_LENGTH                              0x1
#define _BAUDCON1_ABDEN_MASK                                0x1
#define _BAUDCON1_WUE_POSN                                  0x1
#define _BAUDCON1_WUE_POSITION                              0x1
#define _BAUDCON1_WUE_SIZE                                  0x1
#define _BAUDCON1_WUE_LENGTH                                0x1
#define _BAUDCON1_WUE_MASK                                  0x2
#define _BAUDCON1_BRG16_POSN                                0x3
#define _BAUDCON1_BRG16_POSITION                            0x3
#define _BAUDCON1_BRG16_SIZE                                0x1
#define _BAUDCON1_BRG16_LENGTH                              0x1
#define _BAUDCON1_BRG16_MASK                                0x8
#define _BAUDCON1_SCKP_POSN                                 0x4
#define _BAUDCON1_SCKP_POSITION                             0x4
#define _BAUDCON1_SCKP_SIZE                                 0x1
#define _BAUDCON1_SCKP_LENGTH                               0x1
#define _BAUDCON1_SCKP_MASK                                 0x10
#define _BAUDCON1_RCIDL_POSN                                0x6
#define _BAUDCON1_RCIDL_POSITION                            0x6
#define _BAUDCON1_RCIDL_SIZE                                0x1
#define _BAUDCON1_RCIDL_LENGTH                              0x1
#define _BAUDCON1_RCIDL_MASK                                0x40
#define _BAUDCON1_ABDOVF_POSN                               0x7
#define _BAUDCON1_ABDOVF_POSITION                           0x7
#define _BAUDCON1_ABDOVF_SIZE                               0x1
#define _BAUDCON1_ABDOVF_LENGTH                             0x1
#define _BAUDCON1_ABDOVF_MASK                               0x80
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned SCKP                   :1;
        unsigned                        :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
} BAUDCTL1bits_t;
extern volatile BAUDCTL1bits_t BAUDCTL1bits @ 0x19F;
// bitfield macros
#define _BAUDCTL1_ABDEN_POSN                                0x0
#define _BAUDCTL1_ABDEN_POSITION                            0x0
#define _BAUDCTL1_ABDEN_SIZE                                0x1
#define _BAUDCTL1_ABDEN_LENGTH                              0x1
#define _BAUDCTL1_ABDEN_MASK                                0x1
#define _BAUDCTL1_WUE_POSN                                  0x1
#define _BAUDCTL1_WUE_POSITION                              0x1
#define _BAUDCTL1_WUE_SIZE                                  0x1
#define _BAUDCTL1_WUE_LENGTH                                0x1
#define _BAUDCTL1_WUE_MASK                                  0x2
#define _BAUDCTL1_BRG16_POSN                                0x3
#define _BAUDCTL1_BRG16_POSITION                            0x3
#define _BAUDCTL1_BRG16_SIZE                                0x1
#define _BAUDCTL1_BRG16_LENGTH                              0x1
#define _BAUDCTL1_BRG16_MASK                                0x8
#define _BAUDCTL1_SCKP_POSN                                 0x4
#define _BAUDCTL1_SCKP_POSITION                             0x4
#define _BAUDCTL1_SCKP_SIZE                                 0x1
#define _BAUDCTL1_SCKP_LENGTH                               0x1
#define _BAUDCTL1_SCKP_MASK                                 0x10
#define _BAUDCTL1_RCIDL_POSN                                0x6
#define _BAUDCTL1_RCIDL_POSITION                            0x6
#define _BAUDCTL1_RCIDL_SIZE                                0x1
#define _BAUDCTL1_RCIDL_LENGTH                              0x1
#define _BAUDCTL1_RCIDL_MASK                                0x40
#define _BAUDCTL1_ABDOVF_POSN                               0x7
#define _BAUDCTL1_ABDOVF_POSITION                           0x7
#define _BAUDCTL1_ABDOVF_SIZE                               0x1
#define _BAUDCTL1_ABDOVF_LENGTH                             0x1
#define _BAUDCTL1_ABDOVF_MASK                               0x80
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned SCKP                   :1;
        unsigned                        :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
} BAUDCONbits_t;
extern volatile BAUDCONbits_t BAUDCONbits @ 0x19F;
// bitfield macros
#define _BAUDCON_ABDEN_POSN                                 0x0
#define _BAUDCON_ABDEN_POSITION                             0x0
#define _BAUDCON_ABDEN_SIZE                                 0x1
#define _BAUDCON_ABDEN_LENGTH                               0x1
#define _BAUDCON_ABDEN_MASK                                 0x1
#define _BAUDCON_WUE_POSN                                   0x1
#define _BAUDCON_WUE_POSITION                               0x1
#define _BAUDCON_WUE_SIZE                                   0x1
#define _BAUDCON_WUE_LENGTH                                 0x1
#define _BAUDCON_WUE_MASK                                   0x2
#define _BAUDCON_BRG16_POSN                                 0x3
#define _BAUDCON_BRG16_POSITION                             0x3
#define _BAUDCON_BRG16_SIZE                                 0x1
#define _BAUDCON_BRG16_LENGTH                               0x1
#define _BAUDCON_BRG16_MASK                                 0x8
#define _BAUDCON_SCKP_POSN                                  0x4
#define _BAUDCON_SCKP_POSITION                              0x4
#define _BAUDCON_SCKP_SIZE                                  0x1
#define _BAUDCON_SCKP_LENGTH                                0x1
#define _BAUDCON_SCKP_MASK                                  0x10
#define _BAUDCON_RCIDL_POSN                                 0x6
#define _BAUDCON_RCIDL_POSITION                             0x6
#define _BAUDCON_RCIDL_SIZE                                 0x1
#define _BAUDCON_RCIDL_LENGTH                               0x1
#define _BAUDCON_RCIDL_MASK                                 0x40
#define _BAUDCON_ABDOVF_POSN                                0x7
#define _BAUDCON_ABDOVF_POSITION                            0x7
#define _BAUDCON_ABDOVF_SIZE                                0x1
#define _BAUDCON_ABDOVF_LENGTH                              0x1
#define _BAUDCON_ABDOVF_MASK                                0x80
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned SCKP                   :1;
        unsigned                        :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
} BAUDCTLbits_t;
extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x19F;
// bitfield macros
#define _BAUDCTL_ABDEN_POSN                                 0x0
#define _BAUDCTL_ABDEN_POSITION                             0x0
#define _BAUDCTL_ABDEN_SIZE                                 0x1
#define _BAUDCTL_ABDEN_LENGTH                               0x1
#define _BAUDCTL_ABDEN_MASK                                 0x1
#define _BAUDCTL_WUE_POSN                                   0x1
#define _BAUDCTL_WUE_POSITION                               0x1
#define _BAUDCTL_WUE_SIZE                                   0x1
#define _BAUDCTL_WUE_LENGTH                                 0x1
#define _BAUDCTL_WUE_MASK                                   0x2
#define _BAUDCTL_BRG16_POSN                                 0x3
#define _BAUDCTL_BRG16_POSITION                             0x3
#define _BAUDCTL_BRG16_SIZE                                 0x1
#define _BAUDCTL_BRG16_LENGTH                               0x1
#define _BAUDCTL_BRG16_MASK                                 0x8
#define _BAUDCTL_SCKP_POSN                                  0x4
#define _BAUDCTL_SCKP_POSITION                              0x4
#define _BAUDCTL_SCKP_SIZE                                  0x1
#define _BAUDCTL_SCKP_LENGTH                                0x1
#define _BAUDCTL_SCKP_MASK                                  0x10
#define _BAUDCTL_RCIDL_POSN                                 0x6
#define _BAUDCTL_RCIDL_POSITION                             0x6
#define _BAUDCTL_RCIDL_SIZE                                 0x1
#define _BAUDCTL_RCIDL_LENGTH                               0x1
#define _BAUDCTL_RCIDL_MASK                                 0x40
#define _BAUDCTL_ABDOVF_POSN                                0x7
#define _BAUDCTL_ABDOVF_POSITION                            0x7
#define _BAUDCTL_ABDOVF_SIZE                                0x1
#define _BAUDCTL_ABDOVF_LENGTH                              0x1
#define _BAUDCTL_ABDOVF_MASK                                0x80

// Register: WPUA
extern volatile unsigned char           WPUA                @ 0x20C;
#ifndef _LIB_BUILD
asm("WPUA equ 020Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WPUA0                  :1;
        unsigned WPUA1                  :1;
        unsigned WPUA2                  :1;
        unsigned WPUA3                  :1;
        unsigned WPUA4                  :1;
        unsigned WPUA5                  :1;
    };
} WPUAbits_t;
extern volatile WPUAbits_t WPUAbits @ 0x20C;
// bitfield macros
#define _WPUA_WPUA0_POSN                                    0x0
#define _WPUA_WPUA0_POSITION                                0x0
#define _WPUA_WPUA0_SIZE                                    0x1
#define _WPUA_WPUA0_LENGTH                                  0x1
#define _WPUA_WPUA0_MASK                                    0x1
#define _WPUA_WPUA1_POSN                                    0x1
#define _WPUA_WPUA1_POSITION                                0x1
#define _WPUA_WPUA1_SIZE                                    0x1
#define _WPUA_WPUA1_LENGTH                                  0x1
#define _WPUA_WPUA1_MASK                                    0x2
#define _WPUA_WPUA2_POSN                                    0x2
#define _WPUA_WPUA2_POSITION                                0x2
#define _WPUA_WPUA2_SIZE                                    0x1
#define _WPUA_WPUA2_LENGTH                                  0x1
#define _WPUA_WPUA2_MASK                                    0x4
#define _WPUA_WPUA3_POSN                                    0x3
#define _WPUA_WPUA3_POSITION                                0x3
#define _WPUA_WPUA3_SIZE                                    0x1
#define _WPUA_WPUA3_LENGTH                                  0x1
#define _WPUA_WPUA3_MASK                                    0x8
#define _WPUA_WPUA4_POSN                                    0x4
#define _WPUA_WPUA4_POSITION                                0x4
#define _WPUA_WPUA4_SIZE                                    0x1
#define _WPUA_WPUA4_LENGTH                                  0x1
#define _WPUA_WPUA4_MASK                                    0x10
#define _WPUA_WPUA5_POSN                                    0x5
#define _WPUA_WPUA5_POSITION                                0x5
#define _WPUA_WPUA5_SIZE                                    0x1
#define _WPUA_WPUA5_LENGTH                                  0x1
#define _WPUA_WPUA5_MASK                                    0x20

// Register: WPUC
extern volatile unsigned char           WPUC                @ 0x20E;
#ifndef _LIB_BUILD
asm("WPUC equ 020Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WPUC0                  :1;
        unsigned WPUC1                  :1;
        unsigned WPUC2                  :1;
        unsigned WPUC3                  :1;
        unsigned WPUC4                  :1;
        unsigned WPUC5                  :1;
    };
} WPUCbits_t;
extern volatile WPUCbits_t WPUCbits @ 0x20E;
// bitfield macros
#define _WPUC_WPUC0_POSN                                    0x0
#define _WPUC_WPUC0_POSITION                                0x0
#define _WPUC_WPUC0_SIZE                                    0x1
#define _WPUC_WPUC0_LENGTH                                  0x1
#define _WPUC_WPUC0_MASK                                    0x1
#define _WPUC_WPUC1_POSN                                    0x1
#define _WPUC_WPUC1_POSITION                                0x1
#define _WPUC_WPUC1_SIZE                                    0x1
#define _WPUC_WPUC1_LENGTH                                  0x1
#define _WPUC_WPUC1_MASK                                    0x2
#define _WPUC_WPUC2_POSN                                    0x2
#define _WPUC_WPUC2_POSITION                                0x2
#define _WPUC_WPUC2_SIZE                                    0x1
#define _WPUC_WPUC2_LENGTH                                  0x1
#define _WPUC_WPUC2_MASK                                    0x4
#define _WPUC_WPUC3_POSN                                    0x3
#define _WPUC_WPUC3_POSITION                                0x3
#define _WPUC_WPUC3_SIZE                                    0x1
#define _WPUC_WPUC3_LENGTH                                  0x1
#define _WPUC_WPUC3_MASK                                    0x8
#define _WPUC_WPUC4_POSN                                    0x4
#define _WPUC_WPUC4_POSITION                                0x4
#define _WPUC_WPUC4_SIZE                                    0x1
#define _WPUC_WPUC4_LENGTH                                  0x1
#define _WPUC_WPUC4_MASK                                    0x10
#define _WPUC_WPUC5_POSN                                    0x5
#define _WPUC_WPUC5_POSITION                                0x5
#define _WPUC_WPUC5_SIZE                                    0x1
#define _WPUC_WPUC5_LENGTH                                  0x1
#define _WPUC_WPUC5_MASK                                    0x20

// Register: SSP1BUF
extern volatile unsigned char           SSP1BUF             @ 0x211;
#ifndef _LIB_BUILD
asm("SSP1BUF equ 0211h");
#endif
// aliases
extern volatile unsigned char           SSPBUF              @ 0x211;
#ifndef _LIB_BUILD
asm("SSPBUF equ 0211h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSP1BUF0               :1;
        unsigned SSP1BUF1               :1;
        unsigned SSP1BUF2               :1;
        unsigned SSP1BUF3               :1;
        unsigned SSP1BUF4               :1;
        unsigned SSP1BUF5               :1;
        unsigned SSP1BUF6               :1;
        unsigned SSP1BUF7               :1;
    };
    struct {
        unsigned BUF                    :8;
    };
    struct {
        unsigned BUF0                   :1;
        unsigned BUF1                   :1;
        unsigned BUF2                   :1;
        unsigned BUF3                   :1;
        unsigned BUF4                   :1;
        unsigned BUF5                   :1;
        unsigned BUF6                   :1;
        unsigned BUF7                   :1;
    };
    struct {
        unsigned SSP1BUF                :8;
    };
} SSP1BUFbits_t;
extern volatile SSP1BUFbits_t SSP1BUFbits @ 0x211;
// bitfield macros
#define _SSP1BUF_SSP1BUF0_POSN                              0x0
#define _SSP1BUF_SSP1BUF0_POSITION                          0x0
#define _SSP1BUF_SSP1BUF0_SIZE                              0x1
#define _SSP1BUF_SSP1BUF0_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF0_MASK                              0x1
#define _SSP1BUF_SSP1BUF1_POSN                              0x1
#define _SSP1BUF_SSP1BUF1_POSITION                          0x1
#define _SSP1BUF_SSP1BUF1_SIZE                              0x1
#define _SSP1BUF_SSP1BUF1_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF1_MASK                              0x2
#define _SSP1BUF_SSP1BUF2_POSN                              0x2
#define _SSP1BUF_SSP1BUF2_POSITION                          0x2
#define _SSP1BUF_SSP1BUF2_SIZE                              0x1
#define _SSP1BUF_SSP1BUF2_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF2_MASK                              0x4
#define _SSP1BUF_SSP1BUF3_POSN                              0x3
#define _SSP1BUF_SSP1BUF3_POSITION                          0x3
#define _SSP1BUF_SSP1BUF3_SIZE                              0x1
#define _SSP1BUF_SSP1BUF3_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF3_MASK                              0x8
#define _SSP1BUF_SSP1BUF4_POSN                              0x4
#define _SSP1BUF_SSP1BUF4_POSITION                          0x4
#define _SSP1BUF_SSP1BUF4_SIZE                              0x1
#define _SSP1BUF_SSP1BUF4_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF4_MASK                              0x10
#define _SSP1BUF_SSP1BUF5_POSN                              0x5
#define _SSP1BUF_SSP1BUF5_POSITION                          0x5
#define _SSP1BUF_SSP1BUF5_SIZE                              0x1
#define _SSP1BUF_SSP1BUF5_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF5_MASK                              0x20
#define _SSP1BUF_SSP1BUF6_POSN                              0x6
#define _SSP1BUF_SSP1BUF6_POSITION                          0x6
#define _SSP1BUF_SSP1BUF6_SIZE                              0x1
#define _SSP1BUF_SSP1BUF6_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF6_MASK                              0x40
#define _SSP1BUF_SSP1BUF7_POSN                              0x7
#define _SSP1BUF_SSP1BUF7_POSITION                          0x7
#define _SSP1BUF_SSP1BUF7_SIZE                              0x1
#define _SSP1BUF_SSP1BUF7_LENGTH                            0x1
#define _SSP1BUF_SSP1BUF7_MASK                              0x80
#define _SSP1BUF_BUF_POSN                                   0x0
#define _SSP1BUF_BUF_POSITION                               0x0
#define _SSP1BUF_BUF_SIZE                                   0x8
#define _SSP1BUF_BUF_LENGTH                                 0x8
#define _SSP1BUF_BUF_MASK                                   0xFF
#define _SSP1BUF_BUF0_POSN                                  0x0
#define _SSP1BUF_BUF0_POSITION                              0x0
#define _SSP1BUF_BUF0_SIZE                                  0x1
#define _SSP1BUF_BUF0_LENGTH                                0x1
#define _SSP1BUF_BUF0_MASK                                  0x1
#define _SSP1BUF_BUF1_POSN                                  0x1
#define _SSP1BUF_BUF1_POSITION                              0x1
#define _SSP1BUF_BUF1_SIZE                                  0x1
#define _SSP1BUF_BUF1_LENGTH                                0x1
#define _SSP1BUF_BUF1_MASK                                  0x2
#define _SSP1BUF_BUF2_POSN                                  0x2
#define _SSP1BUF_BUF2_POSITION                              0x2
#define _SSP1BUF_BUF2_SIZE                                  0x1
#define _SSP1BUF_BUF2_LENGTH                                0x1
#define _SSP1BUF_BUF2_MASK                                  0x4
#define _SSP1BUF_BUF3_POSN                                  0x3
#define _SSP1BUF_BUF3_POSITION                              0x3
#define _SSP1BUF_BUF3_SIZE                                  0x1
#define _SSP1BUF_BUF3_LENGTH                                0x1
#define _SSP1BUF_BUF3_MASK                                  0x8
#define _SSP1BUF_BUF4_POSN                                  0x4
#define _SSP1BUF_BUF4_POSITION                              0x4
#define _SSP1BUF_BUF4_SIZE                                  0x1
#define _SSP1BUF_BUF4_LENGTH                                0x1
#define _SSP1BUF_BUF4_MASK                                  0x10
#define _SSP1BUF_BUF5_POSN                                  0x5
#define _SSP1BUF_BUF5_POSITION                              0x5
#define _SSP1BUF_BUF5_SIZE                                  0x1
#define _SSP1BUF_BUF5_LENGTH                                0x1
#define _SSP1BUF_BUF5_MASK                                  0x20
#define _SSP1BUF_BUF6_POSN                                  0x6
#define _SSP1BUF_BUF6_POSITION                              0x6
#define _SSP1BUF_BUF6_SIZE                                  0x1
#define _SSP1BUF_BUF6_LENGTH                                0x1
#define _SSP1BUF_BUF6_MASK                                  0x40
#define _SSP1BUF_BUF7_POSN                                  0x7
#define _SSP1BUF_BUF7_POSITION                              0x7
#define _SSP1BUF_BUF7_SIZE                                  0x1
#define _SSP1BUF_BUF7_LENGTH                                0x1
#define _SSP1BUF_BUF7_MASK                                  0x80
#define _SSP1BUF_SSP1BUF_POSN                               0x0
#define _SSP1BUF_SSP1BUF_POSITION                           0x0
#define _SSP1BUF_SSP1BUF_SIZE                               0x8
#define _SSP1BUF_SSP1BUF_LENGTH                             0x8
#define _SSP1BUF_SSP1BUF_MASK                               0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSP1BUF0               :1;
        unsigned SSP1BUF1               :1;
        unsigned SSP1BUF2               :1;
        unsigned SSP1BUF3               :1;
        unsigned SSP1BUF4               :1;
        unsigned SSP1BUF5               :1;
        unsigned SSP1BUF6               :1;
        unsigned SSP1BUF7               :1;
    };
    struct {
        unsigned BUF                    :8;
    };
    struct {
        unsigned BUF0                   :1;
        unsigned BUF1                   :1;
        unsigned BUF2                   :1;
        unsigned BUF3                   :1;
        unsigned BUF4                   :1;
        unsigned BUF5                   :1;
        unsigned BUF6                   :1;
        unsigned BUF7                   :1;
    };
    struct {
        unsigned SSP1BUF                :8;
    };
} SSPBUFbits_t;
extern volatile SSPBUFbits_t SSPBUFbits @ 0x211;
// bitfield macros
#define _SSPBUF_SSP1BUF0_POSN                               0x0
#define _SSPBUF_SSP1BUF0_POSITION                           0x0
#define _SSPBUF_SSP1BUF0_SIZE                               0x1
#define _SSPBUF_SSP1BUF0_LENGTH                             0x1
#define _SSPBUF_SSP1BUF0_MASK                               0x1
#define _SSPBUF_SSP1BUF1_POSN                               0x1
#define _SSPBUF_SSP1BUF1_POSITION                           0x1
#define _SSPBUF_SSP1BUF1_SIZE                               0x1
#define _SSPBUF_SSP1BUF1_LENGTH                             0x1
#define _SSPBUF_SSP1BUF1_MASK                               0x2
#define _SSPBUF_SSP1BUF2_POSN                               0x2
#define _SSPBUF_SSP1BUF2_POSITION                           0x2
#define _SSPBUF_SSP1BUF2_SIZE                               0x1
#define _SSPBUF_SSP1BUF2_LENGTH                             0x1
#define _SSPBUF_SSP1BUF2_MASK                               0x4
#define _SSPBUF_SSP1BUF3_POSN                               0x3
#define _SSPBUF_SSP1BUF3_POSITION                           0x3
#define _SSPBUF_SSP1BUF3_SIZE                               0x1
#define _SSPBUF_SSP1BUF3_LENGTH                             0x1
#define _SSPBUF_SSP1BUF3_MASK                               0x8
#define _SSPBUF_SSP1BUF4_POSN                               0x4
#define _SSPBUF_SSP1BUF4_POSITION                           0x4
#define _SSPBUF_SSP1BUF4_SIZE                               0x1
#define _SSPBUF_SSP1BUF4_LENGTH                             0x1
#define _SSPBUF_SSP1BUF4_MASK                               0x10
#define _SSPBUF_SSP1BUF5_POSN                               0x5
#define _SSPBUF_SSP1BUF5_POSITION                           0x5
#define _SSPBUF_SSP1BUF5_SIZE                               0x1
#define _SSPBUF_SSP1BUF5_LENGTH                             0x1
#define _SSPBUF_SSP1BUF5_MASK                               0x20
#define _SSPBUF_SSP1BUF6_POSN                               0x6
#define _SSPBUF_SSP1BUF6_POSITION                           0x6
#define _SSPBUF_SSP1BUF6_SIZE                               0x1
#define _SSPBUF_SSP1BUF6_LENGTH                             0x1
#define _SSPBUF_SSP1BUF6_MASK                               0x40
#define _SSPBUF_SSP1BUF7_POSN                               0x7
#define _SSPBUF_SSP1BUF7_POSITION                           0x7
#define _SSPBUF_SSP1BUF7_SIZE                               0x1
#define _SSPBUF_SSP1BUF7_LENGTH                             0x1
#define _SSPBUF_SSP1BUF7_MASK                               0x80
#define _SSPBUF_BUF_POSN                                    0x0
#define _SSPBUF_BUF_POSITION                                0x0
#define _SSPBUF_BUF_SIZE                                    0x8
#define _SSPBUF_BUF_LENGTH                                  0x8
#define _SSPBUF_BUF_MASK                                    0xFF
#define _SSPBUF_BUF0_POSN                                   0x0
#define _SSPBUF_BUF0_POSITION                               0x0
#define _SSPBUF_BUF0_SIZE                                   0x1
#define _SSPBUF_BUF0_LENGTH                                 0x1
#define _SSPBUF_BUF0_MASK                                   0x1
#define _SSPBUF_BUF1_POSN                                   0x1
#define _SSPBUF_BUF1_POSITION                               0x1
#define _SSPBUF_BUF1_SIZE                                   0x1
#define _SSPBUF_BUF1_LENGTH                                 0x1
#define _SSPBUF_BUF1_MASK                                   0x2
#define _SSPBUF_BUF2_POSN                                   0x2
#define _SSPBUF_BUF2_POSITION                               0x2
#define _SSPBUF_BUF2_SIZE                                   0x1
#define _SSPBUF_BUF2_LENGTH                                 0x1
#define _SSPBUF_BUF2_MASK                                   0x4
#define _SSPBUF_BUF3_POSN                                   0x3
#define _SSPBUF_BUF3_POSITION                               0x3
#define _SSPBUF_BUF3_SIZE                                   0x1
#define _SSPBUF_BUF3_LENGTH                                 0x1
#define _SSPBUF_BUF3_MASK                                   0x8
#define _SSPBUF_BUF4_POSN                                   0x4
#define _SSPBUF_BUF4_POSITION                               0x4
#define _SSPBUF_BUF4_SIZE                                   0x1
#define _SSPBUF_BUF4_LENGTH                                 0x1
#define _SSPBUF_BUF4_MASK                                   0x10
#define _SSPBUF_BUF5_POSN                                   0x5
#define _SSPBUF_BUF5_POSITION                               0x5
#define _SSPBUF_BUF5_SIZE                                   0x1
#define _SSPBUF_BUF5_LENGTH                                 0x1
#define _SSPBUF_BUF5_MASK                                   0x20
#define _SSPBUF_BUF6_POSN                                   0x6
#define _SSPBUF_BUF6_POSITION                               0x6
#define _SSPBUF_BUF6_SIZE                                   0x1
#define _SSPBUF_BUF6_LENGTH                                 0x1
#define _SSPBUF_BUF6_MASK                                   0x40
#define _SSPBUF_BUF7_POSN                                   0x7
#define _SSPBUF_BUF7_POSITION                               0x7
#define _SSPBUF_BUF7_SIZE                                   0x1
#define _SSPBUF_BUF7_LENGTH                                 0x1
#define _SSPBUF_BUF7_MASK                                   0x80
#define _SSPBUF_SSP1BUF_POSN                                0x0
#define _SSPBUF_SSP1BUF_POSITION                            0x0
#define _SSPBUF_SSP1BUF_SIZE                                0x8
#define _SSPBUF_SSP1BUF_LENGTH                              0x8
#define _SSPBUF_SSP1BUF_MASK                                0xFF

// Register: SSP1ADD
extern volatile unsigned char           SSP1ADD             @ 0x212;
#ifndef _LIB_BUILD
asm("SSP1ADD equ 0212h");
#endif
// aliases
extern volatile unsigned char           SSPADD              @ 0x212;
#ifndef _LIB_BUILD
asm("SSPADD equ 0212h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSP1ADD0               :1;
        unsigned SSP1ADD1               :1;
        unsigned SSP1ADD2               :1;
        unsigned SSP1ADD3               :1;
        unsigned SSP1ADD4               :1;
        unsigned SSP1ADD5               :1;
        unsigned SSP1ADD6               :1;
        unsigned SSP1ADD7               :1;
    };
    struct {
        unsigned ADD                    :8;
    };
    struct {
        unsigned ADD0                   :1;
        unsigned ADD1                   :1;
        unsigned ADD2                   :1;
        unsigned ADD3                   :1;
        unsigned ADD4                   :1;
        unsigned ADD5                   :1;
        unsigned ADD6                   :1;
        unsigned ADD7                   :1;
    };
    struct {
        unsigned SSP1ADD                :8;
    };
} SSP1ADDbits_t;
extern volatile SSP1ADDbits_t SSP1ADDbits @ 0x212;
// bitfield macros
#define _SSP1ADD_SSP1ADD0_POSN                              0x0
#define _SSP1ADD_SSP1ADD0_POSITION                          0x0
#define _SSP1ADD_SSP1ADD0_SIZE                              0x1
#define _SSP1ADD_SSP1ADD0_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD0_MASK                              0x1
#define _SSP1ADD_SSP1ADD1_POSN                              0x1
#define _SSP1ADD_SSP1ADD1_POSITION                          0x1
#define _SSP1ADD_SSP1ADD1_SIZE                              0x1
#define _SSP1ADD_SSP1ADD1_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD1_MASK                              0x2
#define _SSP1ADD_SSP1ADD2_POSN                              0x2
#define _SSP1ADD_SSP1ADD2_POSITION                          0x2
#define _SSP1ADD_SSP1ADD2_SIZE                              0x1
#define _SSP1ADD_SSP1ADD2_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD2_MASK                              0x4
#define _SSP1ADD_SSP1ADD3_POSN                              0x3
#define _SSP1ADD_SSP1ADD3_POSITION                          0x3
#define _SSP1ADD_SSP1ADD3_SIZE                              0x1
#define _SSP1ADD_SSP1ADD3_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD3_MASK                              0x8
#define _SSP1ADD_SSP1ADD4_POSN                              0x4
#define _SSP1ADD_SSP1ADD4_POSITION                          0x4
#define _SSP1ADD_SSP1ADD4_SIZE                              0x1
#define _SSP1ADD_SSP1ADD4_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD4_MASK                              0x10
#define _SSP1ADD_SSP1ADD5_POSN                              0x5
#define _SSP1ADD_SSP1ADD5_POSITION                          0x5
#define _SSP1ADD_SSP1ADD5_SIZE                              0x1
#define _SSP1ADD_SSP1ADD5_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD5_MASK                              0x20
#define _SSP1ADD_SSP1ADD6_POSN                              0x6
#define _SSP1ADD_SSP1ADD6_POSITION                          0x6
#define _SSP1ADD_SSP1ADD6_SIZE                              0x1
#define _SSP1ADD_SSP1ADD6_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD6_MASK                              0x40
#define _SSP1ADD_SSP1ADD7_POSN                              0x7
#define _SSP1ADD_SSP1ADD7_POSITION                          0x7
#define _SSP1ADD_SSP1ADD7_SIZE                              0x1
#define _SSP1ADD_SSP1ADD7_LENGTH                            0x1
#define _SSP1ADD_SSP1ADD7_MASK                              0x80
#define _SSP1ADD_ADD_POSN                                   0x0
#define _SSP1ADD_ADD_POSITION                               0x0
#define _SSP1ADD_ADD_SIZE                                   0x8
#define _SSP1ADD_ADD_LENGTH                                 0x8
#define _SSP1ADD_ADD_MASK                                   0xFF
#define _SSP1ADD_ADD0_POSN                                  0x0
#define _SSP1ADD_ADD0_POSITION                              0x0
#define _SSP1ADD_ADD0_SIZE                                  0x1
#define _SSP1ADD_ADD0_LENGTH                                0x1
#define _SSP1ADD_ADD0_MASK                                  0x1
#define _SSP1ADD_ADD1_POSN                                  0x1
#define _SSP1ADD_ADD1_POSITION                              0x1
#define _SSP1ADD_ADD1_SIZE                                  0x1
#define _SSP1ADD_ADD1_LENGTH                                0x1
#define _SSP1ADD_ADD1_MASK                                  0x2
#define _SSP1ADD_ADD2_POSN                                  0x2
#define _SSP1ADD_ADD2_POSITION                              0x2
#define _SSP1ADD_ADD2_SIZE                                  0x1
#define _SSP1ADD_ADD2_LENGTH                                0x1
#define _SSP1ADD_ADD2_MASK                                  0x4
#define _SSP1ADD_ADD3_POSN                                  0x3
#define _SSP1ADD_ADD3_POSITION                              0x3
#define _SSP1ADD_ADD3_SIZE                                  0x1
#define _SSP1ADD_ADD3_LENGTH                                0x1
#define _SSP1ADD_ADD3_MASK                                  0x8
#define _SSP1ADD_ADD4_POSN                                  0x4
#define _SSP1ADD_ADD4_POSITION                              0x4
#define _SSP1ADD_ADD4_SIZE                                  0x1
#define _SSP1ADD_ADD4_LENGTH                                0x1
#define _SSP1ADD_ADD4_MASK                                  0x10
#define _SSP1ADD_ADD5_POSN                                  0x5
#define _SSP1ADD_ADD5_POSITION                              0x5
#define _SSP1ADD_ADD5_SIZE                                  0x1
#define _SSP1ADD_ADD5_LENGTH                                0x1
#define _SSP1ADD_ADD5_MASK                                  0x20
#define _SSP1ADD_ADD6_POSN                                  0x6
#define _SSP1ADD_ADD6_POSITION                              0x6
#define _SSP1ADD_ADD6_SIZE                                  0x1
#define _SSP1ADD_ADD6_LENGTH                                0x1
#define _SSP1ADD_ADD6_MASK                                  0x40
#define _SSP1ADD_ADD7_POSN                                  0x7
#define _SSP1ADD_ADD7_POSITION                              0x7
#define _SSP1ADD_ADD7_SIZE                                  0x1
#define _SSP1ADD_ADD7_LENGTH                                0x1
#define _SSP1ADD_ADD7_MASK                                  0x80
#define _SSP1ADD_SSP1ADD_POSN                               0x0
#define _SSP1ADD_SSP1ADD_POSITION                           0x0
#define _SSP1ADD_SSP1ADD_SIZE                               0x8
#define _SSP1ADD_SSP1ADD_LENGTH                             0x8
#define _SSP1ADD_SSP1ADD_MASK                               0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSP1ADD0               :1;
        unsigned SSP1ADD1               :1;
        unsigned SSP1ADD2               :1;
        unsigned SSP1ADD3               :1;
        unsigned SSP1ADD4               :1;
        unsigned SSP1ADD5               :1;
        unsigned SSP1ADD6               :1;
        unsigned SSP1ADD7               :1;
    };
    struct {
        unsigned ADD                    :8;
    };
    struct {
        unsigned ADD0                   :1;
        unsigned ADD1                   :1;
        unsigned ADD2                   :1;
        unsigned ADD3                   :1;
        unsigned ADD4                   :1;
        unsigned ADD5                   :1;
        unsigned ADD6                   :1;
        unsigned ADD7                   :1;
    };
    struct {
        unsigned SSP1ADD                :8;
    };
} SSPADDbits_t;
extern volatile SSPADDbits_t SSPADDbits @ 0x212;
// bitfield macros
#define _SSPADD_SSP1ADD0_POSN                               0x0
#define _SSPADD_SSP1ADD0_POSITION                           0x0
#define _SSPADD_SSP1ADD0_SIZE                               0x1
#define _SSPADD_SSP1ADD0_LENGTH                             0x1
#define _SSPADD_SSP1ADD0_MASK                               0x1
#define _SSPADD_SSP1ADD1_POSN                               0x1
#define _SSPADD_SSP1ADD1_POSITION                           0x1
#define _SSPADD_SSP1ADD1_SIZE                               0x1
#define _SSPADD_SSP1ADD1_LENGTH                             0x1
#define _SSPADD_SSP1ADD1_MASK                               0x2
#define _SSPADD_SSP1ADD2_POSN                               0x2
#define _SSPADD_SSP1ADD2_POSITION                           0x2
#define _SSPADD_SSP1ADD2_SIZE                               0x1
#define _SSPADD_SSP1ADD2_LENGTH                             0x1
#define _SSPADD_SSP1ADD2_MASK                               0x4
#define _SSPADD_SSP1ADD3_POSN                               0x3
#define _SSPADD_SSP1ADD3_POSITION                           0x3
#define _SSPADD_SSP1ADD3_SIZE                               0x1
#define _SSPADD_SSP1ADD3_LENGTH                             0x1
#define _SSPADD_SSP1ADD3_MASK                               0x8
#define _SSPADD_SSP1ADD4_POSN                               0x4
#define _SSPADD_SSP1ADD4_POSITION                           0x4
#define _SSPADD_SSP1ADD4_SIZE                               0x1
#define _SSPADD_SSP1ADD4_LENGTH                             0x1
#define _SSPADD_SSP1ADD4_MASK                               0x10
#define _SSPADD_SSP1ADD5_POSN                               0x5
#define _SSPADD_SSP1ADD5_POSITION                           0x5
#define _SSPADD_SSP1ADD5_SIZE                               0x1
#define _SSPADD_SSP1ADD5_LENGTH                             0x1
#define _SSPADD_SSP1ADD5_MASK                               0x20
#define _SSPADD_SSP1ADD6_POSN                               0x6
#define _SSPADD_SSP1ADD6_POSITION                           0x6
#define _SSPADD_SSP1ADD6_SIZE                               0x1
#define _SSPADD_SSP1ADD6_LENGTH                             0x1
#define _SSPADD_SSP1ADD6_MASK                               0x40
#define _SSPADD_SSP1ADD7_POSN                               0x7
#define _SSPADD_SSP1ADD7_POSITION                           0x7
#define _SSPADD_SSP1ADD7_SIZE                               0x1
#define _SSPADD_SSP1ADD7_LENGTH                             0x1
#define _SSPADD_SSP1ADD7_MASK                               0x80
#define _SSPADD_ADD_POSN                                    0x0
#define _SSPADD_ADD_POSITION                                0x0
#define _SSPADD_ADD_SIZE                                    0x8
#define _SSPADD_ADD_LENGTH                                  0x8
#define _SSPADD_ADD_MASK                                    0xFF
#define _SSPADD_ADD0_POSN                                   0x0
#define _SSPADD_ADD0_POSITION                               0x0
#define _SSPADD_ADD0_SIZE                                   0x1
#define _SSPADD_ADD0_LENGTH                                 0x1
#define _SSPADD_ADD0_MASK                                   0x1
#define _SSPADD_ADD1_POSN                                   0x1
#define _SSPADD_ADD1_POSITION                               0x1
#define _SSPADD_ADD1_SIZE                                   0x1
#define _SSPADD_ADD1_LENGTH                                 0x1
#define _SSPADD_ADD1_MASK                                   0x2
#define _SSPADD_ADD2_POSN                                   0x2
#define _SSPADD_ADD2_POSITION                               0x2
#define _SSPADD_ADD2_SIZE                                   0x1
#define _SSPADD_ADD2_LENGTH                                 0x1
#define _SSPADD_ADD2_MASK                                   0x4
#define _SSPADD_ADD3_POSN                                   0x3
#define _SSPADD_ADD3_POSITION                               0x3
#define _SSPADD_ADD3_SIZE                                   0x1
#define _SSPADD_ADD3_LENGTH                                 0x1
#define _SSPADD_ADD3_MASK                                   0x8
#define _SSPADD_ADD4_POSN                                   0x4
#define _SSPADD_ADD4_POSITION                               0x4
#define _SSPADD_ADD4_SIZE                                   0x1
#define _SSPADD_ADD4_LENGTH                                 0x1
#define _SSPADD_ADD4_MASK                                   0x10
#define _SSPADD_ADD5_POSN                                   0x5
#define _SSPADD_ADD5_POSITION                               0x5
#define _SSPADD_ADD5_SIZE                                   0x1
#define _SSPADD_ADD5_LENGTH                                 0x1
#define _SSPADD_ADD5_MASK                                   0x20
#define _SSPADD_ADD6_POSN                                   0x6
#define _SSPADD_ADD6_POSITION                               0x6
#define _SSPADD_ADD6_SIZE                                   0x1
#define _SSPADD_ADD6_LENGTH                                 0x1
#define _SSPADD_ADD6_MASK                                   0x40
#define _SSPADD_ADD7_POSN                                   0x7
#define _SSPADD_ADD7_POSITION                               0x7
#define _SSPADD_ADD7_SIZE                                   0x1
#define _SSPADD_ADD7_LENGTH                                 0x1
#define _SSPADD_ADD7_MASK                                   0x80
#define _SSPADD_SSP1ADD_POSN                                0x0
#define _SSPADD_SSP1ADD_POSITION                            0x0
#define _SSPADD_SSP1ADD_SIZE                                0x8
#define _SSPADD_SSP1ADD_LENGTH                              0x8
#define _SSPADD_SSP1ADD_MASK                                0xFF

// Register: SSP1MSK
extern volatile unsigned char           SSP1MSK             @ 0x213;
#ifndef _LIB_BUILD
asm("SSP1MSK equ 0213h");
#endif
// aliases
extern volatile unsigned char           SSPMSK              @ 0x213;
#ifndef _LIB_BUILD
asm("SSPMSK equ 0213h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSP1MSK0               :1;
        unsigned SSP1MSK1               :1;
        unsigned SSP1MSK2               :1;
        unsigned SSP1MSK3               :1;
        unsigned SSP1MSK4               :1;
        unsigned SSP1MSK5               :1;
        unsigned SSP1MSK6               :1;
        unsigned SSP1MSK7               :1;
    };
    struct {
        unsigned MSK                    :8;
    };
    struct {
        unsigned MSK0                   :1;
        unsigned MSK1                   :1;
        unsigned MSK2                   :1;
        unsigned MSK3                   :1;
        unsigned MSK4                   :1;
        unsigned MSK5                   :1;
        unsigned MSK6                   :1;
        unsigned MSK7                   :1;
    };
    struct {
        unsigned SSP1MSK                :8;
    };
} SSP1MSKbits_t;
extern volatile SSP1MSKbits_t SSP1MSKbits @ 0x213;
// bitfield macros
#define _SSP1MSK_SSP1MSK0_POSN                              0x0
#define _SSP1MSK_SSP1MSK0_POSITION                          0x0
#define _SSP1MSK_SSP1MSK0_SIZE                              0x1
#define _SSP1MSK_SSP1MSK0_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK0_MASK                              0x1
#define _SSP1MSK_SSP1MSK1_POSN                              0x1
#define _SSP1MSK_SSP1MSK1_POSITION                          0x1
#define _SSP1MSK_SSP1MSK1_SIZE                              0x1
#define _SSP1MSK_SSP1MSK1_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK1_MASK                              0x2
#define _SSP1MSK_SSP1MSK2_POSN                              0x2
#define _SSP1MSK_SSP1MSK2_POSITION                          0x2
#define _SSP1MSK_SSP1MSK2_SIZE                              0x1
#define _SSP1MSK_SSP1MSK2_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK2_MASK                              0x4
#define _SSP1MSK_SSP1MSK3_POSN                              0x3
#define _SSP1MSK_SSP1MSK3_POSITION                          0x3
#define _SSP1MSK_SSP1MSK3_SIZE                              0x1
#define _SSP1MSK_SSP1MSK3_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK3_MASK                              0x8
#define _SSP1MSK_SSP1MSK4_POSN                              0x4
#define _SSP1MSK_SSP1MSK4_POSITION                          0x4
#define _SSP1MSK_SSP1MSK4_SIZE                              0x1
#define _SSP1MSK_SSP1MSK4_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK4_MASK                              0x10
#define _SSP1MSK_SSP1MSK5_POSN                              0x5
#define _SSP1MSK_SSP1MSK5_POSITION                          0x5
#define _SSP1MSK_SSP1MSK5_SIZE                              0x1
#define _SSP1MSK_SSP1MSK5_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK5_MASK                              0x20
#define _SSP1MSK_SSP1MSK6_POSN                              0x6
#define _SSP1MSK_SSP1MSK6_POSITION                          0x6
#define _SSP1MSK_SSP1MSK6_SIZE                              0x1
#define _SSP1MSK_SSP1MSK6_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK6_MASK                              0x40
#define _SSP1MSK_SSP1MSK7_POSN                              0x7
#define _SSP1MSK_SSP1MSK7_POSITION                          0x7
#define _SSP1MSK_SSP1MSK7_SIZE                              0x1
#define _SSP1MSK_SSP1MSK7_LENGTH                            0x1
#define _SSP1MSK_SSP1MSK7_MASK                              0x80
#define _SSP1MSK_MSK_POSN                                   0x0
#define _SSP1MSK_MSK_POSITION                               0x0
#define _SSP1MSK_MSK_SIZE                                   0x8
#define _SSP1MSK_MSK_LENGTH                                 0x8
#define _SSP1MSK_MSK_MASK                                   0xFF
#define _SSP1MSK_MSK0_POSN                                  0x0
#define _SSP1MSK_MSK0_POSITION                              0x0
#define _SSP1MSK_MSK0_SIZE                                  0x1
#define _SSP1MSK_MSK0_LENGTH                                0x1
#define _SSP1MSK_MSK0_MASK                                  0x1
#define _SSP1MSK_MSK1_POSN                                  0x1
#define _SSP1MSK_MSK1_POSITION                              0x1
#define _SSP1MSK_MSK1_SIZE                                  0x1
#define _SSP1MSK_MSK1_LENGTH                                0x1
#define _SSP1MSK_MSK1_MASK                                  0x2
#define _SSP1MSK_MSK2_POSN                                  0x2
#define _SSP1MSK_MSK2_POSITION                              0x2
#define _SSP1MSK_MSK2_SIZE                                  0x1
#define _SSP1MSK_MSK2_LENGTH                                0x1
#define _SSP1MSK_MSK2_MASK                                  0x4
#define _SSP1MSK_MSK3_POSN                                  0x3
#define _SSP1MSK_MSK3_POSITION                              0x3
#define _SSP1MSK_MSK3_SIZE                                  0x1
#define _SSP1MSK_MSK3_LENGTH                                0x1
#define _SSP1MSK_MSK3_MASK                                  0x8
#define _SSP1MSK_MSK4_POSN                                  0x4
#define _SSP1MSK_MSK4_POSITION                              0x4
#define _SSP1MSK_MSK4_SIZE                                  0x1
#define _SSP1MSK_MSK4_LENGTH                                0x1
#define _SSP1MSK_MSK4_MASK                                  0x10
#define _SSP1MSK_MSK5_POSN                                  0x5
#define _SSP1MSK_MSK5_POSITION                              0x5
#define _SSP1MSK_MSK5_SIZE                                  0x1
#define _SSP1MSK_MSK5_LENGTH                                0x1
#define _SSP1MSK_MSK5_MASK                                  0x20
#define _SSP1MSK_MSK6_POSN                                  0x6
#define _SSP1MSK_MSK6_POSITION                              0x6
#define _SSP1MSK_MSK6_SIZE                                  0x1
#define _SSP1MSK_MSK6_LENGTH                                0x1
#define _SSP1MSK_MSK6_MASK                                  0x40
#define _SSP1MSK_MSK7_POSN                                  0x7
#define _SSP1MSK_MSK7_POSITION                              0x7
#define _SSP1MSK_MSK7_SIZE                                  0x1
#define _SSP1MSK_MSK7_LENGTH                                0x1
#define _SSP1MSK_MSK7_MASK                                  0x80
#define _SSP1MSK_SSP1MSK_POSN                               0x0
#define _SSP1MSK_SSP1MSK_POSITION                           0x0
#define _SSP1MSK_SSP1MSK_SIZE                               0x8
#define _SSP1MSK_SSP1MSK_LENGTH                             0x8
#define _SSP1MSK_SSP1MSK_MASK                               0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSP1MSK0               :1;
        unsigned SSP1MSK1               :1;
        unsigned SSP1MSK2               :1;
        unsigned SSP1MSK3               :1;
        unsigned SSP1MSK4               :1;
        unsigned SSP1MSK5               :1;
        unsigned SSP1MSK6               :1;
        unsigned SSP1MSK7               :1;
    };
    struct {
        unsigned MSK                    :8;
    };
    struct {
        unsigned MSK0                   :1;
        unsigned MSK1                   :1;
        unsigned MSK2                   :1;
        unsigned MSK3                   :1;
        unsigned MSK4                   :1;
        unsigned MSK5                   :1;
        unsigned MSK6                   :1;
        unsigned MSK7                   :1;
    };
    struct {
        unsigned SSP1MSK                :8;
    };
} SSPMSKbits_t;
extern volatile SSPMSKbits_t SSPMSKbits @ 0x213;
// bitfield macros
#define _SSPMSK_SSP1MSK0_POSN                               0x0
#define _SSPMSK_SSP1MSK0_POSITION                           0x0
#define _SSPMSK_SSP1MSK0_SIZE                               0x1
#define _SSPMSK_SSP1MSK0_LENGTH                             0x1
#define _SSPMSK_SSP1MSK0_MASK                               0x1
#define _SSPMSK_SSP1MSK1_POSN                               0x1
#define _SSPMSK_SSP1MSK1_POSITION                           0x1
#define _SSPMSK_SSP1MSK1_SIZE                               0x1
#define _SSPMSK_SSP1MSK1_LENGTH                             0x1
#define _SSPMSK_SSP1MSK1_MASK                               0x2
#define _SSPMSK_SSP1MSK2_POSN                               0x2
#define _SSPMSK_SSP1MSK2_POSITION                           0x2
#define _SSPMSK_SSP1MSK2_SIZE                               0x1
#define _SSPMSK_SSP1MSK2_LENGTH                             0x1
#define _SSPMSK_SSP1MSK2_MASK                               0x4
#define _SSPMSK_SSP1MSK3_POSN                               0x3
#define _SSPMSK_SSP1MSK3_POSITION                           0x3
#define _SSPMSK_SSP1MSK3_SIZE                               0x1
#define _SSPMSK_SSP1MSK3_LENGTH                             0x1
#define _SSPMSK_SSP1MSK3_MASK                               0x8
#define _SSPMSK_SSP1MSK4_POSN                               0x4
#define _SSPMSK_SSP1MSK4_POSITION                           0x4
#define _SSPMSK_SSP1MSK4_SIZE                               0x1
#define _SSPMSK_SSP1MSK4_LENGTH                             0x1
#define _SSPMSK_SSP1MSK4_MASK                               0x10
#define _SSPMSK_SSP1MSK5_POSN                               0x5
#define _SSPMSK_SSP1MSK5_POSITION                           0x5
#define _SSPMSK_SSP1MSK5_SIZE                               0x1
#define _SSPMSK_SSP1MSK5_LENGTH                             0x1
#define _SSPMSK_SSP1MSK5_MASK                               0x20
#define _SSPMSK_SSP1MSK6_POSN                               0x6
#define _SSPMSK_SSP1MSK6_POSITION                           0x6
#define _SSPMSK_SSP1MSK6_SIZE                               0x1
#define _SSPMSK_SSP1MSK6_LENGTH                             0x1
#define _SSPMSK_SSP1MSK6_MASK                               0x40
#define _SSPMSK_SSP1MSK7_POSN                               0x7
#define _SSPMSK_SSP1MSK7_POSITION                           0x7
#define _SSPMSK_SSP1MSK7_SIZE                               0x1
#define _SSPMSK_SSP1MSK7_LENGTH                             0x1
#define _SSPMSK_SSP1MSK7_MASK                               0x80
#define _SSPMSK_MSK_POSN                                    0x0
#define _SSPMSK_MSK_POSITION                                0x0
#define _SSPMSK_MSK_SIZE                                    0x8
#define _SSPMSK_MSK_LENGTH                                  0x8
#define _SSPMSK_MSK_MASK                                    0xFF
#define _SSPMSK_MSK0_POSN                                   0x0
#define _SSPMSK_MSK0_POSITION                               0x0
#define _SSPMSK_MSK0_SIZE                                   0x1
#define _SSPMSK_MSK0_LENGTH                                 0x1
#define _SSPMSK_MSK0_MASK                                   0x1
#define _SSPMSK_MSK1_POSN                                   0x1
#define _SSPMSK_MSK1_POSITION                               0x1
#define _SSPMSK_MSK1_SIZE                                   0x1
#define _SSPMSK_MSK1_LENGTH                                 0x1
#define _SSPMSK_MSK1_MASK                                   0x2
#define _SSPMSK_MSK2_POSN                                   0x2
#define _SSPMSK_MSK2_POSITION                               0x2
#define _SSPMSK_MSK2_SIZE                                   0x1
#define _SSPMSK_MSK2_LENGTH                                 0x1
#define _SSPMSK_MSK2_MASK                                   0x4
#define _SSPMSK_MSK3_POSN                                   0x3
#define _SSPMSK_MSK3_POSITION                               0x3
#define _SSPMSK_MSK3_SIZE                                   0x1
#define _SSPMSK_MSK3_LENGTH                                 0x1
#define _SSPMSK_MSK3_MASK                                   0x8
#define _SSPMSK_MSK4_POSN                                   0x4
#define _SSPMSK_MSK4_POSITION                               0x4
#define _SSPMSK_MSK4_SIZE                                   0x1
#define _SSPMSK_MSK4_LENGTH                                 0x1
#define _SSPMSK_MSK4_MASK                                   0x10
#define _SSPMSK_MSK5_POSN                                   0x5
#define _SSPMSK_MSK5_POSITION                               0x5
#define _SSPMSK_MSK5_SIZE                                   0x1
#define _SSPMSK_MSK5_LENGTH                                 0x1
#define _SSPMSK_MSK5_MASK                                   0x20
#define _SSPMSK_MSK6_POSN                                   0x6
#define _SSPMSK_MSK6_POSITION                               0x6
#define _SSPMSK_MSK6_SIZE                                   0x1
#define _SSPMSK_MSK6_LENGTH                                 0x1
#define _SSPMSK_MSK6_MASK                                   0x40
#define _SSPMSK_MSK7_POSN                                   0x7
#define _SSPMSK_MSK7_POSITION                               0x7
#define _SSPMSK_MSK7_SIZE                                   0x1
#define _SSPMSK_MSK7_LENGTH                                 0x1
#define _SSPMSK_MSK7_MASK                                   0x80
#define _SSPMSK_SSP1MSK_POSN                                0x0
#define _SSPMSK_SSP1MSK_POSITION                            0x0
#define _SSPMSK_SSP1MSK_SIZE                                0x8
#define _SSPMSK_SSP1MSK_LENGTH                              0x8
#define _SSPMSK_SSP1MSK_MASK                                0xFF

// Register: SSP1STAT
extern volatile unsigned char           SSP1STAT            @ 0x214;
#ifndef _LIB_BUILD
asm("SSP1STAT equ 0214h");
#endif
// aliases
extern volatile unsigned char           SSPSTAT             @ 0x214;
#ifndef _LIB_BUILD
asm("SSPSTAT equ 0214h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BF                     :1;
        unsigned UA                     :1;
        unsigned R_nW                   :1;
        unsigned S                      :1;
        unsigned P                      :1;
        unsigned D_nA                   :1;
        unsigned CKE                    :1;
        unsigned SMP                    :1;
    };
} SSP1STATbits_t;
extern volatile SSP1STATbits_t SSP1STATbits @ 0x214;
// bitfield macros
#define _SSP1STAT_BF_POSN                                   0x0
#define _SSP1STAT_BF_POSITION                               0x0
#define _SSP1STAT_BF_SIZE                                   0x1
#define _SSP1STAT_BF_LENGTH                                 0x1
#define _SSP1STAT_BF_MASK                                   0x1
#define _SSP1STAT_UA_POSN                                   0x1
#define _SSP1STAT_UA_POSITION                               0x1
#define _SSP1STAT_UA_SIZE                                   0x1
#define _SSP1STAT_UA_LENGTH                                 0x1
#define _SSP1STAT_UA_MASK                                   0x2
#define _SSP1STAT_R_nW_POSN                                 0x2
#define _SSP1STAT_R_nW_POSITION                             0x2
#define _SSP1STAT_R_nW_SIZE                                 0x1
#define _SSP1STAT_R_nW_LENGTH                               0x1
#define _SSP1STAT_R_nW_MASK                                 0x4
#define _SSP1STAT_S_POSN                                    0x3
#define _SSP1STAT_S_POSITION                                0x3
#define _SSP1STAT_S_SIZE                                    0x1
#define _SSP1STAT_S_LENGTH                                  0x1
#define _SSP1STAT_S_MASK                                    0x8
#define _SSP1STAT_P_POSN                                    0x4
#define _SSP1STAT_P_POSITION                                0x4
#define _SSP1STAT_P_SIZE                                    0x1
#define _SSP1STAT_P_LENGTH                                  0x1
#define _SSP1STAT_P_MASK                                    0x10
#define _SSP1STAT_D_nA_POSN                                 0x5
#define _SSP1STAT_D_nA_POSITION                             0x5
#define _SSP1STAT_D_nA_SIZE                                 0x1
#define _SSP1STAT_D_nA_LENGTH                               0x1
#define _SSP1STAT_D_nA_MASK                                 0x20
#define _SSP1STAT_CKE_POSN                                  0x6
#define _SSP1STAT_CKE_POSITION                              0x6
#define _SSP1STAT_CKE_SIZE                                  0x1
#define _SSP1STAT_CKE_LENGTH                                0x1
#define _SSP1STAT_CKE_MASK                                  0x40
#define _SSP1STAT_SMP_POSN                                  0x7
#define _SSP1STAT_SMP_POSITION                              0x7
#define _SSP1STAT_SMP_SIZE                                  0x1
#define _SSP1STAT_SMP_LENGTH                                0x1
#define _SSP1STAT_SMP_MASK                                  0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned BF                     :1;
        unsigned UA                     :1;
        unsigned R_nW                   :1;
        unsigned S                      :1;
        unsigned P                      :1;
        unsigned D_nA                   :1;
        unsigned CKE                    :1;
        unsigned SMP                    :1;
    };
} SSPSTATbits_t;
extern volatile SSPSTATbits_t SSPSTATbits @ 0x214;
// bitfield macros
#define _SSPSTAT_BF_POSN                                    0x0
#define _SSPSTAT_BF_POSITION                                0x0
#define _SSPSTAT_BF_SIZE                                    0x1
#define _SSPSTAT_BF_LENGTH                                  0x1
#define _SSPSTAT_BF_MASK                                    0x1
#define _SSPSTAT_UA_POSN                                    0x1
#define _SSPSTAT_UA_POSITION                                0x1
#define _SSPSTAT_UA_SIZE                                    0x1
#define _SSPSTAT_UA_LENGTH                                  0x1
#define _SSPSTAT_UA_MASK                                    0x2
#define _SSPSTAT_R_nW_POSN                                  0x2
#define _SSPSTAT_R_nW_POSITION                              0x2
#define _SSPSTAT_R_nW_SIZE                                  0x1
#define _SSPSTAT_R_nW_LENGTH                                0x1
#define _SSPSTAT_R_nW_MASK                                  0x4
#define _SSPSTAT_S_POSN                                     0x3
#define _SSPSTAT_S_POSITION                                 0x3
#define _SSPSTAT_S_SIZE                                     0x1
#define _SSPSTAT_S_LENGTH                                   0x1
#define _SSPSTAT_S_MASK                                     0x8
#define _SSPSTAT_P_POSN                                     0x4
#define _SSPSTAT_P_POSITION                                 0x4
#define _SSPSTAT_P_SIZE                                     0x1
#define _SSPSTAT_P_LENGTH                                   0x1
#define _SSPSTAT_P_MASK                                     0x10
#define _SSPSTAT_D_nA_POSN                                  0x5
#define _SSPSTAT_D_nA_POSITION                              0x5
#define _SSPSTAT_D_nA_SIZE                                  0x1
#define _SSPSTAT_D_nA_LENGTH                                0x1
#define _SSPSTAT_D_nA_MASK                                  0x20
#define _SSPSTAT_CKE_POSN                                   0x6
#define _SSPSTAT_CKE_POSITION                               0x6
#define _SSPSTAT_CKE_SIZE                                   0x1
#define _SSPSTAT_CKE_LENGTH                                 0x1
#define _SSPSTAT_CKE_MASK                                   0x40
#define _SSPSTAT_SMP_POSN                                   0x7
#define _SSPSTAT_SMP_POSITION                               0x7
#define _SSPSTAT_SMP_SIZE                                   0x1
#define _SSPSTAT_SMP_LENGTH                                 0x1
#define _SSPSTAT_SMP_MASK                                   0x80

// Register: SSP1CON1
extern volatile unsigned char           SSP1CON1            @ 0x215;
#ifndef _LIB_BUILD
asm("SSP1CON1 equ 0215h");
#endif
// aliases
extern volatile unsigned char           SSPCON              @ 0x215;
#ifndef _LIB_BUILD
asm("SSPCON equ 0215h");
#endif
extern volatile unsigned char           SSPCON1             @ 0x215;
#ifndef _LIB_BUILD
asm("SSPCON1 equ 0215h");
#endif
extern volatile unsigned char           SSP1CON             @ 0x215;
#ifndef _LIB_BUILD
asm("SSP1CON equ 0215h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
} SSP1CON1bits_t;
extern volatile SSP1CON1bits_t SSP1CON1bits @ 0x215;
// bitfield macros
#define _SSP1CON1_SSPM_POSN                                 0x0
#define _SSP1CON1_SSPM_POSITION                             0x0
#define _SSP1CON1_SSPM_SIZE                                 0x4
#define _SSP1CON1_SSPM_LENGTH                               0x4
#define _SSP1CON1_SSPM_MASK                                 0xF
#define _SSP1CON1_CKP_POSN                                  0x4
#define _SSP1CON1_CKP_POSITION                              0x4
#define _SSP1CON1_CKP_SIZE                                  0x1
#define _SSP1CON1_CKP_LENGTH                                0x1
#define _SSP1CON1_CKP_MASK                                  0x10
#define _SSP1CON1_SSPEN_POSN                                0x5
#define _SSP1CON1_SSPEN_POSITION                            0x5
#define _SSP1CON1_SSPEN_SIZE                                0x1
#define _SSP1CON1_SSPEN_LENGTH                              0x1
#define _SSP1CON1_SSPEN_MASK                                0x20
#define _SSP1CON1_SSPOV_POSN                                0x6
#define _SSP1CON1_SSPOV_POSITION                            0x6
#define _SSP1CON1_SSPOV_SIZE                                0x1
#define _SSP1CON1_SSPOV_LENGTH                              0x1
#define _SSP1CON1_SSPOV_MASK                                0x40
#define _SSP1CON1_WCOL_POSN                                 0x7
#define _SSP1CON1_WCOL_POSITION                             0x7
#define _SSP1CON1_WCOL_SIZE                                 0x1
#define _SSP1CON1_WCOL_LENGTH                               0x1
#define _SSP1CON1_WCOL_MASK                                 0x80
#define _SSP1CON1_SSPM0_POSN                                0x0
#define _SSP1CON1_SSPM0_POSITION                            0x0
#define _SSP1CON1_SSPM0_SIZE                                0x1
#define _SSP1CON1_SSPM0_LENGTH                              0x1
#define _SSP1CON1_SSPM0_MASK                                0x1
#define _SSP1CON1_SSPM1_POSN                                0x1
#define _SSP1CON1_SSPM1_POSITION                            0x1
#define _SSP1CON1_SSPM1_SIZE                                0x1
#define _SSP1CON1_SSPM1_LENGTH                              0x1
#define _SSP1CON1_SSPM1_MASK                                0x2
#define _SSP1CON1_SSPM2_POSN                                0x2
#define _SSP1CON1_SSPM2_POSITION                            0x2
#define _SSP1CON1_SSPM2_SIZE                                0x1
#define _SSP1CON1_SSPM2_LENGTH                              0x1
#define _SSP1CON1_SSPM2_MASK                                0x4
#define _SSP1CON1_SSPM3_POSN                                0x3
#define _SSP1CON1_SSPM3_POSITION                            0x3
#define _SSP1CON1_SSPM3_SIZE                                0x1
#define _SSP1CON1_SSPM3_LENGTH                              0x1
#define _SSP1CON1_SSPM3_MASK                                0x8
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
} SSPCONbits_t;
extern volatile SSPCONbits_t SSPCONbits @ 0x215;
// bitfield macros
#define _SSPCON_SSPM_POSN                                   0x0
#define _SSPCON_SSPM_POSITION                               0x0
#define _SSPCON_SSPM_SIZE                                   0x4
#define _SSPCON_SSPM_LENGTH                                 0x4
#define _SSPCON_SSPM_MASK                                   0xF
#define _SSPCON_CKP_POSN                                    0x4
#define _SSPCON_CKP_POSITION                                0x4
#define _SSPCON_CKP_SIZE                                    0x1
#define _SSPCON_CKP_LENGTH                                  0x1
#define _SSPCON_CKP_MASK                                    0x10
#define _SSPCON_SSPEN_POSN                                  0x5
#define _SSPCON_SSPEN_POSITION                              0x5
#define _SSPCON_SSPEN_SIZE                                  0x1
#define _SSPCON_SSPEN_LENGTH                                0x1
#define _SSPCON_SSPEN_MASK                                  0x20
#define _SSPCON_SSPOV_POSN                                  0x6
#define _SSPCON_SSPOV_POSITION                              0x6
#define _SSPCON_SSPOV_SIZE                                  0x1
#define _SSPCON_SSPOV_LENGTH                                0x1
#define _SSPCON_SSPOV_MASK                                  0x40
#define _SSPCON_WCOL_POSN                                   0x7
#define _SSPCON_WCOL_POSITION                               0x7
#define _SSPCON_WCOL_SIZE                                   0x1
#define _SSPCON_WCOL_LENGTH                                 0x1
#define _SSPCON_WCOL_MASK                                   0x80
#define _SSPCON_SSPM0_POSN                                  0x0
#define _SSPCON_SSPM0_POSITION                              0x0
#define _SSPCON_SSPM0_SIZE                                  0x1
#define _SSPCON_SSPM0_LENGTH                                0x1
#define _SSPCON_SSPM0_MASK                                  0x1
#define _SSPCON_SSPM1_POSN                                  0x1
#define _SSPCON_SSPM1_POSITION                              0x1
#define _SSPCON_SSPM1_SIZE                                  0x1
#define _SSPCON_SSPM1_LENGTH                                0x1
#define _SSPCON_SSPM1_MASK                                  0x2
#define _SSPCON_SSPM2_POSN                                  0x2
#define _SSPCON_SSPM2_POSITION                              0x2
#define _SSPCON_SSPM2_SIZE                                  0x1
#define _SSPCON_SSPM2_LENGTH                                0x1
#define _SSPCON_SSPM2_MASK                                  0x4
#define _SSPCON_SSPM3_POSN                                  0x3
#define _SSPCON_SSPM3_POSITION                              0x3
#define _SSPCON_SSPM3_SIZE                                  0x1
#define _SSPCON_SSPM3_LENGTH                                0x1
#define _SSPCON_SSPM3_MASK                                  0x8
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
} SSPCON1bits_t;
extern volatile SSPCON1bits_t SSPCON1bits @ 0x215;
// bitfield macros
#define _SSPCON1_SSPM_POSN                                  0x0
#define _SSPCON1_SSPM_POSITION                              0x0
#define _SSPCON1_SSPM_SIZE                                  0x4
#define _SSPCON1_SSPM_LENGTH                                0x4
#define _SSPCON1_SSPM_MASK                                  0xF
#define _SSPCON1_CKP_POSN                                   0x4
#define _SSPCON1_CKP_POSITION                               0x4
#define _SSPCON1_CKP_SIZE                                   0x1
#define _SSPCON1_CKP_LENGTH                                 0x1
#define _SSPCON1_CKP_MASK                                   0x10
#define _SSPCON1_SSPEN_POSN                                 0x5
#define _SSPCON1_SSPEN_POSITION                             0x5
#define _SSPCON1_SSPEN_SIZE                                 0x1
#define _SSPCON1_SSPEN_LENGTH                               0x1
#define _SSPCON1_SSPEN_MASK                                 0x20
#define _SSPCON1_SSPOV_POSN                                 0x6
#define _SSPCON1_SSPOV_POSITION                             0x6
#define _SSPCON1_SSPOV_SIZE                                 0x1
#define _SSPCON1_SSPOV_LENGTH                               0x1
#define _SSPCON1_SSPOV_MASK                                 0x40
#define _SSPCON1_WCOL_POSN                                  0x7
#define _SSPCON1_WCOL_POSITION                              0x7
#define _SSPCON1_WCOL_SIZE                                  0x1
#define _SSPCON1_WCOL_LENGTH                                0x1
#define _SSPCON1_WCOL_MASK                                  0x80
#define _SSPCON1_SSPM0_POSN                                 0x0
#define _SSPCON1_SSPM0_POSITION                             0x0
#define _SSPCON1_SSPM0_SIZE                                 0x1
#define _SSPCON1_SSPM0_LENGTH                               0x1
#define _SSPCON1_SSPM0_MASK                                 0x1
#define _SSPCON1_SSPM1_POSN                                 0x1
#define _SSPCON1_SSPM1_POSITION                             0x1
#define _SSPCON1_SSPM1_SIZE                                 0x1
#define _SSPCON1_SSPM1_LENGTH                               0x1
#define _SSPCON1_SSPM1_MASK                                 0x2
#define _SSPCON1_SSPM2_POSN                                 0x2
#define _SSPCON1_SSPM2_POSITION                             0x2
#define _SSPCON1_SSPM2_SIZE                                 0x1
#define _SSPCON1_SSPM2_LENGTH                               0x1
#define _SSPCON1_SSPM2_MASK                                 0x4
#define _SSPCON1_SSPM3_POSN                                 0x3
#define _SSPCON1_SSPM3_POSITION                             0x3
#define _SSPCON1_SSPM3_SIZE                                 0x1
#define _SSPCON1_SSPM3_LENGTH                               0x1
#define _SSPCON1_SSPM3_MASK                                 0x8
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
} SSP1CONbits_t;
extern volatile SSP1CONbits_t SSP1CONbits @ 0x215;
// bitfield macros
#define _SSP1CON_SSPM_POSN                                  0x0
#define _SSP1CON_SSPM_POSITION                              0x0
#define _SSP1CON_SSPM_SIZE                                  0x4
#define _SSP1CON_SSPM_LENGTH                                0x4
#define _SSP1CON_SSPM_MASK                                  0xF
#define _SSP1CON_CKP_POSN                                   0x4
#define _SSP1CON_CKP_POSITION                               0x4
#define _SSP1CON_CKP_SIZE                                   0x1
#define _SSP1CON_CKP_LENGTH                                 0x1
#define _SSP1CON_CKP_MASK                                   0x10
#define _SSP1CON_SSPEN_POSN                                 0x5
#define _SSP1CON_SSPEN_POSITION                             0x5
#define _SSP1CON_SSPEN_SIZE                                 0x1
#define _SSP1CON_SSPEN_LENGTH                               0x1
#define _SSP1CON_SSPEN_MASK                                 0x20
#define _SSP1CON_SSPOV_POSN                                 0x6
#define _SSP1CON_SSPOV_POSITION                             0x6
#define _SSP1CON_SSPOV_SIZE                                 0x1
#define _SSP1CON_SSPOV_LENGTH                               0x1
#define _SSP1CON_SSPOV_MASK                                 0x40
#define _SSP1CON_WCOL_POSN                                  0x7
#define _SSP1CON_WCOL_POSITION                              0x7
#define _SSP1CON_WCOL_SIZE                                  0x1
#define _SSP1CON_WCOL_LENGTH                                0x1
#define _SSP1CON_WCOL_MASK                                  0x80
#define _SSP1CON_SSPM0_POSN                                 0x0
#define _SSP1CON_SSPM0_POSITION                             0x0
#define _SSP1CON_SSPM0_SIZE                                 0x1
#define _SSP1CON_SSPM0_LENGTH                               0x1
#define _SSP1CON_SSPM0_MASK                                 0x1
#define _SSP1CON_SSPM1_POSN                                 0x1
#define _SSP1CON_SSPM1_POSITION                             0x1
#define _SSP1CON_SSPM1_SIZE                                 0x1
#define _SSP1CON_SSPM1_LENGTH                               0x1
#define _SSP1CON_SSPM1_MASK                                 0x2
#define _SSP1CON_SSPM2_POSN                                 0x2
#define _SSP1CON_SSPM2_POSITION                             0x2
#define _SSP1CON_SSPM2_SIZE                                 0x1
#define _SSP1CON_SSPM2_LENGTH                               0x1
#define _SSP1CON_SSPM2_MASK                                 0x4
#define _SSP1CON_SSPM3_POSN                                 0x3
#define _SSP1CON_SSPM3_POSITION                             0x3
#define _SSP1CON_SSPM3_SIZE                                 0x1
#define _SSP1CON_SSPM3_LENGTH                               0x1
#define _SSP1CON_SSPM3_MASK                                 0x8

// Register: SSP1CON2
extern volatile unsigned char           SSP1CON2            @ 0x216;
#ifndef _LIB_BUILD
asm("SSP1CON2 equ 0216h");
#endif
// aliases
extern volatile unsigned char           SSPCON2             @ 0x216;
#ifndef _LIB_BUILD
asm("SSPCON2 equ 0216h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SEN                    :1;
        unsigned RSEN                   :1;
        unsigned PEN                    :1;
        unsigned RCEN                   :1;
        unsigned ACKEN                  :1;
        unsigned ACKDT                  :1;
        unsigned ACKSTAT                :1;
        unsigned GCEN                   :1;
    };
} SSP1CON2bits_t;
extern volatile SSP1CON2bits_t SSP1CON2bits @ 0x216;
// bitfield macros
#define _SSP1CON2_SEN_POSN                                  0x0
#define _SSP1CON2_SEN_POSITION                              0x0
#define _SSP1CON2_SEN_SIZE                                  0x1
#define _SSP1CON2_SEN_LENGTH                                0x1
#define _SSP1CON2_SEN_MASK                                  0x1
#define _SSP1CON2_RSEN_POSN                                 0x1
#define _SSP1CON2_RSEN_POSITION                             0x1
#define _SSP1CON2_RSEN_SIZE                                 0x1
#define _SSP1CON2_RSEN_LENGTH                               0x1
#define _SSP1CON2_RSEN_MASK                                 0x2
#define _SSP1CON2_PEN_POSN                                  0x2
#define _SSP1CON2_PEN_POSITION                              0x2
#define _SSP1CON2_PEN_SIZE                                  0x1
#define _SSP1CON2_PEN_LENGTH                                0x1
#define _SSP1CON2_PEN_MASK                                  0x4
#define _SSP1CON2_RCEN_POSN                                 0x3
#define _SSP1CON2_RCEN_POSITION                             0x3
#define _SSP1CON2_RCEN_SIZE                                 0x1
#define _SSP1CON2_RCEN_LENGTH                               0x1
#define _SSP1CON2_RCEN_MASK                                 0x8
#define _SSP1CON2_ACKEN_POSN                                0x4
#define _SSP1CON2_ACKEN_POSITION                            0x4
#define _SSP1CON2_ACKEN_SIZE                                0x1
#define _SSP1CON2_ACKEN_LENGTH                              0x1
#define _SSP1CON2_ACKEN_MASK                                0x10
#define _SSP1CON2_ACKDT_POSN                                0x5
#define _SSP1CON2_ACKDT_POSITION                            0x5
#define _SSP1CON2_ACKDT_SIZE                                0x1
#define _SSP1CON2_ACKDT_LENGTH                              0x1
#define _SSP1CON2_ACKDT_MASK                                0x20
#define _SSP1CON2_ACKSTAT_POSN                              0x6
#define _SSP1CON2_ACKSTAT_POSITION                          0x6
#define _SSP1CON2_ACKSTAT_SIZE                              0x1
#define _SSP1CON2_ACKSTAT_LENGTH                            0x1
#define _SSP1CON2_ACKSTAT_MASK                              0x40
#define _SSP1CON2_GCEN_POSN                                 0x7
#define _SSP1CON2_GCEN_POSITION                             0x7
#define _SSP1CON2_GCEN_SIZE                                 0x1
#define _SSP1CON2_GCEN_LENGTH                               0x1
#define _SSP1CON2_GCEN_MASK                                 0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned SEN                    :1;
        unsigned RSEN                   :1;
        unsigned PEN                    :1;
        unsigned RCEN                   :1;
        unsigned ACKEN                  :1;
        unsigned ACKDT                  :1;
        unsigned ACKSTAT                :1;
        unsigned GCEN                   :1;
    };
} SSPCON2bits_t;
extern volatile SSPCON2bits_t SSPCON2bits @ 0x216;
// bitfield macros
#define _SSPCON2_SEN_POSN                                   0x0
#define _SSPCON2_SEN_POSITION                               0x0
#define _SSPCON2_SEN_SIZE                                   0x1
#define _SSPCON2_SEN_LENGTH                                 0x1
#define _SSPCON2_SEN_MASK                                   0x1
#define _SSPCON2_RSEN_POSN                                  0x1
#define _SSPCON2_RSEN_POSITION                              0x1
#define _SSPCON2_RSEN_SIZE                                  0x1
#define _SSPCON2_RSEN_LENGTH                                0x1
#define _SSPCON2_RSEN_MASK                                  0x2
#define _SSPCON2_PEN_POSN                                   0x2
#define _SSPCON2_PEN_POSITION                               0x2
#define _SSPCON2_PEN_SIZE                                   0x1
#define _SSPCON2_PEN_LENGTH                                 0x1
#define _SSPCON2_PEN_MASK                                   0x4
#define _SSPCON2_RCEN_POSN                                  0x3
#define _SSPCON2_RCEN_POSITION                              0x3
#define _SSPCON2_RCEN_SIZE                                  0x1
#define _SSPCON2_RCEN_LENGTH                                0x1
#define _SSPCON2_RCEN_MASK                                  0x8
#define _SSPCON2_ACKEN_POSN                                 0x4
#define _SSPCON2_ACKEN_POSITION                             0x4
#define _SSPCON2_ACKEN_SIZE                                 0x1
#define _SSPCON2_ACKEN_LENGTH                               0x1
#define _SSPCON2_ACKEN_MASK                                 0x10
#define _SSPCON2_ACKDT_POSN                                 0x5
#define _SSPCON2_ACKDT_POSITION                             0x5
#define _SSPCON2_ACKDT_SIZE                                 0x1
#define _SSPCON2_ACKDT_LENGTH                               0x1
#define _SSPCON2_ACKDT_MASK                                 0x20
#define _SSPCON2_ACKSTAT_POSN                               0x6
#define _SSPCON2_ACKSTAT_POSITION                           0x6
#define _SSPCON2_ACKSTAT_SIZE                               0x1
#define _SSPCON2_ACKSTAT_LENGTH                             0x1
#define _SSPCON2_ACKSTAT_MASK                               0x40
#define _SSPCON2_GCEN_POSN                                  0x7
#define _SSPCON2_GCEN_POSITION                              0x7
#define _SSPCON2_GCEN_SIZE                                  0x1
#define _SSPCON2_GCEN_LENGTH                                0x1
#define _SSPCON2_GCEN_MASK                                  0x80

// Register: SSP1CON3
extern volatile unsigned char           SSP1CON3            @ 0x217;
#ifndef _LIB_BUILD
asm("SSP1CON3 equ 0217h");
#endif
// aliases
extern volatile unsigned char           SSPCON3             @ 0x217;
#ifndef _LIB_BUILD
asm("SSPCON3 equ 0217h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DHEN                   :1;
        unsigned AHEN                   :1;
        unsigned SBCDE                  :1;
        unsigned SDAHT                  :1;
        unsigned BOEN                   :1;
        unsigned SCIE                   :1;
        unsigned PCIE                   :1;
        unsigned ACKTIM                 :1;
    };
} SSP1CON3bits_t;
extern volatile SSP1CON3bits_t SSP1CON3bits @ 0x217;
// bitfield macros
#define _SSP1CON3_DHEN_POSN                                 0x0
#define _SSP1CON3_DHEN_POSITION                             0x0
#define _SSP1CON3_DHEN_SIZE                                 0x1
#define _SSP1CON3_DHEN_LENGTH                               0x1
#define _SSP1CON3_DHEN_MASK                                 0x1
#define _SSP1CON3_AHEN_POSN                                 0x1
#define _SSP1CON3_AHEN_POSITION                             0x1
#define _SSP1CON3_AHEN_SIZE                                 0x1
#define _SSP1CON3_AHEN_LENGTH                               0x1
#define _SSP1CON3_AHEN_MASK                                 0x2
#define _SSP1CON3_SBCDE_POSN                                0x2
#define _SSP1CON3_SBCDE_POSITION                            0x2
#define _SSP1CON3_SBCDE_SIZE                                0x1
#define _SSP1CON3_SBCDE_LENGTH                              0x1
#define _SSP1CON3_SBCDE_MASK                                0x4
#define _SSP1CON3_SDAHT_POSN                                0x3
#define _SSP1CON3_SDAHT_POSITION                            0x3
#define _SSP1CON3_SDAHT_SIZE                                0x1
#define _SSP1CON3_SDAHT_LENGTH                              0x1
#define _SSP1CON3_SDAHT_MASK                                0x8
#define _SSP1CON3_BOEN_POSN                                 0x4
#define _SSP1CON3_BOEN_POSITION                             0x4
#define _SSP1CON3_BOEN_SIZE                                 0x1
#define _SSP1CON3_BOEN_LENGTH                               0x1
#define _SSP1CON3_BOEN_MASK                                 0x10
#define _SSP1CON3_SCIE_POSN                                 0x5
#define _SSP1CON3_SCIE_POSITION                             0x5
#define _SSP1CON3_SCIE_SIZE                                 0x1
#define _SSP1CON3_SCIE_LENGTH                               0x1
#define _SSP1CON3_SCIE_MASK                                 0x20
#define _SSP1CON3_PCIE_POSN                                 0x6
#define _SSP1CON3_PCIE_POSITION                             0x6
#define _SSP1CON3_PCIE_SIZE                                 0x1
#define _SSP1CON3_PCIE_LENGTH                               0x1
#define _SSP1CON3_PCIE_MASK                                 0x40
#define _SSP1CON3_ACKTIM_POSN                               0x7
#define _SSP1CON3_ACKTIM_POSITION                           0x7
#define _SSP1CON3_ACKTIM_SIZE                               0x1
#define _SSP1CON3_ACKTIM_LENGTH                             0x1
#define _SSP1CON3_ACKTIM_MASK                               0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned DHEN                   :1;
        unsigned AHEN                   :1;
        unsigned SBCDE                  :1;
        unsigned SDAHT                  :1;
        unsigned BOEN                   :1;
        unsigned SCIE                   :1;
        unsigned PCIE                   :1;
        unsigned ACKTIM                 :1;
    };
} SSPCON3bits_t;
extern volatile SSPCON3bits_t SSPCON3bits @ 0x217;
// bitfield macros
#define _SSPCON3_DHEN_POSN                                  0x0
#define _SSPCON3_DHEN_POSITION                              0x0
#define _SSPCON3_DHEN_SIZE                                  0x1
#define _SSPCON3_DHEN_LENGTH                                0x1
#define _SSPCON3_DHEN_MASK                                  0x1
#define _SSPCON3_AHEN_POSN                                  0x1
#define _SSPCON3_AHEN_POSITION                              0x1
#define _SSPCON3_AHEN_SIZE                                  0x1
#define _SSPCON3_AHEN_LENGTH                                0x1
#define _SSPCON3_AHEN_MASK                                  0x2
#define _SSPCON3_SBCDE_POSN                                 0x2
#define _SSPCON3_SBCDE_POSITION                             0x2
#define _SSPCON3_SBCDE_SIZE                                 0x1
#define _SSPCON3_SBCDE_LENGTH                               0x1
#define _SSPCON3_SBCDE_MASK                                 0x4
#define _SSPCON3_SDAHT_POSN                                 0x3
#define _SSPCON3_SDAHT_POSITION                             0x3
#define _SSPCON3_SDAHT_SIZE                                 0x1
#define _SSPCON3_SDAHT_LENGTH                               0x1
#define _SSPCON3_SDAHT_MASK                                 0x8
#define _SSPCON3_BOEN_POSN                                  0x4
#define _SSPCON3_BOEN_POSITION                              0x4
#define _SSPCON3_BOEN_SIZE                                  0x1
#define _SSPCON3_BOEN_LENGTH                                0x1
#define _SSPCON3_BOEN_MASK                                  0x10
#define _SSPCON3_SCIE_POSN                                  0x5
#define _SSPCON3_SCIE_POSITION                              0x5
#define _SSPCON3_SCIE_SIZE                                  0x1
#define _SSPCON3_SCIE_LENGTH                                0x1
#define _SSPCON3_SCIE_MASK                                  0x20
#define _SSPCON3_PCIE_POSN                                  0x6
#define _SSPCON3_PCIE_POSITION                              0x6
#define _SSPCON3_PCIE_SIZE                                  0x1
#define _SSPCON3_PCIE_LENGTH                                0x1
#define _SSPCON3_PCIE_MASK                                  0x40
#define _SSPCON3_ACKTIM_POSN                                0x7
#define _SSPCON3_ACKTIM_POSITION                            0x7
#define _SSPCON3_ACKTIM_SIZE                                0x1
#define _SSPCON3_ACKTIM_LENGTH                              0x1
#define _SSPCON3_ACKTIM_MASK                                0x80

// Register: ODCONA
extern volatile unsigned char           ODCONA              @ 0x28C;
#ifndef _LIB_BUILD
asm("ODCONA equ 028Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ODCA0                  :1;
        unsigned ODCA1                  :1;
        unsigned ODCA2                  :1;
        unsigned                        :1;
        unsigned ODCA4                  :1;
        unsigned ODCA5                  :1;
    };
} ODCONAbits_t;
extern volatile ODCONAbits_t ODCONAbits @ 0x28C;
// bitfield macros
#define _ODCONA_ODCA0_POSN                                  0x0
#define _ODCONA_ODCA0_POSITION                              0x0
#define _ODCONA_ODCA0_SIZE                                  0x1
#define _ODCONA_ODCA0_LENGTH                                0x1
#define _ODCONA_ODCA0_MASK                                  0x1
#define _ODCONA_ODCA1_POSN                                  0x1
#define _ODCONA_ODCA1_POSITION                              0x1
#define _ODCONA_ODCA1_SIZE                                  0x1
#define _ODCONA_ODCA1_LENGTH                                0x1
#define _ODCONA_ODCA1_MASK                                  0x2
#define _ODCONA_ODCA2_POSN                                  0x2
#define _ODCONA_ODCA2_POSITION                              0x2
#define _ODCONA_ODCA2_SIZE                                  0x1
#define _ODCONA_ODCA2_LENGTH                                0x1
#define _ODCONA_ODCA2_MASK                                  0x4
#define _ODCONA_ODCA4_POSN                                  0x4
#define _ODCONA_ODCA4_POSITION                              0x4
#define _ODCONA_ODCA4_SIZE                                  0x1
#define _ODCONA_ODCA4_LENGTH                                0x1
#define _ODCONA_ODCA4_MASK                                  0x10
#define _ODCONA_ODCA5_POSN                                  0x5
#define _ODCONA_ODCA5_POSITION                              0x5
#define _ODCONA_ODCA5_SIZE                                  0x1
#define _ODCONA_ODCA5_LENGTH                                0x1
#define _ODCONA_ODCA5_MASK                                  0x20

// Register: ODCONC
extern volatile unsigned char           ODCONC              @ 0x28E;
#ifndef _LIB_BUILD
asm("ODCONC equ 028Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ODCC0                  :1;
        unsigned ODCC1                  :1;
        unsigned ODCC2                  :1;
        unsigned ODCC3                  :1;
        unsigned ODCC4                  :1;
        unsigned ODCC5                  :1;
    };
} ODCONCbits_t;
extern volatile ODCONCbits_t ODCONCbits @ 0x28E;
// bitfield macros
#define _ODCONC_ODCC0_POSN                                  0x0
#define _ODCONC_ODCC0_POSITION                              0x0
#define _ODCONC_ODCC0_SIZE                                  0x1
#define _ODCONC_ODCC0_LENGTH                                0x1
#define _ODCONC_ODCC0_MASK                                  0x1
#define _ODCONC_ODCC1_POSN                                  0x1
#define _ODCONC_ODCC1_POSITION                              0x1
#define _ODCONC_ODCC1_SIZE                                  0x1
#define _ODCONC_ODCC1_LENGTH                                0x1
#define _ODCONC_ODCC1_MASK                                  0x2
#define _ODCONC_ODCC2_POSN                                  0x2
#define _ODCONC_ODCC2_POSITION                              0x2
#define _ODCONC_ODCC2_SIZE                                  0x1
#define _ODCONC_ODCC2_LENGTH                                0x1
#define _ODCONC_ODCC2_MASK                                  0x4
#define _ODCONC_ODCC3_POSN                                  0x3
#define _ODCONC_ODCC3_POSITION                              0x3
#define _ODCONC_ODCC3_SIZE                                  0x1
#define _ODCONC_ODCC3_LENGTH                                0x1
#define _ODCONC_ODCC3_MASK                                  0x8
#define _ODCONC_ODCC4_POSN                                  0x4
#define _ODCONC_ODCC4_POSITION                              0x4
#define _ODCONC_ODCC4_SIZE                                  0x1
#define _ODCONC_ODCC4_LENGTH                                0x1
#define _ODCONC_ODCC4_MASK                                  0x10
#define _ODCONC_ODCC5_POSN                                  0x5
#define _ODCONC_ODCC5_POSITION                              0x5
#define _ODCONC_ODCC5_SIZE                                  0x1
#define _ODCONC_ODCC5_LENGTH                                0x1
#define _ODCONC_ODCC5_MASK                                  0x20

// Register: CCPR1
extern volatile unsigned short          CCPR1               @ 0x291;
#ifndef _LIB_BUILD
asm("CCPR1 equ 0291h");
#endif

// Register: CCPR1L
extern volatile unsigned char           CCPR1L              @ 0x291;
#ifndef _LIB_BUILD
asm("CCPR1L equ 0291h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR1L                 :8;
    };
} CCPR1Lbits_t;
extern volatile CCPR1Lbits_t CCPR1Lbits @ 0x291;
// bitfield macros
#define _CCPR1L_CCPR1L_POSN                                 0x0
#define _CCPR1L_CCPR1L_POSITION                             0x0
#define _CCPR1L_CCPR1L_SIZE                                 0x8
#define _CCPR1L_CCPR1L_LENGTH                               0x8
#define _CCPR1L_CCPR1L_MASK                                 0xFF

// Register: CCPR1H
extern volatile unsigned char           CCPR1H              @ 0x292;
#ifndef _LIB_BUILD
asm("CCPR1H equ 0292h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR1H                 :8;
    };
} CCPR1Hbits_t;
extern volatile CCPR1Hbits_t CCPR1Hbits @ 0x292;
// bitfield macros
#define _CCPR1H_CCPR1H_POSN                                 0x0
#define _CCPR1H_CCPR1H_POSITION                             0x0
#define _CCPR1H_CCPR1H_SIZE                                 0x8
#define _CCPR1H_CCPR1H_LENGTH                               0x8
#define _CCPR1H_CCPR1H_MASK                                 0xFF

// Register: CCP1CON
extern volatile unsigned char           CCP1CON             @ 0x293;
#ifndef _LIB_BUILD
asm("CCP1CON equ 0293h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP1MODE               :4;
        unsigned CCP1FMT                :1;
        unsigned CCP1OUT                :1;
        unsigned                        :1;
        unsigned CCP1EN                 :1;
    };
    struct {
        unsigned CCP1MODE0              :1;
        unsigned CCP1MODE1              :1;
        unsigned CCP1MODE2              :1;
        unsigned CCP1MODE3              :1;
    };
} CCP1CONbits_t;
extern volatile CCP1CONbits_t CCP1CONbits @ 0x293;
// bitfield macros
#define _CCP1CON_CCP1MODE_POSN                              0x0
#define _CCP1CON_CCP1MODE_POSITION                          0x0
#define _CCP1CON_CCP1MODE_SIZE                              0x4
#define _CCP1CON_CCP1MODE_LENGTH                            0x4
#define _CCP1CON_CCP1MODE_MASK                              0xF
#define _CCP1CON_CCP1FMT_POSN                               0x4
#define _CCP1CON_CCP1FMT_POSITION                           0x4
#define _CCP1CON_CCP1FMT_SIZE                               0x1
#define _CCP1CON_CCP1FMT_LENGTH                             0x1
#define _CCP1CON_CCP1FMT_MASK                               0x10
#define _CCP1CON_CCP1OUT_POSN                               0x5
#define _CCP1CON_CCP1OUT_POSITION                           0x5
#define _CCP1CON_CCP1OUT_SIZE                               0x1
#define _CCP1CON_CCP1OUT_LENGTH                             0x1
#define _CCP1CON_CCP1OUT_MASK                               0x20
#define _CCP1CON_CCP1EN_POSN                                0x7
#define _CCP1CON_CCP1EN_POSITION                            0x7
#define _CCP1CON_CCP1EN_SIZE                                0x1
#define _CCP1CON_CCP1EN_LENGTH                              0x1
#define _CCP1CON_CCP1EN_MASK                                0x80
#define _CCP1CON_CCP1MODE0_POSN                             0x0
#define _CCP1CON_CCP1MODE0_POSITION                         0x0
#define _CCP1CON_CCP1MODE0_SIZE                             0x1
#define _CCP1CON_CCP1MODE0_LENGTH                           0x1
#define _CCP1CON_CCP1MODE0_MASK                             0x1
#define _CCP1CON_CCP1MODE1_POSN                             0x1
#define _CCP1CON_CCP1MODE1_POSITION                         0x1
#define _CCP1CON_CCP1MODE1_SIZE                             0x1
#define _CCP1CON_CCP1MODE1_LENGTH                           0x1
#define _CCP1CON_CCP1MODE1_MASK                             0x2
#define _CCP1CON_CCP1MODE2_POSN                             0x2
#define _CCP1CON_CCP1MODE2_POSITION                         0x2
#define _CCP1CON_CCP1MODE2_SIZE                             0x1
#define _CCP1CON_CCP1MODE2_LENGTH                           0x1
#define _CCP1CON_CCP1MODE2_MASK                             0x4
#define _CCP1CON_CCP1MODE3_POSN                             0x3
#define _CCP1CON_CCP1MODE3_POSITION                         0x3
#define _CCP1CON_CCP1MODE3_SIZE                             0x1
#define _CCP1CON_CCP1MODE3_LENGTH                           0x1
#define _CCP1CON_CCP1MODE3_MASK                             0x8

// Register: CCP1CAP
extern volatile unsigned char           CCP1CAP             @ 0x294;
#ifndef _LIB_BUILD
asm("CCP1CAP equ 0294h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP1CTS                :4;
    };
    struct {
        unsigned CCP1CTS0               :1;
        unsigned CCP1CTS1               :1;
        unsigned CCP1CTS2               :1;
        unsigned CCP1CTS3               :1;
    };
} CCP1CAPbits_t;
extern volatile CCP1CAPbits_t CCP1CAPbits @ 0x294;
// bitfield macros
#define _CCP1CAP_CCP1CTS_POSN                               0x0
#define _CCP1CAP_CCP1CTS_POSITION                           0x0
#define _CCP1CAP_CCP1CTS_SIZE                               0x4
#define _CCP1CAP_CCP1CTS_LENGTH                             0x4
#define _CCP1CAP_CCP1CTS_MASK                               0xF
#define _CCP1CAP_CCP1CTS0_POSN                              0x0
#define _CCP1CAP_CCP1CTS0_POSITION                          0x0
#define _CCP1CAP_CCP1CTS0_SIZE                              0x1
#define _CCP1CAP_CCP1CTS0_LENGTH                            0x1
#define _CCP1CAP_CCP1CTS0_MASK                              0x1
#define _CCP1CAP_CCP1CTS1_POSN                              0x1
#define _CCP1CAP_CCP1CTS1_POSITION                          0x1
#define _CCP1CAP_CCP1CTS1_SIZE                              0x1
#define _CCP1CAP_CCP1CTS1_LENGTH                            0x1
#define _CCP1CAP_CCP1CTS1_MASK                              0x2
#define _CCP1CAP_CCP1CTS2_POSN                              0x2
#define _CCP1CAP_CCP1CTS2_POSITION                          0x2
#define _CCP1CAP_CCP1CTS2_SIZE                              0x1
#define _CCP1CAP_CCP1CTS2_LENGTH                            0x1
#define _CCP1CAP_CCP1CTS2_MASK                              0x4
#define _CCP1CAP_CCP1CTS3_POSN                              0x3
#define _CCP1CAP_CCP1CTS3_POSITION                          0x3
#define _CCP1CAP_CCP1CTS3_SIZE                              0x1
#define _CCP1CAP_CCP1CTS3_LENGTH                            0x1
#define _CCP1CAP_CCP1CTS3_MASK                              0x8

// Register: CCPR2
extern volatile unsigned short          CCPR2               @ 0x295;
#ifndef _LIB_BUILD
asm("CCPR2 equ 0295h");
#endif

// Register: CCPR2L
extern volatile unsigned char           CCPR2L              @ 0x295;
#ifndef _LIB_BUILD
asm("CCPR2L equ 0295h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR2L                 :8;
    };
} CCPR2Lbits_t;
extern volatile CCPR2Lbits_t CCPR2Lbits @ 0x295;
// bitfield macros
#define _CCPR2L_CCPR2L_POSN                                 0x0
#define _CCPR2L_CCPR2L_POSITION                             0x0
#define _CCPR2L_CCPR2L_SIZE                                 0x8
#define _CCPR2L_CCPR2L_LENGTH                               0x8
#define _CCPR2L_CCPR2L_MASK                                 0xFF

// Register: CCPR2H
extern volatile unsigned char           CCPR2H              @ 0x296;
#ifndef _LIB_BUILD
asm("CCPR2H equ 0296h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR2H                 :8;
    };
} CCPR2Hbits_t;
extern volatile CCPR2Hbits_t CCPR2Hbits @ 0x296;
// bitfield macros
#define _CCPR2H_CCPR2H_POSN                                 0x0
#define _CCPR2H_CCPR2H_POSITION                             0x0
#define _CCPR2H_CCPR2H_SIZE                                 0x8
#define _CCPR2H_CCPR2H_LENGTH                               0x8
#define _CCPR2H_CCPR2H_MASK                                 0xFF

// Register: CCP2CON
extern volatile unsigned char           CCP2CON             @ 0x297;
#ifndef _LIB_BUILD
asm("CCP2CON equ 0297h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2MODE               :4;
        unsigned CCP2FMT                :1;
        unsigned CCP2OUT                :1;
        unsigned                        :1;
        unsigned CCP2EN                 :1;
    };
    struct {
        unsigned CCP2MODE0              :1;
        unsigned CCP2MODE1              :1;
        unsigned CCP2MODE2              :1;
        unsigned CCP2MODE3              :1;
    };
} CCP2CONbits_t;
extern volatile CCP2CONbits_t CCP2CONbits @ 0x297;
// bitfield macros
#define _CCP2CON_CCP2MODE_POSN                              0x0
#define _CCP2CON_CCP2MODE_POSITION                          0x0
#define _CCP2CON_CCP2MODE_SIZE                              0x4
#define _CCP2CON_CCP2MODE_LENGTH                            0x4
#define _CCP2CON_CCP2MODE_MASK                              0xF
#define _CCP2CON_CCP2FMT_POSN                               0x4
#define _CCP2CON_CCP2FMT_POSITION                           0x4
#define _CCP2CON_CCP2FMT_SIZE                               0x1
#define _CCP2CON_CCP2FMT_LENGTH                             0x1
#define _CCP2CON_CCP2FMT_MASK                               0x10
#define _CCP2CON_CCP2OUT_POSN                               0x5
#define _CCP2CON_CCP2OUT_POSITION                           0x5
#define _CCP2CON_CCP2OUT_SIZE                               0x1
#define _CCP2CON_CCP2OUT_LENGTH                             0x1
#define _CCP2CON_CCP2OUT_MASK                               0x20
#define _CCP2CON_CCP2EN_POSN                                0x7
#define _CCP2CON_CCP2EN_POSITION                            0x7
#define _CCP2CON_CCP2EN_SIZE                                0x1
#define _CCP2CON_CCP2EN_LENGTH                              0x1
#define _CCP2CON_CCP2EN_MASK                                0x80
#define _CCP2CON_CCP2MODE0_POSN                             0x0
#define _CCP2CON_CCP2MODE0_POSITION                         0x0
#define _CCP2CON_CCP2MODE0_SIZE                             0x1
#define _CCP2CON_CCP2MODE0_LENGTH                           0x1
#define _CCP2CON_CCP2MODE0_MASK                             0x1
#define _CCP2CON_CCP2MODE1_POSN                             0x1
#define _CCP2CON_CCP2MODE1_POSITION                         0x1
#define _CCP2CON_CCP2MODE1_SIZE                             0x1
#define _CCP2CON_CCP2MODE1_LENGTH                           0x1
#define _CCP2CON_CCP2MODE1_MASK                             0x2
#define _CCP2CON_CCP2MODE2_POSN                             0x2
#define _CCP2CON_CCP2MODE2_POSITION                         0x2
#define _CCP2CON_CCP2MODE2_SIZE                             0x1
#define _CCP2CON_CCP2MODE2_LENGTH                           0x1
#define _CCP2CON_CCP2MODE2_MASK                             0x4
#define _CCP2CON_CCP2MODE3_POSN                             0x3
#define _CCP2CON_CCP2MODE3_POSITION                         0x3
#define _CCP2CON_CCP2MODE3_SIZE                             0x1
#define _CCP2CON_CCP2MODE3_LENGTH                           0x1
#define _CCP2CON_CCP2MODE3_MASK                             0x8

// Register: CCP2CAP
extern volatile unsigned char           CCP2CAP             @ 0x298;
#ifndef _LIB_BUILD
asm("CCP2CAP equ 0298h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2CTS                :4;
    };
    struct {
        unsigned CCP2CTS0               :1;
        unsigned CCP2CTS1               :1;
        unsigned CCP2CTS2               :1;
        unsigned CCP2CTS3               :1;
    };
} CCP2CAPbits_t;
extern volatile CCP2CAPbits_t CCP2CAPbits @ 0x298;
// bitfield macros
#define _CCP2CAP_CCP2CTS_POSN                               0x0
#define _CCP2CAP_CCP2CTS_POSITION                           0x0
#define _CCP2CAP_CCP2CTS_SIZE                               0x4
#define _CCP2CAP_CCP2CTS_LENGTH                             0x4
#define _CCP2CAP_CCP2CTS_MASK                               0xF
#define _CCP2CAP_CCP2CTS0_POSN                              0x0
#define _CCP2CAP_CCP2CTS0_POSITION                          0x0
#define _CCP2CAP_CCP2CTS0_SIZE                              0x1
#define _CCP2CAP_CCP2CTS0_LENGTH                            0x1
#define _CCP2CAP_CCP2CTS0_MASK                              0x1
#define _CCP2CAP_CCP2CTS1_POSN                              0x1
#define _CCP2CAP_CCP2CTS1_POSITION                          0x1
#define _CCP2CAP_CCP2CTS1_SIZE                              0x1
#define _CCP2CAP_CCP2CTS1_LENGTH                            0x1
#define _CCP2CAP_CCP2CTS1_MASK                              0x2
#define _CCP2CAP_CCP2CTS2_POSN                              0x2
#define _CCP2CAP_CCP2CTS2_POSITION                          0x2
#define _CCP2CAP_CCP2CTS2_SIZE                              0x1
#define _CCP2CAP_CCP2CTS2_LENGTH                            0x1
#define _CCP2CAP_CCP2CTS2_MASK                              0x4
#define _CCP2CAP_CCP2CTS3_POSN                              0x3
#define _CCP2CAP_CCP2CTS3_POSITION                          0x3
#define _CCP2CAP_CCP2CTS3_SIZE                              0x1
#define _CCP2CAP_CCP2CTS3_LENGTH                            0x1
#define _CCP2CAP_CCP2CTS3_MASK                              0x8

// Register: CCPTMRS
extern volatile unsigned char           CCPTMRS             @ 0x29F;
#ifndef _LIB_BUILD
asm("CCPTMRS equ 029Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C1TSEL                 :2;
        unsigned C2TSEL                 :2;
        unsigned C3TSEL                 :2;
        unsigned C4TSEL                 :2;
    };
    struct {
        unsigned C1TSEL0                :1;
        unsigned C1TSEL1                :1;
        unsigned C2TSEL0                :1;
        unsigned C2TSEL1                :1;
        unsigned C3TSEL0                :1;
        unsigned C3TSEL1                :1;
        unsigned C4TSEL0                :1;
        unsigned C4TSEL1                :1;
    };
} CCPTMRSbits_t;
extern volatile CCPTMRSbits_t CCPTMRSbits @ 0x29F;
// bitfield macros
#define _CCPTMRS_C1TSEL_POSN                                0x0
#define _CCPTMRS_C1TSEL_POSITION                            0x0
#define _CCPTMRS_C1TSEL_SIZE                                0x2
#define _CCPTMRS_C1TSEL_LENGTH                              0x2
#define _CCPTMRS_C1TSEL_MASK                                0x3
#define _CCPTMRS_C2TSEL_POSN                                0x2
#define _CCPTMRS_C2TSEL_POSITION                            0x2
#define _CCPTMRS_C2TSEL_SIZE                                0x2
#define _CCPTMRS_C2TSEL_LENGTH                              0x2
#define _CCPTMRS_C2TSEL_MASK                                0xC
#define _CCPTMRS_C3TSEL_POSN                                0x4
#define _CCPTMRS_C3TSEL_POSITION                            0x4
#define _CCPTMRS_C3TSEL_SIZE                                0x2
#define _CCPTMRS_C3TSEL_LENGTH                              0x2
#define _CCPTMRS_C3TSEL_MASK                                0x30
#define _CCPTMRS_C4TSEL_POSN                                0x6
#define _CCPTMRS_C4TSEL_POSITION                            0x6
#define _CCPTMRS_C4TSEL_SIZE                                0x2
#define _CCPTMRS_C4TSEL_LENGTH                              0x2
#define _CCPTMRS_C4TSEL_MASK                                0xC0
#define _CCPTMRS_C1TSEL0_POSN                               0x0
#define _CCPTMRS_C1TSEL0_POSITION                           0x0
#define _CCPTMRS_C1TSEL0_SIZE                               0x1
#define _CCPTMRS_C1TSEL0_LENGTH                             0x1
#define _CCPTMRS_C1TSEL0_MASK                               0x1
#define _CCPTMRS_C1TSEL1_POSN                               0x1
#define _CCPTMRS_C1TSEL1_POSITION                           0x1
#define _CCPTMRS_C1TSEL1_SIZE                               0x1
#define _CCPTMRS_C1TSEL1_LENGTH                             0x1
#define _CCPTMRS_C1TSEL1_MASK                               0x2
#define _CCPTMRS_C2TSEL0_POSN                               0x2
#define _CCPTMRS_C2TSEL0_POSITION                           0x2
#define _CCPTMRS_C2TSEL0_SIZE                               0x1
#define _CCPTMRS_C2TSEL0_LENGTH                             0x1
#define _CCPTMRS_C2TSEL0_MASK                               0x4
#define _CCPTMRS_C2TSEL1_POSN                               0x3
#define _CCPTMRS_C2TSEL1_POSITION                           0x3
#define _CCPTMRS_C2TSEL1_SIZE                               0x1
#define _CCPTMRS_C2TSEL1_LENGTH                             0x1
#define _CCPTMRS_C2TSEL1_MASK                               0x8
#define _CCPTMRS_C3TSEL0_POSN                               0x4
#define _CCPTMRS_C3TSEL0_POSITION                           0x4
#define _CCPTMRS_C3TSEL0_SIZE                               0x1
#define _CCPTMRS_C3TSEL0_LENGTH                             0x1
#define _CCPTMRS_C3TSEL0_MASK                               0x10
#define _CCPTMRS_C3TSEL1_POSN                               0x5
#define _CCPTMRS_C3TSEL1_POSITION                           0x5
#define _CCPTMRS_C3TSEL1_SIZE                               0x1
#define _CCPTMRS_C3TSEL1_LENGTH                             0x1
#define _CCPTMRS_C3TSEL1_MASK                               0x20
#define _CCPTMRS_C4TSEL0_POSN                               0x6
#define _CCPTMRS_C4TSEL0_POSITION                           0x6
#define _CCPTMRS_C4TSEL0_SIZE                               0x1
#define _CCPTMRS_C4TSEL0_LENGTH                             0x1
#define _CCPTMRS_C4TSEL0_MASK                               0x40
#define _CCPTMRS_C4TSEL1_POSN                               0x7
#define _CCPTMRS_C4TSEL1_POSITION                           0x7
#define _CCPTMRS_C4TSEL1_SIZE                               0x1
#define _CCPTMRS_C4TSEL1_LENGTH                             0x1
#define _CCPTMRS_C4TSEL1_MASK                               0x80

// Register: SLRCONA
extern volatile unsigned char           SLRCONA             @ 0x30C;
#ifndef _LIB_BUILD
asm("SLRCONA equ 030Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SLRA0                  :1;
        unsigned SLRA1                  :1;
        unsigned SLRA2                  :1;
        unsigned                        :1;
        unsigned SLRA4                  :1;
        unsigned SLRA5                  :1;
    };
} SLRCONAbits_t;
extern volatile SLRCONAbits_t SLRCONAbits @ 0x30C;
// bitfield macros
#define _SLRCONA_SLRA0_POSN                                 0x0
#define _SLRCONA_SLRA0_POSITION                             0x0
#define _SLRCONA_SLRA0_SIZE                                 0x1
#define _SLRCONA_SLRA0_LENGTH                               0x1
#define _SLRCONA_SLRA0_MASK                                 0x1
#define _SLRCONA_SLRA1_POSN                                 0x1
#define _SLRCONA_SLRA1_POSITION                             0x1
#define _SLRCONA_SLRA1_SIZE                                 0x1
#define _SLRCONA_SLRA1_LENGTH                               0x1
#define _SLRCONA_SLRA1_MASK                                 0x2
#define _SLRCONA_SLRA2_POSN                                 0x2
#define _SLRCONA_SLRA2_POSITION                             0x2
#define _SLRCONA_SLRA2_SIZE                                 0x1
#define _SLRCONA_SLRA2_LENGTH                               0x1
#define _SLRCONA_SLRA2_MASK                                 0x4
#define _SLRCONA_SLRA4_POSN                                 0x4
#define _SLRCONA_SLRA4_POSITION                             0x4
#define _SLRCONA_SLRA4_SIZE                                 0x1
#define _SLRCONA_SLRA4_LENGTH                               0x1
#define _SLRCONA_SLRA4_MASK                                 0x10
#define _SLRCONA_SLRA5_POSN                                 0x5
#define _SLRCONA_SLRA5_POSITION                             0x5
#define _SLRCONA_SLRA5_SIZE                                 0x1
#define _SLRCONA_SLRA5_LENGTH                               0x1
#define _SLRCONA_SLRA5_MASK                                 0x20

// Register: SLRCONC
extern volatile unsigned char           SLRCONC             @ 0x30E;
#ifndef _LIB_BUILD
asm("SLRCONC equ 030Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SLRC0                  :1;
        unsigned SLRC1                  :1;
        unsigned SLRC2                  :1;
        unsigned SLRC3                  :1;
        unsigned SLRC4                  :1;
        unsigned SLRC5                  :1;
    };
} SLRCONCbits_t;
extern volatile SLRCONCbits_t SLRCONCbits @ 0x30E;
// bitfield macros
#define _SLRCONC_SLRC0_POSN                                 0x0
#define _SLRCONC_SLRC0_POSITION                             0x0
#define _SLRCONC_SLRC0_SIZE                                 0x1
#define _SLRCONC_SLRC0_LENGTH                               0x1
#define _SLRCONC_SLRC0_MASK                                 0x1
#define _SLRCONC_SLRC1_POSN                                 0x1
#define _SLRCONC_SLRC1_POSITION                             0x1
#define _SLRCONC_SLRC1_SIZE                                 0x1
#define _SLRCONC_SLRC1_LENGTH                               0x1
#define _SLRCONC_SLRC1_MASK                                 0x2
#define _SLRCONC_SLRC2_POSN                                 0x2
#define _SLRCONC_SLRC2_POSITION                             0x2
#define _SLRCONC_SLRC2_SIZE                                 0x1
#define _SLRCONC_SLRC2_LENGTH                               0x1
#define _SLRCONC_SLRC2_MASK                                 0x4
#define _SLRCONC_SLRC3_POSN                                 0x3
#define _SLRCONC_SLRC3_POSITION                             0x3
#define _SLRCONC_SLRC3_SIZE                                 0x1
#define _SLRCONC_SLRC3_LENGTH                               0x1
#define _SLRCONC_SLRC3_MASK                                 0x8
#define _SLRCONC_SLRC4_POSN                                 0x4
#define _SLRCONC_SLRC4_POSITION                             0x4
#define _SLRCONC_SLRC4_SIZE                                 0x1
#define _SLRCONC_SLRC4_LENGTH                               0x1
#define _SLRCONC_SLRC4_MASK                                 0x10
#define _SLRCONC_SLRC5_POSN                                 0x5
#define _SLRCONC_SLRC5_POSITION                             0x5
#define _SLRCONC_SLRC5_SIZE                                 0x1
#define _SLRCONC_SLRC5_LENGTH                               0x1
#define _SLRCONC_SLRC5_MASK                                 0x20

// Register: CCPR3
extern volatile unsigned short          CCPR3               @ 0x311;
#ifndef _LIB_BUILD
asm("CCPR3 equ 0311h");
#endif

// Register: CCPR3L
extern volatile unsigned char           CCPR3L              @ 0x311;
#ifndef _LIB_BUILD
asm("CCPR3L equ 0311h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR3L                 :8;
    };
} CCPR3Lbits_t;
extern volatile CCPR3Lbits_t CCPR3Lbits @ 0x311;
// bitfield macros
#define _CCPR3L_CCPR3L_POSN                                 0x0
#define _CCPR3L_CCPR3L_POSITION                             0x0
#define _CCPR3L_CCPR3L_SIZE                                 0x8
#define _CCPR3L_CCPR3L_LENGTH                               0x8
#define _CCPR3L_CCPR3L_MASK                                 0xFF

// Register: CCPR3H
extern volatile unsigned char           CCPR3H              @ 0x312;
#ifndef _LIB_BUILD
asm("CCPR3H equ 0312h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR3H                 :8;
    };
} CCPR3Hbits_t;
extern volatile CCPR3Hbits_t CCPR3Hbits @ 0x312;
// bitfield macros
#define _CCPR3H_CCPR3H_POSN                                 0x0
#define _CCPR3H_CCPR3H_POSITION                             0x0
#define _CCPR3H_CCPR3H_SIZE                                 0x8
#define _CCPR3H_CCPR3H_LENGTH                               0x8
#define _CCPR3H_CCPR3H_MASK                                 0xFF

// Register: CCP3CON
extern volatile unsigned char           CCP3CON             @ 0x313;
#ifndef _LIB_BUILD
asm("CCP3CON equ 0313h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP3MODE               :4;
        unsigned CCP3FMT                :1;
        unsigned CCP3OUT                :1;
        unsigned                        :1;
        unsigned CCP3EN                 :1;
    };
    struct {
        unsigned CCP3MODE0              :1;
        unsigned CCP3MODE1              :1;
        unsigned CCP3MODE2              :1;
        unsigned CCP3MODE3              :1;
    };
} CCP3CONbits_t;
extern volatile CCP3CONbits_t CCP3CONbits @ 0x313;
// bitfield macros
#define _CCP3CON_CCP3MODE_POSN                              0x0
#define _CCP3CON_CCP3MODE_POSITION                          0x0
#define _CCP3CON_CCP3MODE_SIZE                              0x4
#define _CCP3CON_CCP3MODE_LENGTH                            0x4
#define _CCP3CON_CCP3MODE_MASK                              0xF
#define _CCP3CON_CCP3FMT_POSN                               0x4
#define _CCP3CON_CCP3FMT_POSITION                           0x4
#define _CCP3CON_CCP3FMT_SIZE                               0x1
#define _CCP3CON_CCP3FMT_LENGTH                             0x1
#define _CCP3CON_CCP3FMT_MASK                               0x10
#define _CCP3CON_CCP3OUT_POSN                               0x5
#define _CCP3CON_CCP3OUT_POSITION                           0x5
#define _CCP3CON_CCP3OUT_SIZE                               0x1
#define _CCP3CON_CCP3OUT_LENGTH                             0x1
#define _CCP3CON_CCP3OUT_MASK                               0x20
#define _CCP3CON_CCP3EN_POSN                                0x7
#define _CCP3CON_CCP3EN_POSITION                            0x7
#define _CCP3CON_CCP3EN_SIZE                                0x1
#define _CCP3CON_CCP3EN_LENGTH                              0x1
#define _CCP3CON_CCP3EN_MASK                                0x80
#define _CCP3CON_CCP3MODE0_POSN                             0x0
#define _CCP3CON_CCP3MODE0_POSITION                         0x0
#define _CCP3CON_CCP3MODE0_SIZE                             0x1
#define _CCP3CON_CCP3MODE0_LENGTH                           0x1
#define _CCP3CON_CCP3MODE0_MASK                             0x1
#define _CCP3CON_CCP3MODE1_POSN                             0x1
#define _CCP3CON_CCP3MODE1_POSITION                         0x1
#define _CCP3CON_CCP3MODE1_SIZE                             0x1
#define _CCP3CON_CCP3MODE1_LENGTH                           0x1
#define _CCP3CON_CCP3MODE1_MASK                             0x2
#define _CCP3CON_CCP3MODE2_POSN                             0x2
#define _CCP3CON_CCP3MODE2_POSITION                         0x2
#define _CCP3CON_CCP3MODE2_SIZE                             0x1
#define _CCP3CON_CCP3MODE2_LENGTH                           0x1
#define _CCP3CON_CCP3MODE2_MASK                             0x4
#define _CCP3CON_CCP3MODE3_POSN                             0x3
#define _CCP3CON_CCP3MODE3_POSITION                         0x3
#define _CCP3CON_CCP3MODE3_SIZE                             0x1
#define _CCP3CON_CCP3MODE3_LENGTH                           0x1
#define _CCP3CON_CCP3MODE3_MASK                             0x8

// Register: CCP3CAP
extern volatile unsigned char           CCP3CAP             @ 0x314;
#ifndef _LIB_BUILD
asm("CCP3CAP equ 0314h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP3CTS                :4;
    };
    struct {
        unsigned CCP3CTS0               :1;
        unsigned CCP3CTS1               :1;
        unsigned CCP3CTS2               :1;
        unsigned CCP3CTS3               :1;
    };
} CCP3CAPbits_t;
extern volatile CCP3CAPbits_t CCP3CAPbits @ 0x314;
// bitfield macros
#define _CCP3CAP_CCP3CTS_POSN                               0x0
#define _CCP3CAP_CCP3CTS_POSITION                           0x0
#define _CCP3CAP_CCP3CTS_SIZE                               0x4
#define _CCP3CAP_CCP3CTS_LENGTH                             0x4
#define _CCP3CAP_CCP3CTS_MASK                               0xF
#define _CCP3CAP_CCP3CTS0_POSN                              0x0
#define _CCP3CAP_CCP3CTS0_POSITION                          0x0
#define _CCP3CAP_CCP3CTS0_SIZE                              0x1
#define _CCP3CAP_CCP3CTS0_LENGTH                            0x1
#define _CCP3CAP_CCP3CTS0_MASK                              0x1
#define _CCP3CAP_CCP3CTS1_POSN                              0x1
#define _CCP3CAP_CCP3CTS1_POSITION                          0x1
#define _CCP3CAP_CCP3CTS1_SIZE                              0x1
#define _CCP3CAP_CCP3CTS1_LENGTH                            0x1
#define _CCP3CAP_CCP3CTS1_MASK                              0x2
#define _CCP3CAP_CCP3CTS2_POSN                              0x2
#define _CCP3CAP_CCP3CTS2_POSITION                          0x2
#define _CCP3CAP_CCP3CTS2_SIZE                              0x1
#define _CCP3CAP_CCP3CTS2_LENGTH                            0x1
#define _CCP3CAP_CCP3CTS2_MASK                              0x4
#define _CCP3CAP_CCP3CTS3_POSN                              0x3
#define _CCP3CAP_CCP3CTS3_POSITION                          0x3
#define _CCP3CAP_CCP3CTS3_SIZE                              0x1
#define _CCP3CAP_CCP3CTS3_LENGTH                            0x1
#define _CCP3CAP_CCP3CTS3_MASK                              0x8

// Register: CCPR4
extern volatile unsigned short          CCPR4               @ 0x315;
#ifndef _LIB_BUILD
asm("CCPR4 equ 0315h");
#endif

// Register: CCPR4L
extern volatile unsigned char           CCPR4L              @ 0x315;
#ifndef _LIB_BUILD
asm("CCPR4L equ 0315h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR4L                 :8;
    };
} CCPR4Lbits_t;
extern volatile CCPR4Lbits_t CCPR4Lbits @ 0x315;
// bitfield macros
#define _CCPR4L_CCPR4L_POSN                                 0x0
#define _CCPR4L_CCPR4L_POSITION                             0x0
#define _CCPR4L_CCPR4L_SIZE                                 0x8
#define _CCPR4L_CCPR4L_LENGTH                               0x8
#define _CCPR4L_CCPR4L_MASK                                 0xFF

// Register: CCPR4H
extern volatile unsigned char           CCPR4H              @ 0x316;
#ifndef _LIB_BUILD
asm("CCPR4H equ 0316h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR4H                 :8;
    };
} CCPR4Hbits_t;
extern volatile CCPR4Hbits_t CCPR4Hbits @ 0x316;
// bitfield macros
#define _CCPR4H_CCPR4H_POSN                                 0x0
#define _CCPR4H_CCPR4H_POSITION                             0x0
#define _CCPR4H_CCPR4H_SIZE                                 0x8
#define _CCPR4H_CCPR4H_LENGTH                               0x8
#define _CCPR4H_CCPR4H_MASK                                 0xFF

// Register: CCP4CON
extern volatile unsigned char           CCP4CON             @ 0x317;
#ifndef _LIB_BUILD
asm("CCP4CON equ 0317h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP4MODE               :4;
        unsigned CCP4FMT                :1;
        unsigned CCP4OUT                :1;
        unsigned                        :1;
        unsigned CCP4EN                 :1;
    };
    struct {
        unsigned CCP4MODE0              :1;
        unsigned CCP4MODE1              :1;
        unsigned CCP4MODE2              :1;
        unsigned CCP4MODE3              :1;
    };
} CCP4CONbits_t;
extern volatile CCP4CONbits_t CCP4CONbits @ 0x317;
// bitfield macros
#define _CCP4CON_CCP4MODE_POSN                              0x0
#define _CCP4CON_CCP4MODE_POSITION                          0x0
#define _CCP4CON_CCP4MODE_SIZE                              0x4
#define _CCP4CON_CCP4MODE_LENGTH                            0x4
#define _CCP4CON_CCP4MODE_MASK                              0xF
#define _CCP4CON_CCP4FMT_POSN                               0x4
#define _CCP4CON_CCP4FMT_POSITION                           0x4
#define _CCP4CON_CCP4FMT_SIZE                               0x1
#define _CCP4CON_CCP4FMT_LENGTH                             0x1
#define _CCP4CON_CCP4FMT_MASK                               0x10
#define _CCP4CON_CCP4OUT_POSN                               0x5
#define _CCP4CON_CCP4OUT_POSITION                           0x5
#define _CCP4CON_CCP4OUT_SIZE                               0x1
#define _CCP4CON_CCP4OUT_LENGTH                             0x1
#define _CCP4CON_CCP4OUT_MASK                               0x20
#define _CCP4CON_CCP4EN_POSN                                0x7
#define _CCP4CON_CCP4EN_POSITION                            0x7
#define _CCP4CON_CCP4EN_SIZE                                0x1
#define _CCP4CON_CCP4EN_LENGTH                              0x1
#define _CCP4CON_CCP4EN_MASK                                0x80
#define _CCP4CON_CCP4MODE0_POSN                             0x0
#define _CCP4CON_CCP4MODE0_POSITION                         0x0
#define _CCP4CON_CCP4MODE0_SIZE                             0x1
#define _CCP4CON_CCP4MODE0_LENGTH                           0x1
#define _CCP4CON_CCP4MODE0_MASK                             0x1
#define _CCP4CON_CCP4MODE1_POSN                             0x1
#define _CCP4CON_CCP4MODE1_POSITION                         0x1
#define _CCP4CON_CCP4MODE1_SIZE                             0x1
#define _CCP4CON_CCP4MODE1_LENGTH                           0x1
#define _CCP4CON_CCP4MODE1_MASK                             0x2
#define _CCP4CON_CCP4MODE2_POSN                             0x2
#define _CCP4CON_CCP4MODE2_POSITION                         0x2
#define _CCP4CON_CCP4MODE2_SIZE                             0x1
#define _CCP4CON_CCP4MODE2_LENGTH                           0x1
#define _CCP4CON_CCP4MODE2_MASK                             0x4
#define _CCP4CON_CCP4MODE3_POSN                             0x3
#define _CCP4CON_CCP4MODE3_POSITION                         0x3
#define _CCP4CON_CCP4MODE3_SIZE                             0x1
#define _CCP4CON_CCP4MODE3_LENGTH                           0x1
#define _CCP4CON_CCP4MODE3_MASK                             0x8

// Register: CCP4CAP
extern volatile unsigned char           CCP4CAP             @ 0x318;
#ifndef _LIB_BUILD
asm("CCP4CAP equ 0318h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP4CTS                :4;
    };
    struct {
        unsigned CCP4CTS0               :1;
        unsigned CCP4CTS1               :1;
        unsigned CCP4CTS2               :1;
        unsigned CCP4CTS3               :1;
    };
} CCP4CAPbits_t;
extern volatile CCP4CAPbits_t CCP4CAPbits @ 0x318;
// bitfield macros
#define _CCP4CAP_CCP4CTS_POSN                               0x0
#define _CCP4CAP_CCP4CTS_POSITION                           0x0
#define _CCP4CAP_CCP4CTS_SIZE                               0x4
#define _CCP4CAP_CCP4CTS_LENGTH                             0x4
#define _CCP4CAP_CCP4CTS_MASK                               0xF
#define _CCP4CAP_CCP4CTS0_POSN                              0x0
#define _CCP4CAP_CCP4CTS0_POSITION                          0x0
#define _CCP4CAP_CCP4CTS0_SIZE                              0x1
#define _CCP4CAP_CCP4CTS0_LENGTH                            0x1
#define _CCP4CAP_CCP4CTS0_MASK                              0x1
#define _CCP4CAP_CCP4CTS1_POSN                              0x1
#define _CCP4CAP_CCP4CTS1_POSITION                          0x1
#define _CCP4CAP_CCP4CTS1_SIZE                              0x1
#define _CCP4CAP_CCP4CTS1_LENGTH                            0x1
#define _CCP4CAP_CCP4CTS1_MASK                              0x2
#define _CCP4CAP_CCP4CTS2_POSN                              0x2
#define _CCP4CAP_CCP4CTS2_POSITION                          0x2
#define _CCP4CAP_CCP4CTS2_SIZE                              0x1
#define _CCP4CAP_CCP4CTS2_LENGTH                            0x1
#define _CCP4CAP_CCP4CTS2_MASK                              0x4
#define _CCP4CAP_CCP4CTS3_POSN                              0x3
#define _CCP4CAP_CCP4CTS3_POSITION                          0x3
#define _CCP4CAP_CCP4CTS3_SIZE                              0x1
#define _CCP4CAP_CCP4CTS3_LENGTH                            0x1
#define _CCP4CAP_CCP4CTS3_MASK                              0x8

// Register: INLVLA
extern volatile unsigned char           INLVLA              @ 0x38C;
#ifndef _LIB_BUILD
asm("INLVLA equ 038Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INLVLA0                :1;
        unsigned INLVLA1                :1;
        unsigned INLVLA2                :1;
        unsigned INLVLA3                :1;
        unsigned INLVLA4                :1;
        unsigned INLVLA5                :1;
    };
} INLVLAbits_t;
extern volatile INLVLAbits_t INLVLAbits @ 0x38C;
// bitfield macros
#define _INLVLA_INLVLA0_POSN                                0x0
#define _INLVLA_INLVLA0_POSITION                            0x0
#define _INLVLA_INLVLA0_SIZE                                0x1
#define _INLVLA_INLVLA0_LENGTH                              0x1
#define _INLVLA_INLVLA0_MASK                                0x1
#define _INLVLA_INLVLA1_POSN                                0x1
#define _INLVLA_INLVLA1_POSITION                            0x1
#define _INLVLA_INLVLA1_SIZE                                0x1
#define _INLVLA_INLVLA1_LENGTH                              0x1
#define _INLVLA_INLVLA1_MASK                                0x2
#define _INLVLA_INLVLA2_POSN                                0x2
#define _INLVLA_INLVLA2_POSITION                            0x2
#define _INLVLA_INLVLA2_SIZE                                0x1
#define _INLVLA_INLVLA2_LENGTH                              0x1
#define _INLVLA_INLVLA2_MASK                                0x4
#define _INLVLA_INLVLA3_POSN                                0x3
#define _INLVLA_INLVLA3_POSITION                            0x3
#define _INLVLA_INLVLA3_SIZE                                0x1
#define _INLVLA_INLVLA3_LENGTH                              0x1
#define _INLVLA_INLVLA3_MASK                                0x8
#define _INLVLA_INLVLA4_POSN                                0x4
#define _INLVLA_INLVLA4_POSITION                            0x4
#define _INLVLA_INLVLA4_SIZE                                0x1
#define _INLVLA_INLVLA4_LENGTH                              0x1
#define _INLVLA_INLVLA4_MASK                                0x10
#define _INLVLA_INLVLA5_POSN                                0x5
#define _INLVLA_INLVLA5_POSITION                            0x5
#define _INLVLA_INLVLA5_SIZE                                0x1
#define _INLVLA_INLVLA5_LENGTH                              0x1
#define _INLVLA_INLVLA5_MASK                                0x20

// Register: INLVLC
extern volatile unsigned char           INLVLC              @ 0x38E;
#ifndef _LIB_BUILD
asm("INLVLC equ 038Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INLVLC0                :1;
        unsigned INLVLC1                :1;
        unsigned INLVLC2                :1;
        unsigned INLVLC3                :1;
        unsigned INLVLC4                :1;
        unsigned INLVLC5                :1;
    };
} INLVLCbits_t;
extern volatile INLVLCbits_t INLVLCbits @ 0x38E;
// bitfield macros
#define _INLVLC_INLVLC0_POSN                                0x0
#define _INLVLC_INLVLC0_POSITION                            0x0
#define _INLVLC_INLVLC0_SIZE                                0x1
#define _INLVLC_INLVLC0_LENGTH                              0x1
#define _INLVLC_INLVLC0_MASK                                0x1
#define _INLVLC_INLVLC1_POSN                                0x1
#define _INLVLC_INLVLC1_POSITION                            0x1
#define _INLVLC_INLVLC1_SIZE                                0x1
#define _INLVLC_INLVLC1_LENGTH                              0x1
#define _INLVLC_INLVLC1_MASK                                0x2
#define _INLVLC_INLVLC2_POSN                                0x2
#define _INLVLC_INLVLC2_POSITION                            0x2
#define _INLVLC_INLVLC2_SIZE                                0x1
#define _INLVLC_INLVLC2_LENGTH                              0x1
#define _INLVLC_INLVLC2_MASK                                0x4
#define _INLVLC_INLVLC3_POSN                                0x3
#define _INLVLC_INLVLC3_POSITION                            0x3
#define _INLVLC_INLVLC3_SIZE                                0x1
#define _INLVLC_INLVLC3_LENGTH                              0x1
#define _INLVLC_INLVLC3_MASK                                0x8
#define _INLVLC_INLVLC4_POSN                                0x4
#define _INLVLC_INLVLC4_POSITION                            0x4
#define _INLVLC_INLVLC4_SIZE                                0x1
#define _INLVLC_INLVLC4_LENGTH                              0x1
#define _INLVLC_INLVLC4_MASK                                0x10
#define _INLVLC_INLVLC5_POSN                                0x5
#define _INLVLC_INLVLC5_POSITION                            0x5
#define _INLVLC_INLVLC5_SIZE                                0x1
#define _INLVLC_INLVLC5_LENGTH                              0x1
#define _INLVLC_INLVLC5_MASK                                0x20

// Register: IOCAP
extern volatile unsigned char           IOCAP               @ 0x391;
#ifndef _LIB_BUILD
asm("IOCAP equ 0391h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCAP0                 :1;
        unsigned IOCAP1                 :1;
        unsigned IOCAP2                 :1;
        unsigned IOCAP3                 :1;
        unsigned IOCAP4                 :1;
        unsigned IOCAP5                 :1;
    };
} IOCAPbits_t;
extern volatile IOCAPbits_t IOCAPbits @ 0x391;
// bitfield macros
#define _IOCAP_IOCAP0_POSN                                  0x0
#define _IOCAP_IOCAP0_POSITION                              0x0
#define _IOCAP_IOCAP0_SIZE                                  0x1
#define _IOCAP_IOCAP0_LENGTH                                0x1
#define _IOCAP_IOCAP0_MASK                                  0x1
#define _IOCAP_IOCAP1_POSN                                  0x1
#define _IOCAP_IOCAP1_POSITION                              0x1
#define _IOCAP_IOCAP1_SIZE                                  0x1
#define _IOCAP_IOCAP1_LENGTH                                0x1
#define _IOCAP_IOCAP1_MASK                                  0x2
#define _IOCAP_IOCAP2_POSN                                  0x2
#define _IOCAP_IOCAP2_POSITION                              0x2
#define _IOCAP_IOCAP2_SIZE                                  0x1
#define _IOCAP_IOCAP2_LENGTH                                0x1
#define _IOCAP_IOCAP2_MASK                                  0x4
#define _IOCAP_IOCAP3_POSN                                  0x3
#define _IOCAP_IOCAP3_POSITION                              0x3
#define _IOCAP_IOCAP3_SIZE                                  0x1
#define _IOCAP_IOCAP3_LENGTH                                0x1
#define _IOCAP_IOCAP3_MASK                                  0x8
#define _IOCAP_IOCAP4_POSN                                  0x4
#define _IOCAP_IOCAP4_POSITION                              0x4
#define _IOCAP_IOCAP4_SIZE                                  0x1
#define _IOCAP_IOCAP4_LENGTH                                0x1
#define _IOCAP_IOCAP4_MASK                                  0x10
#define _IOCAP_IOCAP5_POSN                                  0x5
#define _IOCAP_IOCAP5_POSITION                              0x5
#define _IOCAP_IOCAP5_SIZE                                  0x1
#define _IOCAP_IOCAP5_LENGTH                                0x1
#define _IOCAP_IOCAP5_MASK                                  0x20

// Register: IOCAN
extern volatile unsigned char           IOCAN               @ 0x392;
#ifndef _LIB_BUILD
asm("IOCAN equ 0392h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCAN0                 :1;
        unsigned IOCAN1                 :1;
        unsigned IOCAN2                 :1;
        unsigned IOCAN3                 :1;
        unsigned IOCAN4                 :1;
        unsigned IOCAN5                 :1;
    };
} IOCANbits_t;
extern volatile IOCANbits_t IOCANbits @ 0x392;
// bitfield macros
#define _IOCAN_IOCAN0_POSN                                  0x0
#define _IOCAN_IOCAN0_POSITION                              0x0
#define _IOCAN_IOCAN0_SIZE                                  0x1
#define _IOCAN_IOCAN0_LENGTH                                0x1
#define _IOCAN_IOCAN0_MASK                                  0x1
#define _IOCAN_IOCAN1_POSN                                  0x1
#define _IOCAN_IOCAN1_POSITION                              0x1
#define _IOCAN_IOCAN1_SIZE                                  0x1
#define _IOCAN_IOCAN1_LENGTH                                0x1
#define _IOCAN_IOCAN1_MASK                                  0x2
#define _IOCAN_IOCAN2_POSN                                  0x2
#define _IOCAN_IOCAN2_POSITION                              0x2
#define _IOCAN_IOCAN2_SIZE                                  0x1
#define _IOCAN_IOCAN2_LENGTH                                0x1
#define _IOCAN_IOCAN2_MASK                                  0x4
#define _IOCAN_IOCAN3_POSN                                  0x3
#define _IOCAN_IOCAN3_POSITION                              0x3
#define _IOCAN_IOCAN3_SIZE                                  0x1
#define _IOCAN_IOCAN3_LENGTH                                0x1
#define _IOCAN_IOCAN3_MASK                                  0x8
#define _IOCAN_IOCAN4_POSN                                  0x4
#define _IOCAN_IOCAN4_POSITION                              0x4
#define _IOCAN_IOCAN4_SIZE                                  0x1
#define _IOCAN_IOCAN4_LENGTH                                0x1
#define _IOCAN_IOCAN4_MASK                                  0x10
#define _IOCAN_IOCAN5_POSN                                  0x5
#define _IOCAN_IOCAN5_POSITION                              0x5
#define _IOCAN_IOCAN5_SIZE                                  0x1
#define _IOCAN_IOCAN5_LENGTH                                0x1
#define _IOCAN_IOCAN5_MASK                                  0x20

// Register: IOCAF
extern volatile unsigned char           IOCAF               @ 0x393;
#ifndef _LIB_BUILD
asm("IOCAF equ 0393h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCAF0                 :1;
        unsigned IOCAF1                 :1;
        unsigned IOCAF2                 :1;
        unsigned IOCAF3                 :1;
        unsigned IOCAF4                 :1;
        unsigned IOCAF5                 :1;
    };
} IOCAFbits_t;
extern volatile IOCAFbits_t IOCAFbits @ 0x393;
// bitfield macros
#define _IOCAF_IOCAF0_POSN                                  0x0
#define _IOCAF_IOCAF0_POSITION                              0x0
#define _IOCAF_IOCAF0_SIZE                                  0x1
#define _IOCAF_IOCAF0_LENGTH                                0x1
#define _IOCAF_IOCAF0_MASK                                  0x1
#define _IOCAF_IOCAF1_POSN                                  0x1
#define _IOCAF_IOCAF1_POSITION                              0x1
#define _IOCAF_IOCAF1_SIZE                                  0x1
#define _IOCAF_IOCAF1_LENGTH                                0x1
#define _IOCAF_IOCAF1_MASK                                  0x2
#define _IOCAF_IOCAF2_POSN                                  0x2
#define _IOCAF_IOCAF2_POSITION                              0x2
#define _IOCAF_IOCAF2_SIZE                                  0x1
#define _IOCAF_IOCAF2_LENGTH                                0x1
#define _IOCAF_IOCAF2_MASK                                  0x4
#define _IOCAF_IOCAF3_POSN                                  0x3
#define _IOCAF_IOCAF3_POSITION                              0x3
#define _IOCAF_IOCAF3_SIZE                                  0x1
#define _IOCAF_IOCAF3_LENGTH                                0x1
#define _IOCAF_IOCAF3_MASK                                  0x8
#define _IOCAF_IOCAF4_POSN                                  0x4
#define _IOCAF_IOCAF4_POSITION                              0x4
#define _IOCAF_IOCAF4_SIZE                                  0x1
#define _IOCAF_IOCAF4_LENGTH                                0x1
#define _IOCAF_IOCAF4_MASK                                  0x10
#define _IOCAF_IOCAF5_POSN                                  0x5
#define _IOCAF_IOCAF5_POSITION                              0x5
#define _IOCAF_IOCAF5_SIZE                                  0x1
#define _IOCAF_IOCAF5_LENGTH                                0x1
#define _IOCAF_IOCAF5_MASK                                  0x20

// Register: IOCCP
extern volatile unsigned char           IOCCP               @ 0x397;
#ifndef _LIB_BUILD
asm("IOCCP equ 0397h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCCP0                 :1;
        unsigned IOCCP1                 :1;
        unsigned IOCCP2                 :1;
        unsigned IOCCP3                 :1;
        unsigned IOCCP4                 :1;
        unsigned IOCCP5                 :1;
    };
} IOCCPbits_t;
extern volatile IOCCPbits_t IOCCPbits @ 0x397;
// bitfield macros
#define _IOCCP_IOCCP0_POSN                                  0x0
#define _IOCCP_IOCCP0_POSITION                              0x0
#define _IOCCP_IOCCP0_SIZE                                  0x1
#define _IOCCP_IOCCP0_LENGTH                                0x1
#define _IOCCP_IOCCP0_MASK                                  0x1
#define _IOCCP_IOCCP1_POSN                                  0x1
#define _IOCCP_IOCCP1_POSITION                              0x1
#define _IOCCP_IOCCP1_SIZE                                  0x1
#define _IOCCP_IOCCP1_LENGTH                                0x1
#define _IOCCP_IOCCP1_MASK                                  0x2
#define _IOCCP_IOCCP2_POSN                                  0x2
#define _IOCCP_IOCCP2_POSITION                              0x2
#define _IOCCP_IOCCP2_SIZE                                  0x1
#define _IOCCP_IOCCP2_LENGTH                                0x1
#define _IOCCP_IOCCP2_MASK                                  0x4
#define _IOCCP_IOCCP3_POSN                                  0x3
#define _IOCCP_IOCCP3_POSITION                              0x3
#define _IOCCP_IOCCP3_SIZE                                  0x1
#define _IOCCP_IOCCP3_LENGTH                                0x1
#define _IOCCP_IOCCP3_MASK                                  0x8
#define _IOCCP_IOCCP4_POSN                                  0x4
#define _IOCCP_IOCCP4_POSITION                              0x4
#define _IOCCP_IOCCP4_SIZE                                  0x1
#define _IOCCP_IOCCP4_LENGTH                                0x1
#define _IOCCP_IOCCP4_MASK                                  0x10
#define _IOCCP_IOCCP5_POSN                                  0x5
#define _IOCCP_IOCCP5_POSITION                              0x5
#define _IOCCP_IOCCP5_SIZE                                  0x1
#define _IOCCP_IOCCP5_LENGTH                                0x1
#define _IOCCP_IOCCP5_MASK                                  0x20

// Register: IOCCN
extern volatile unsigned char           IOCCN               @ 0x398;
#ifndef _LIB_BUILD
asm("IOCCN equ 0398h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCCN0                 :1;
        unsigned IOCCN1                 :1;
        unsigned IOCCN2                 :1;
        unsigned IOCCN3                 :1;
        unsigned IOCCN4                 :1;
        unsigned IOCCN5                 :1;
    };
} IOCCNbits_t;
extern volatile IOCCNbits_t IOCCNbits @ 0x398;
// bitfield macros
#define _IOCCN_IOCCN0_POSN                                  0x0
#define _IOCCN_IOCCN0_POSITION                              0x0
#define _IOCCN_IOCCN0_SIZE                                  0x1
#define _IOCCN_IOCCN0_LENGTH                                0x1
#define _IOCCN_IOCCN0_MASK                                  0x1
#define _IOCCN_IOCCN1_POSN                                  0x1
#define _IOCCN_IOCCN1_POSITION                              0x1
#define _IOCCN_IOCCN1_SIZE                                  0x1
#define _IOCCN_IOCCN1_LENGTH                                0x1
#define _IOCCN_IOCCN1_MASK                                  0x2
#define _IOCCN_IOCCN2_POSN                                  0x2
#define _IOCCN_IOCCN2_POSITION                              0x2
#define _IOCCN_IOCCN2_SIZE                                  0x1
#define _IOCCN_IOCCN2_LENGTH                                0x1
#define _IOCCN_IOCCN2_MASK                                  0x4
#define _IOCCN_IOCCN3_POSN                                  0x3
#define _IOCCN_IOCCN3_POSITION                              0x3
#define _IOCCN_IOCCN3_SIZE                                  0x1
#define _IOCCN_IOCCN3_LENGTH                                0x1
#define _IOCCN_IOCCN3_MASK                                  0x8
#define _IOCCN_IOCCN4_POSN                                  0x4
#define _IOCCN_IOCCN4_POSITION                              0x4
#define _IOCCN_IOCCN4_SIZE                                  0x1
#define _IOCCN_IOCCN4_LENGTH                                0x1
#define _IOCCN_IOCCN4_MASK                                  0x10
#define _IOCCN_IOCCN5_POSN                                  0x5
#define _IOCCN_IOCCN5_POSITION                              0x5
#define _IOCCN_IOCCN5_SIZE                                  0x1
#define _IOCCN_IOCCN5_LENGTH                                0x1
#define _IOCCN_IOCCN5_MASK                                  0x20

// Register: IOCCF
extern volatile unsigned char           IOCCF               @ 0x399;
#ifndef _LIB_BUILD
asm("IOCCF equ 0399h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCCF0                 :1;
        unsigned IOCCF1                 :1;
        unsigned IOCCF2                 :1;
        unsigned IOCCF3                 :1;
        unsigned IOCCF4                 :1;
        unsigned IOCCF5                 :1;
    };
} IOCCFbits_t;
extern volatile IOCCFbits_t IOCCFbits @ 0x399;
// bitfield macros
#define _IOCCF_IOCCF0_POSN                                  0x0
#define _IOCCF_IOCCF0_POSITION                              0x0
#define _IOCCF_IOCCF0_SIZE                                  0x1
#define _IOCCF_IOCCF0_LENGTH                                0x1
#define _IOCCF_IOCCF0_MASK                                  0x1
#define _IOCCF_IOCCF1_POSN                                  0x1
#define _IOCCF_IOCCF1_POSITION                              0x1
#define _IOCCF_IOCCF1_SIZE                                  0x1
#define _IOCCF_IOCCF1_LENGTH                                0x1
#define _IOCCF_IOCCF1_MASK                                  0x2
#define _IOCCF_IOCCF2_POSN                                  0x2
#define _IOCCF_IOCCF2_POSITION                              0x2
#define _IOCCF_IOCCF2_SIZE                                  0x1
#define _IOCCF_IOCCF2_LENGTH                                0x1
#define _IOCCF_IOCCF2_MASK                                  0x4
#define _IOCCF_IOCCF3_POSN                                  0x3
#define _IOCCF_IOCCF3_POSITION                              0x3
#define _IOCCF_IOCCF3_SIZE                                  0x1
#define _IOCCF_IOCCF3_LENGTH                                0x1
#define _IOCCF_IOCCF3_MASK                                  0x8
#define _IOCCF_IOCCF4_POSN                                  0x4
#define _IOCCF_IOCCF4_POSITION                              0x4
#define _IOCCF_IOCCF4_SIZE                                  0x1
#define _IOCCF_IOCCF4_LENGTH                                0x1
#define _IOCCF_IOCCF4_MASK                                  0x10
#define _IOCCF_IOCCF5_POSN                                  0x5
#define _IOCCF_IOCCF5_POSITION                              0x5
#define _IOCCF_IOCCF5_SIZE                                  0x1
#define _IOCCF_IOCCF5_LENGTH                                0x1
#define _IOCCF_IOCCF5_MASK                                  0x20

// Register: CLKRCON
extern volatile unsigned char           CLKRCON             @ 0x39A;
#ifndef _LIB_BUILD
asm("CLKRCON equ 039Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLKRDIV                :3;
        unsigned CLKRDC                 :2;
        unsigned                        :2;
        unsigned CLKREN                 :1;
    };
    struct {
        unsigned CLKRDIV0               :1;
        unsigned CLKRDIV1               :1;
        unsigned CLKRDIV2               :1;
        unsigned CLKRDC0                :1;
        unsigned CLKRDC1                :1;
    };
} CLKRCONbits_t;
extern volatile CLKRCONbits_t CLKRCONbits @ 0x39A;
// bitfield macros
#define _CLKRCON_CLKRDIV_POSN                               0x0
#define _CLKRCON_CLKRDIV_POSITION                           0x0
#define _CLKRCON_CLKRDIV_SIZE                               0x3
#define _CLKRCON_CLKRDIV_LENGTH                             0x3
#define _CLKRCON_CLKRDIV_MASK                               0x7
#define _CLKRCON_CLKRDC_POSN                                0x3
#define _CLKRCON_CLKRDC_POSITION                            0x3
#define _CLKRCON_CLKRDC_SIZE                                0x2
#define _CLKRCON_CLKRDC_LENGTH                              0x2
#define _CLKRCON_CLKRDC_MASK                                0x18
#define _CLKRCON_CLKREN_POSN                                0x7
#define _CLKRCON_CLKREN_POSITION                            0x7
#define _CLKRCON_CLKREN_SIZE                                0x1
#define _CLKRCON_CLKREN_LENGTH                              0x1
#define _CLKRCON_CLKREN_MASK                                0x80
#define _CLKRCON_CLKRDIV0_POSN                              0x0
#define _CLKRCON_CLKRDIV0_POSITION                          0x0
#define _CLKRCON_CLKRDIV0_SIZE                              0x1
#define _CLKRCON_CLKRDIV0_LENGTH                            0x1
#define _CLKRCON_CLKRDIV0_MASK                              0x1
#define _CLKRCON_CLKRDIV1_POSN                              0x1
#define _CLKRCON_CLKRDIV1_POSITION                          0x1
#define _CLKRCON_CLKRDIV1_SIZE                              0x1
#define _CLKRCON_CLKRDIV1_LENGTH                            0x1
#define _CLKRCON_CLKRDIV1_MASK                              0x2
#define _CLKRCON_CLKRDIV2_POSN                              0x2
#define _CLKRCON_CLKRDIV2_POSITION                          0x2
#define _CLKRCON_CLKRDIV2_SIZE                              0x1
#define _CLKRCON_CLKRDIV2_LENGTH                            0x1
#define _CLKRCON_CLKRDIV2_MASK                              0x4
#define _CLKRCON_CLKRDC0_POSN                               0x3
#define _CLKRCON_CLKRDC0_POSITION                           0x3
#define _CLKRCON_CLKRDC0_SIZE                               0x1
#define _CLKRCON_CLKRDC0_LENGTH                             0x1
#define _CLKRCON_CLKRDC0_MASK                               0x8
#define _CLKRCON_CLKRDC1_POSN                               0x4
#define _CLKRCON_CLKRDC1_POSITION                           0x4
#define _CLKRCON_CLKRDC1_SIZE                               0x1
#define _CLKRCON_CLKRDC1_LENGTH                             0x1
#define _CLKRCON_CLKRDC1_MASK                               0x10

// Register: MDCON
extern volatile unsigned char           MDCON               @ 0x39C;
#ifndef _LIB_BUILD
asm("MDCON equ 039Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MDBIT                  :1;
        unsigned                        :2;
        unsigned MDOUT                  :1;
        unsigned MDOPOL                 :1;
        unsigned                        :2;
        unsigned MDEN                   :1;
    };
} MDCONbits_t;
extern volatile MDCONbits_t MDCONbits @ 0x39C;
// bitfield macros
#define _MDCON_MDBIT_POSN                                   0x0
#define _MDCON_MDBIT_POSITION                               0x0
#define _MDCON_MDBIT_SIZE                                   0x1
#define _MDCON_MDBIT_LENGTH                                 0x1
#define _MDCON_MDBIT_MASK                                   0x1
#define _MDCON_MDOUT_POSN                                   0x3
#define _MDCON_MDOUT_POSITION                               0x3
#define _MDCON_MDOUT_SIZE                                   0x1
#define _MDCON_MDOUT_LENGTH                                 0x1
#define _MDCON_MDOUT_MASK                                   0x8
#define _MDCON_MDOPOL_POSN                                  0x4
#define _MDCON_MDOPOL_POSITION                              0x4
#define _MDCON_MDOPOL_SIZE                                  0x1
#define _MDCON_MDOPOL_LENGTH                                0x1
#define _MDCON_MDOPOL_MASK                                  0x10
#define _MDCON_MDEN_POSN                                    0x7
#define _MDCON_MDEN_POSITION                                0x7
#define _MDCON_MDEN_SIZE                                    0x1
#define _MDCON_MDEN_LENGTH                                  0x1
#define _MDCON_MDEN_MASK                                    0x80

// Register: MDSRC
extern volatile unsigned char           MDSRC               @ 0x39D;
#ifndef _LIB_BUILD
asm("MDSRC equ 039Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MDMS                   :4;
    };
    struct {
        unsigned MDMS0                  :1;
        unsigned MDMS1                  :1;
        unsigned MDMS2                  :1;
        unsigned MDMS3                  :1;
    };
} MDSRCbits_t;
extern volatile MDSRCbits_t MDSRCbits @ 0x39D;
// bitfield macros
#define _MDSRC_MDMS_POSN                                    0x0
#define _MDSRC_MDMS_POSITION                                0x0
#define _MDSRC_MDMS_SIZE                                    0x4
#define _MDSRC_MDMS_LENGTH                                  0x4
#define _MDSRC_MDMS_MASK                                    0xF
#define _MDSRC_MDMS0_POSN                                   0x0
#define _MDSRC_MDMS0_POSITION                               0x0
#define _MDSRC_MDMS0_SIZE                                   0x1
#define _MDSRC_MDMS0_LENGTH                                 0x1
#define _MDSRC_MDMS0_MASK                                   0x1
#define _MDSRC_MDMS1_POSN                                   0x1
#define _MDSRC_MDMS1_POSITION                               0x1
#define _MDSRC_MDMS1_SIZE                                   0x1
#define _MDSRC_MDMS1_LENGTH                                 0x1
#define _MDSRC_MDMS1_MASK                                   0x2
#define _MDSRC_MDMS2_POSN                                   0x2
#define _MDSRC_MDMS2_POSITION                               0x2
#define _MDSRC_MDMS2_SIZE                                   0x1
#define _MDSRC_MDMS2_LENGTH                                 0x1
#define _MDSRC_MDMS2_MASK                                   0x4
#define _MDSRC_MDMS3_POSN                                   0x3
#define _MDSRC_MDMS3_POSITION                               0x3
#define _MDSRC_MDMS3_SIZE                                   0x1
#define _MDSRC_MDMS3_LENGTH                                 0x1
#define _MDSRC_MDMS3_MASK                                   0x8

// Register: MDCARH
extern volatile unsigned char           MDCARH              @ 0x39E;
#ifndef _LIB_BUILD
asm("MDCARH equ 039Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MDCH                   :4;
        unsigned                        :1;
        unsigned MDCHSYNC               :1;
        unsigned MDCHPOL                :1;
    };
    struct {
        unsigned MDCH0                  :1;
        unsigned MDCH1                  :1;
        unsigned MDCH2                  :1;
        unsigned MDCH3                  :1;
    };
} MDCARHbits_t;
extern volatile MDCARHbits_t MDCARHbits @ 0x39E;
// bitfield macros
#define _MDCARH_MDCH_POSN                                   0x0
#define _MDCARH_MDCH_POSITION                               0x0
#define _MDCARH_MDCH_SIZE                                   0x4
#define _MDCARH_MDCH_LENGTH                                 0x4
#define _MDCARH_MDCH_MASK                                   0xF
#define _MDCARH_MDCHSYNC_POSN                               0x5
#define _MDCARH_MDCHSYNC_POSITION                           0x5
#define _MDCARH_MDCHSYNC_SIZE                               0x1
#define _MDCARH_MDCHSYNC_LENGTH                             0x1
#define _MDCARH_MDCHSYNC_MASK                               0x20
#define _MDCARH_MDCHPOL_POSN                                0x6
#define _MDCARH_MDCHPOL_POSITION                            0x6
#define _MDCARH_MDCHPOL_SIZE                                0x1
#define _MDCARH_MDCHPOL_LENGTH                              0x1
#define _MDCARH_MDCHPOL_MASK                                0x40
#define _MDCARH_MDCH0_POSN                                  0x0
#define _MDCARH_MDCH0_POSITION                              0x0
#define _MDCARH_MDCH0_SIZE                                  0x1
#define _MDCARH_MDCH0_LENGTH                                0x1
#define _MDCARH_MDCH0_MASK                                  0x1
#define _MDCARH_MDCH1_POSN                                  0x1
#define _MDCARH_MDCH1_POSITION                              0x1
#define _MDCARH_MDCH1_SIZE                                  0x1
#define _MDCARH_MDCH1_LENGTH                                0x1
#define _MDCARH_MDCH1_MASK                                  0x2
#define _MDCARH_MDCH2_POSN                                  0x2
#define _MDCARH_MDCH2_POSITION                              0x2
#define _MDCARH_MDCH2_SIZE                                  0x1
#define _MDCARH_MDCH2_LENGTH                                0x1
#define _MDCARH_MDCH2_MASK                                  0x4
#define _MDCARH_MDCH3_POSN                                  0x3
#define _MDCARH_MDCH3_POSITION                              0x3
#define _MDCARH_MDCH3_SIZE                                  0x1
#define _MDCARH_MDCH3_LENGTH                                0x1
#define _MDCARH_MDCH3_MASK                                  0x8

// Register: MDCARL
extern volatile unsigned char           MDCARL              @ 0x39F;
#ifndef _LIB_BUILD
asm("MDCARL equ 039Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MDCL                   :4;
        unsigned                        :1;
        unsigned MDCLSYNC               :1;
        unsigned MDCLPOL                :1;
    };
    struct {
        unsigned MDCL0                  :1;
        unsigned MDCL1                  :1;
        unsigned MDCL2                  :1;
        unsigned MDCL3                  :1;
    };
} MDCARLbits_t;
extern volatile MDCARLbits_t MDCARLbits @ 0x39F;
// bitfield macros
#define _MDCARL_MDCL_POSN                                   0x0
#define _MDCARL_MDCL_POSITION                               0x0
#define _MDCARL_MDCL_SIZE                                   0x4
#define _MDCARL_MDCL_LENGTH                                 0x4
#define _MDCARL_MDCL_MASK                                   0xF
#define _MDCARL_MDCLSYNC_POSN                               0x5
#define _MDCARL_MDCLSYNC_POSITION                           0x5
#define _MDCARL_MDCLSYNC_SIZE                               0x1
#define _MDCARL_MDCLSYNC_LENGTH                             0x1
#define _MDCARL_MDCLSYNC_MASK                               0x20
#define _MDCARL_MDCLPOL_POSN                                0x6
#define _MDCARL_MDCLPOL_POSITION                            0x6
#define _MDCARL_MDCLPOL_SIZE                                0x1
#define _MDCARL_MDCLPOL_LENGTH                              0x1
#define _MDCARL_MDCLPOL_MASK                                0x40
#define _MDCARL_MDCL0_POSN                                  0x0
#define _MDCARL_MDCL0_POSITION                              0x0
#define _MDCARL_MDCL0_SIZE                                  0x1
#define _MDCARL_MDCL0_LENGTH                                0x1
#define _MDCARL_MDCL0_MASK                                  0x1
#define _MDCARL_MDCL1_POSN                                  0x1
#define _MDCARL_MDCL1_POSITION                              0x1
#define _MDCARL_MDCL1_SIZE                                  0x1
#define _MDCARL_MDCL1_LENGTH                                0x1
#define _MDCARL_MDCL1_MASK                                  0x2
#define _MDCARL_MDCL2_POSN                                  0x2
#define _MDCARL_MDCL2_POSITION                              0x2
#define _MDCARL_MDCL2_SIZE                                  0x1
#define _MDCARL_MDCL2_LENGTH                                0x1
#define _MDCARL_MDCL2_MASK                                  0x4
#define _MDCARL_MDCL3_POSN                                  0x3
#define _MDCARL_MDCL3_POSITION                              0x3
#define _MDCARL_MDCL3_SIZE                                  0x1
#define _MDCARL_MDCL3_LENGTH                                0x1
#define _MDCARL_MDCL3_MASK                                  0x8

// Register: CCDNA
extern volatile unsigned char           CCDNA               @ 0x40C;
#ifndef _LIB_BUILD
asm("CCDNA equ 040Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCDNA0                 :1;
        unsigned CCDNA1                 :1;
        unsigned CCDNA2                 :1;
        unsigned                        :1;
        unsigned CCDNA4                 :1;
        unsigned CCDNA5                 :1;
    };
} CCDNAbits_t;
extern volatile CCDNAbits_t CCDNAbits @ 0x40C;
// bitfield macros
#define _CCDNA_CCDNA0_POSN                                  0x0
#define _CCDNA_CCDNA0_POSITION                              0x0
#define _CCDNA_CCDNA0_SIZE                                  0x1
#define _CCDNA_CCDNA0_LENGTH                                0x1
#define _CCDNA_CCDNA0_MASK                                  0x1
#define _CCDNA_CCDNA1_POSN                                  0x1
#define _CCDNA_CCDNA1_POSITION                              0x1
#define _CCDNA_CCDNA1_SIZE                                  0x1
#define _CCDNA_CCDNA1_LENGTH                                0x1
#define _CCDNA_CCDNA1_MASK                                  0x2
#define _CCDNA_CCDNA2_POSN                                  0x2
#define _CCDNA_CCDNA2_POSITION                              0x2
#define _CCDNA_CCDNA2_SIZE                                  0x1
#define _CCDNA_CCDNA2_LENGTH                                0x1
#define _CCDNA_CCDNA2_MASK                                  0x4
#define _CCDNA_CCDNA4_POSN                                  0x4
#define _CCDNA_CCDNA4_POSITION                              0x4
#define _CCDNA_CCDNA4_SIZE                                  0x1
#define _CCDNA_CCDNA4_LENGTH                                0x1
#define _CCDNA_CCDNA4_MASK                                  0x10
#define _CCDNA_CCDNA5_POSN                                  0x5
#define _CCDNA_CCDNA5_POSITION                              0x5
#define _CCDNA_CCDNA5_SIZE                                  0x1
#define _CCDNA_CCDNA5_LENGTH                                0x1
#define _CCDNA_CCDNA5_MASK                                  0x20

// Register: CCDNC
extern volatile unsigned char           CCDNC               @ 0x40E;
#ifndef _LIB_BUILD
asm("CCDNC equ 040Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCDNC0                 :1;
        unsigned CCDNC1                 :1;
        unsigned CCDNC2                 :1;
        unsigned CCDNC3                 :1;
        unsigned CCDNC4                 :1;
        unsigned CCDNC5                 :1;
    };
} CCDNCbits_t;
extern volatile CCDNCbits_t CCDNCbits @ 0x40E;
// bitfield macros
#define _CCDNC_CCDNC0_POSN                                  0x0
#define _CCDNC_CCDNC0_POSITION                              0x0
#define _CCDNC_CCDNC0_SIZE                                  0x1
#define _CCDNC_CCDNC0_LENGTH                                0x1
#define _CCDNC_CCDNC0_MASK                                  0x1
#define _CCDNC_CCDNC1_POSN                                  0x1
#define _CCDNC_CCDNC1_POSITION                              0x1
#define _CCDNC_CCDNC1_SIZE                                  0x1
#define _CCDNC_CCDNC1_LENGTH                                0x1
#define _CCDNC_CCDNC1_MASK                                  0x2
#define _CCDNC_CCDNC2_POSN                                  0x2
#define _CCDNC_CCDNC2_POSITION                              0x2
#define _CCDNC_CCDNC2_SIZE                                  0x1
#define _CCDNC_CCDNC2_LENGTH                                0x1
#define _CCDNC_CCDNC2_MASK                                  0x4
#define _CCDNC_CCDNC3_POSN                                  0x3
#define _CCDNC_CCDNC3_POSITION                              0x3
#define _CCDNC_CCDNC3_SIZE                                  0x1
#define _CCDNC_CCDNC3_LENGTH                                0x1
#define _CCDNC_CCDNC3_MASK                                  0x8
#define _CCDNC_CCDNC4_POSN                                  0x4
#define _CCDNC_CCDNC4_POSITION                              0x4
#define _CCDNC_CCDNC4_SIZE                                  0x1
#define _CCDNC_CCDNC4_LENGTH                                0x1
#define _CCDNC_CCDNC4_MASK                                  0x10
#define _CCDNC_CCDNC5_POSN                                  0x5
#define _CCDNC_CCDNC5_POSITION                              0x5
#define _CCDNC_CCDNC5_SIZE                                  0x1
#define _CCDNC_CCDNC5_LENGTH                                0x1
#define _CCDNC_CCDNC5_MASK                                  0x20

// Register: TMR3
extern volatile unsigned short          TMR3                @ 0x411;
#ifndef _LIB_BUILD
asm("TMR3 equ 0411h");
#endif

// Register: TMR3L
extern volatile unsigned char           TMR3L               @ 0x411;
#ifndef _LIB_BUILD
asm("TMR3L equ 0411h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR3L                  :8;
    };
} TMR3Lbits_t;
extern volatile TMR3Lbits_t TMR3Lbits @ 0x411;
// bitfield macros
#define _TMR3L_TMR3L_POSN                                   0x0
#define _TMR3L_TMR3L_POSITION                               0x0
#define _TMR3L_TMR3L_SIZE                                   0x8
#define _TMR3L_TMR3L_LENGTH                                 0x8
#define _TMR3L_TMR3L_MASK                                   0xFF

// Register: TMR3H
extern volatile unsigned char           TMR3H               @ 0x412;
#ifndef _LIB_BUILD
asm("TMR3H equ 0412h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR3H                  :8;
    };
} TMR3Hbits_t;
extern volatile TMR3Hbits_t TMR3Hbits @ 0x412;
// bitfield macros
#define _TMR3H_TMR3H_POSN                                   0x0
#define _TMR3H_TMR3H_POSITION                               0x0
#define _TMR3H_TMR3H_SIZE                                   0x8
#define _TMR3H_TMR3H_LENGTH                                 0x8
#define _TMR3H_TMR3H_MASK                                   0xFF

// Register: T3CON
extern volatile unsigned char           T3CON               @ 0x413;
#ifndef _LIB_BUILD
asm("T3CON equ 0413h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR3ON                 :1;
        unsigned                        :1;
        unsigned T3SYNC                 :1;
        unsigned T3SOSC                 :1;
        unsigned T3CKPS                 :2;
        unsigned TMR3CS                 :2;
    };
    struct {
        unsigned                        :4;
        unsigned T3CKPS0                :1;
        unsigned T3CKPS1                :1;
        unsigned TMR3CS0                :1;
        unsigned TMR3CS1                :1;
    };
} T3CONbits_t;
extern volatile T3CONbits_t T3CONbits @ 0x413;
// bitfield macros
#define _T3CON_TMR3ON_POSN                                  0x0
#define _T3CON_TMR3ON_POSITION                              0x0
#define _T3CON_TMR3ON_SIZE                                  0x1
#define _T3CON_TMR3ON_LENGTH                                0x1
#define _T3CON_TMR3ON_MASK                                  0x1
#define _T3CON_T3SYNC_POSN                                  0x2
#define _T3CON_T3SYNC_POSITION                              0x2
#define _T3CON_T3SYNC_SIZE                                  0x1
#define _T3CON_T3SYNC_LENGTH                                0x1
#define _T3CON_T3SYNC_MASK                                  0x4
#define _T3CON_T3SOSC_POSN                                  0x3
#define _T3CON_T3SOSC_POSITION                              0x3
#define _T3CON_T3SOSC_SIZE                                  0x1
#define _T3CON_T3SOSC_LENGTH                                0x1
#define _T3CON_T3SOSC_MASK                                  0x8
#define _T3CON_T3CKPS_POSN                                  0x4
#define _T3CON_T3CKPS_POSITION                              0x4
#define _T3CON_T3CKPS_SIZE                                  0x2
#define _T3CON_T3CKPS_LENGTH                                0x2
#define _T3CON_T3CKPS_MASK                                  0x30
#define _T3CON_TMR3CS_POSN                                  0x6
#define _T3CON_TMR3CS_POSITION                              0x6
#define _T3CON_TMR3CS_SIZE                                  0x2
#define _T3CON_TMR3CS_LENGTH                                0x2
#define _T3CON_TMR3CS_MASK                                  0xC0
#define _T3CON_T3CKPS0_POSN                                 0x4
#define _T3CON_T3CKPS0_POSITION                             0x4
#define _T3CON_T3CKPS0_SIZE                                 0x1
#define _T3CON_T3CKPS0_LENGTH                               0x1
#define _T3CON_T3CKPS0_MASK                                 0x10
#define _T3CON_T3CKPS1_POSN                                 0x5
#define _T3CON_T3CKPS1_POSITION                             0x5
#define _T3CON_T3CKPS1_SIZE                                 0x1
#define _T3CON_T3CKPS1_LENGTH                               0x1
#define _T3CON_T3CKPS1_MASK                                 0x20
#define _T3CON_TMR3CS0_POSN                                 0x6
#define _T3CON_TMR3CS0_POSITION                             0x6
#define _T3CON_TMR3CS0_SIZE                                 0x1
#define _T3CON_TMR3CS0_LENGTH                               0x1
#define _T3CON_TMR3CS0_MASK                                 0x40
#define _T3CON_TMR3CS1_POSN                                 0x7
#define _T3CON_TMR3CS1_POSITION                             0x7
#define _T3CON_TMR3CS1_SIZE                                 0x1
#define _T3CON_TMR3CS1_LENGTH                               0x1
#define _T3CON_TMR3CS1_MASK                                 0x80

// Register: T3GCON
extern volatile unsigned char           T3GCON              @ 0x414;
#ifndef _LIB_BUILD
asm("T3GCON equ 0414h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T3GSS                  :2;
        unsigned T3GVAL                 :1;
        unsigned T3GGO_nDONE            :1;
        unsigned T3GSPM                 :1;
        unsigned T3GTM                  :1;
        unsigned T3GPOL                 :1;
        unsigned TMR3GE                 :1;
    };
    struct {
        unsigned T3GSS0                 :1;
        unsigned T3GSS1                 :1;
    };
} T3GCONbits_t;
extern volatile T3GCONbits_t T3GCONbits @ 0x414;
// bitfield macros
#define _T3GCON_T3GSS_POSN                                  0x0
#define _T3GCON_T3GSS_POSITION                              0x0
#define _T3GCON_T3GSS_SIZE                                  0x2
#define _T3GCON_T3GSS_LENGTH                                0x2
#define _T3GCON_T3GSS_MASK                                  0x3
#define _T3GCON_T3GVAL_POSN                                 0x2
#define _T3GCON_T3GVAL_POSITION                             0x2
#define _T3GCON_T3GVAL_SIZE                                 0x1
#define _T3GCON_T3GVAL_LENGTH                               0x1
#define _T3GCON_T3GVAL_MASK                                 0x4
#define _T3GCON_T3GGO_nDONE_POSN                            0x3
#define _T3GCON_T3GGO_nDONE_POSITION                        0x3
#define _T3GCON_T3GGO_nDONE_SIZE                            0x1
#define _T3GCON_T3GGO_nDONE_LENGTH                          0x1
#define _T3GCON_T3GGO_nDONE_MASK                            0x8
#define _T3GCON_T3GSPM_POSN                                 0x4
#define _T3GCON_T3GSPM_POSITION                             0x4
#define _T3GCON_T3GSPM_SIZE                                 0x1
#define _T3GCON_T3GSPM_LENGTH                               0x1
#define _T3GCON_T3GSPM_MASK                                 0x10
#define _T3GCON_T3GTM_POSN                                  0x5
#define _T3GCON_T3GTM_POSITION                              0x5
#define _T3GCON_T3GTM_SIZE                                  0x1
#define _T3GCON_T3GTM_LENGTH                                0x1
#define _T3GCON_T3GTM_MASK                                  0x20
#define _T3GCON_T3GPOL_POSN                                 0x6
#define _T3GCON_T3GPOL_POSITION                             0x6
#define _T3GCON_T3GPOL_SIZE                                 0x1
#define _T3GCON_T3GPOL_LENGTH                               0x1
#define _T3GCON_T3GPOL_MASK                                 0x40
#define _T3GCON_TMR3GE_POSN                                 0x7
#define _T3GCON_TMR3GE_POSITION                             0x7
#define _T3GCON_TMR3GE_SIZE                                 0x1
#define _T3GCON_TMR3GE_LENGTH                               0x1
#define _T3GCON_TMR3GE_MASK                                 0x80
#define _T3GCON_T3GSS0_POSN                                 0x0
#define _T3GCON_T3GSS0_POSITION                             0x0
#define _T3GCON_T3GSS0_SIZE                                 0x1
#define _T3GCON_T3GSS0_LENGTH                               0x1
#define _T3GCON_T3GSS0_MASK                                 0x1
#define _T3GCON_T3GSS1_POSN                                 0x1
#define _T3GCON_T3GSS1_POSITION                             0x1
#define _T3GCON_T3GSS1_SIZE                                 0x1
#define _T3GCON_T3GSS1_LENGTH                               0x1
#define _T3GCON_T3GSS1_MASK                                 0x2

// Register: TMR4
extern volatile unsigned char           TMR4                @ 0x415;
#ifndef _LIB_BUILD
asm("TMR4 equ 0415h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR4                   :8;
    };
} TMR4bits_t;
extern volatile TMR4bits_t TMR4bits @ 0x415;
// bitfield macros
#define _TMR4_TMR4_POSN                                     0x0
#define _TMR4_TMR4_POSITION                                 0x0
#define _TMR4_TMR4_SIZE                                     0x8
#define _TMR4_TMR4_LENGTH                                   0x8
#define _TMR4_TMR4_MASK                                     0xFF

// Register: PR4
extern volatile unsigned char           PR4                 @ 0x416;
#ifndef _LIB_BUILD
asm("PR4 equ 0416h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR4                    :8;
    };
} PR4bits_t;
extern volatile PR4bits_t PR4bits @ 0x416;
// bitfield macros
#define _PR4_PR4_POSN                                       0x0
#define _PR4_PR4_POSITION                                   0x0
#define _PR4_PR4_SIZE                                       0x8
#define _PR4_PR4_LENGTH                                     0x8
#define _PR4_PR4_MASK                                       0xFF

// Register: T4CON
extern volatile unsigned char           T4CON               @ 0x417;
#ifndef _LIB_BUILD
asm("T4CON equ 0417h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T4CKPS                 :2;
        unsigned TMR4ON                 :1;
        unsigned T4OUTPS                :4;
    };
    struct {
        unsigned T4CKPS0                :1;
        unsigned T4CKPS1                :1;
        unsigned                        :1;
        unsigned T4OUTPS0               :1;
        unsigned T4OUTPS1               :1;
        unsigned T4OUTPS2               :1;
        unsigned T4OUTPS3               :1;
    };
} T4CONbits_t;
extern volatile T4CONbits_t T4CONbits @ 0x417;
// bitfield macros
#define _T4CON_T4CKPS_POSN                                  0x0
#define _T4CON_T4CKPS_POSITION                              0x0
#define _T4CON_T4CKPS_SIZE                                  0x2
#define _T4CON_T4CKPS_LENGTH                                0x2
#define _T4CON_T4CKPS_MASK                                  0x3
#define _T4CON_TMR4ON_POSN                                  0x2
#define _T4CON_TMR4ON_POSITION                              0x2
#define _T4CON_TMR4ON_SIZE                                  0x1
#define _T4CON_TMR4ON_LENGTH                                0x1
#define _T4CON_TMR4ON_MASK                                  0x4
#define _T4CON_T4OUTPS_POSN                                 0x3
#define _T4CON_T4OUTPS_POSITION                             0x3
#define _T4CON_T4OUTPS_SIZE                                 0x4
#define _T4CON_T4OUTPS_LENGTH                               0x4
#define _T4CON_T4OUTPS_MASK                                 0x78
#define _T4CON_T4CKPS0_POSN                                 0x0
#define _T4CON_T4CKPS0_POSITION                             0x0
#define _T4CON_T4CKPS0_SIZE                                 0x1
#define _T4CON_T4CKPS0_LENGTH                               0x1
#define _T4CON_T4CKPS0_MASK                                 0x1
#define _T4CON_T4CKPS1_POSN                                 0x1
#define _T4CON_T4CKPS1_POSITION                             0x1
#define _T4CON_T4CKPS1_SIZE                                 0x1
#define _T4CON_T4CKPS1_LENGTH                               0x1
#define _T4CON_T4CKPS1_MASK                                 0x2
#define _T4CON_T4OUTPS0_POSN                                0x3
#define _T4CON_T4OUTPS0_POSITION                            0x3
#define _T4CON_T4OUTPS0_SIZE                                0x1
#define _T4CON_T4OUTPS0_LENGTH                              0x1
#define _T4CON_T4OUTPS0_MASK                                0x8
#define _T4CON_T4OUTPS1_POSN                                0x4
#define _T4CON_T4OUTPS1_POSITION                            0x4
#define _T4CON_T4OUTPS1_SIZE                                0x1
#define _T4CON_T4OUTPS1_LENGTH                              0x1
#define _T4CON_T4OUTPS1_MASK                                0x10
#define _T4CON_T4OUTPS2_POSN                                0x5
#define _T4CON_T4OUTPS2_POSITION                            0x5
#define _T4CON_T4OUTPS2_SIZE                                0x1
#define _T4CON_T4OUTPS2_LENGTH                              0x1
#define _T4CON_T4OUTPS2_MASK                                0x20
#define _T4CON_T4OUTPS3_POSN                                0x6
#define _T4CON_T4OUTPS3_POSITION                            0x6
#define _T4CON_T4OUTPS3_SIZE                                0x1
#define _T4CON_T4OUTPS3_LENGTH                              0x1
#define _T4CON_T4OUTPS3_MASK                                0x40

// Register: TMR5
extern volatile unsigned short          TMR5                @ 0x418;
#ifndef _LIB_BUILD
asm("TMR5 equ 0418h");
#endif

// Register: TMR5L
extern volatile unsigned char           TMR5L               @ 0x418;
#ifndef _LIB_BUILD
asm("TMR5L equ 0418h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR5L                  :8;
    };
} TMR5Lbits_t;
extern volatile TMR5Lbits_t TMR5Lbits @ 0x418;
// bitfield macros
#define _TMR5L_TMR5L_POSN                                   0x0
#define _TMR5L_TMR5L_POSITION                               0x0
#define _TMR5L_TMR5L_SIZE                                   0x8
#define _TMR5L_TMR5L_LENGTH                                 0x8
#define _TMR5L_TMR5L_MASK                                   0xFF

// Register: TMR5H
extern volatile unsigned char           TMR5H               @ 0x419;
#ifndef _LIB_BUILD
asm("TMR5H equ 0419h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR5H                  :8;
    };
} TMR5Hbits_t;
extern volatile TMR5Hbits_t TMR5Hbits @ 0x419;
// bitfield macros
#define _TMR5H_TMR5H_POSN                                   0x0
#define _TMR5H_TMR5H_POSITION                               0x0
#define _TMR5H_TMR5H_SIZE                                   0x8
#define _TMR5H_TMR5H_LENGTH                                 0x8
#define _TMR5H_TMR5H_MASK                                   0xFF

// Register: T5CON
extern volatile unsigned char           T5CON               @ 0x41A;
#ifndef _LIB_BUILD
asm("T5CON equ 041Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR5ON                 :1;
        unsigned                        :1;
        unsigned T5SYNC                 :1;
        unsigned T5SOSC                 :1;
        unsigned T5CKPS                 :2;
        unsigned TMR5CS                 :2;
    };
    struct {
        unsigned                        :4;
        unsigned T5CKPS0                :1;
        unsigned T5CKPS1                :1;
        unsigned TMR5CS0                :1;
        unsigned TMR5CS1                :1;
    };
} T5CONbits_t;
extern volatile T5CONbits_t T5CONbits @ 0x41A;
// bitfield macros
#define _T5CON_TMR5ON_POSN                                  0x0
#define _T5CON_TMR5ON_POSITION                              0x0
#define _T5CON_TMR5ON_SIZE                                  0x1
#define _T5CON_TMR5ON_LENGTH                                0x1
#define _T5CON_TMR5ON_MASK                                  0x1
#define _T5CON_T5SYNC_POSN                                  0x2
#define _T5CON_T5SYNC_POSITION                              0x2
#define _T5CON_T5SYNC_SIZE                                  0x1
#define _T5CON_T5SYNC_LENGTH                                0x1
#define _T5CON_T5SYNC_MASK                                  0x4
#define _T5CON_T5SOSC_POSN                                  0x3
#define _T5CON_T5SOSC_POSITION                              0x3
#define _T5CON_T5SOSC_SIZE                                  0x1
#define _T5CON_T5SOSC_LENGTH                                0x1
#define _T5CON_T5SOSC_MASK                                  0x8
#define _T5CON_T5CKPS_POSN                                  0x4
#define _T5CON_T5CKPS_POSITION                              0x4
#define _T5CON_T5CKPS_SIZE                                  0x2
#define _T5CON_T5CKPS_LENGTH                                0x2
#define _T5CON_T5CKPS_MASK                                  0x30
#define _T5CON_TMR5CS_POSN                                  0x6
#define _T5CON_TMR5CS_POSITION                              0x6
#define _T5CON_TMR5CS_SIZE                                  0x2
#define _T5CON_TMR5CS_LENGTH                                0x2
#define _T5CON_TMR5CS_MASK                                  0xC0
#define _T5CON_T5CKPS0_POSN                                 0x4
#define _T5CON_T5CKPS0_POSITION                             0x4
#define _T5CON_T5CKPS0_SIZE                                 0x1
#define _T5CON_T5CKPS0_LENGTH                               0x1
#define _T5CON_T5CKPS0_MASK                                 0x10
#define _T5CON_T5CKPS1_POSN                                 0x5
#define _T5CON_T5CKPS1_POSITION                             0x5
#define _T5CON_T5CKPS1_SIZE                                 0x1
#define _T5CON_T5CKPS1_LENGTH                               0x1
#define _T5CON_T5CKPS1_MASK                                 0x20
#define _T5CON_TMR5CS0_POSN                                 0x6
#define _T5CON_TMR5CS0_POSITION                             0x6
#define _T5CON_TMR5CS0_SIZE                                 0x1
#define _T5CON_TMR5CS0_LENGTH                               0x1
#define _T5CON_TMR5CS0_MASK                                 0x40
#define _T5CON_TMR5CS1_POSN                                 0x7
#define _T5CON_TMR5CS1_POSITION                             0x7
#define _T5CON_TMR5CS1_SIZE                                 0x1
#define _T5CON_TMR5CS1_LENGTH                               0x1
#define _T5CON_TMR5CS1_MASK                                 0x80

// Register: T5GCON
extern volatile unsigned char           T5GCON              @ 0x41B;
#ifndef _LIB_BUILD
asm("T5GCON equ 041Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T5GSS                  :2;
        unsigned T5GVAL                 :1;
        unsigned T5GGO_nDONE            :1;
        unsigned T5GSPM                 :1;
        unsigned T5GTM                  :1;
        unsigned T5GPOL                 :1;
        unsigned TMR5GE                 :1;
    };
    struct {
        unsigned T5GSS0                 :1;
        unsigned T5GSS1                 :1;
    };
} T5GCONbits_t;
extern volatile T5GCONbits_t T5GCONbits @ 0x41B;
// bitfield macros
#define _T5GCON_T5GSS_POSN                                  0x0
#define _T5GCON_T5GSS_POSITION                              0x0
#define _T5GCON_T5GSS_SIZE                                  0x2
#define _T5GCON_T5GSS_LENGTH                                0x2
#define _T5GCON_T5GSS_MASK                                  0x3
#define _T5GCON_T5GVAL_POSN                                 0x2
#define _T5GCON_T5GVAL_POSITION                             0x2
#define _T5GCON_T5GVAL_SIZE                                 0x1
#define _T5GCON_T5GVAL_LENGTH                               0x1
#define _T5GCON_T5GVAL_MASK                                 0x4
#define _T5GCON_T5GGO_nDONE_POSN                            0x3
#define _T5GCON_T5GGO_nDONE_POSITION                        0x3
#define _T5GCON_T5GGO_nDONE_SIZE                            0x1
#define _T5GCON_T5GGO_nDONE_LENGTH                          0x1
#define _T5GCON_T5GGO_nDONE_MASK                            0x8
#define _T5GCON_T5GSPM_POSN                                 0x4
#define _T5GCON_T5GSPM_POSITION                             0x4
#define _T5GCON_T5GSPM_SIZE                                 0x1
#define _T5GCON_T5GSPM_LENGTH                               0x1
#define _T5GCON_T5GSPM_MASK                                 0x10
#define _T5GCON_T5GTM_POSN                                  0x5
#define _T5GCON_T5GTM_POSITION                              0x5
#define _T5GCON_T5GTM_SIZE                                  0x1
#define _T5GCON_T5GTM_LENGTH                                0x1
#define _T5GCON_T5GTM_MASK                                  0x20
#define _T5GCON_T5GPOL_POSN                                 0x6
#define _T5GCON_T5GPOL_POSITION                             0x6
#define _T5GCON_T5GPOL_SIZE                                 0x1
#define _T5GCON_T5GPOL_LENGTH                               0x1
#define _T5GCON_T5GPOL_MASK                                 0x40
#define _T5GCON_TMR5GE_POSN                                 0x7
#define _T5GCON_TMR5GE_POSITION                             0x7
#define _T5GCON_TMR5GE_SIZE                                 0x1
#define _T5GCON_TMR5GE_LENGTH                               0x1
#define _T5GCON_TMR5GE_MASK                                 0x80
#define _T5GCON_T5GSS0_POSN                                 0x0
#define _T5GCON_T5GSS0_POSITION                             0x0
#define _T5GCON_T5GSS0_SIZE                                 0x1
#define _T5GCON_T5GSS0_LENGTH                               0x1
#define _T5GCON_T5GSS0_MASK                                 0x1
#define _T5GCON_T5GSS1_POSN                                 0x1
#define _T5GCON_T5GSS1_POSITION                             0x1
#define _T5GCON_T5GSS1_SIZE                                 0x1
#define _T5GCON_T5GSS1_LENGTH                               0x1
#define _T5GCON_T5GSS1_MASK                                 0x2

// Register: TMR6
extern volatile unsigned char           TMR6                @ 0x41C;
#ifndef _LIB_BUILD
asm("TMR6 equ 041Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR6                   :8;
    };
} TMR6bits_t;
extern volatile TMR6bits_t TMR6bits @ 0x41C;
// bitfield macros
#define _TMR6_TMR6_POSN                                     0x0
#define _TMR6_TMR6_POSITION                                 0x0
#define _TMR6_TMR6_SIZE                                     0x8
#define _TMR6_TMR6_LENGTH                                   0x8
#define _TMR6_TMR6_MASK                                     0xFF

// Register: PR6
extern volatile unsigned char           PR6                 @ 0x41D;
#ifndef _LIB_BUILD
asm("PR6 equ 041Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR6                    :8;
    };
} PR6bits_t;
extern volatile PR6bits_t PR6bits @ 0x41D;
// bitfield macros
#define _PR6_PR6_POSN                                       0x0
#define _PR6_PR6_POSITION                                   0x0
#define _PR6_PR6_SIZE                                       0x8
#define _PR6_PR6_LENGTH                                     0x8
#define _PR6_PR6_MASK                                       0xFF

// Register: T6CON
extern volatile unsigned char           T6CON               @ 0x41E;
#ifndef _LIB_BUILD
asm("T6CON equ 041Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T6CKPS                 :2;
        unsigned TMR6ON                 :1;
        unsigned T6OUTPS                :4;
    };
    struct {
        unsigned T6CKPS0                :1;
        unsigned T6CKPS1                :1;
        unsigned                        :1;
        unsigned T6OUTPS0               :1;
        unsigned T6OUTPS1               :1;
        unsigned T6OUTPS2               :1;
        unsigned T6OUTPS3               :1;
    };
} T6CONbits_t;
extern volatile T6CONbits_t T6CONbits @ 0x41E;
// bitfield macros
#define _T6CON_T6CKPS_POSN                                  0x0
#define _T6CON_T6CKPS_POSITION                              0x0
#define _T6CON_T6CKPS_SIZE                                  0x2
#define _T6CON_T6CKPS_LENGTH                                0x2
#define _T6CON_T6CKPS_MASK                                  0x3
#define _T6CON_TMR6ON_POSN                                  0x2
#define _T6CON_TMR6ON_POSITION                              0x2
#define _T6CON_TMR6ON_SIZE                                  0x1
#define _T6CON_TMR6ON_LENGTH                                0x1
#define _T6CON_TMR6ON_MASK                                  0x4
#define _T6CON_T6OUTPS_POSN                                 0x3
#define _T6CON_T6OUTPS_POSITION                             0x3
#define _T6CON_T6OUTPS_SIZE                                 0x4
#define _T6CON_T6OUTPS_LENGTH                               0x4
#define _T6CON_T6OUTPS_MASK                                 0x78
#define _T6CON_T6CKPS0_POSN                                 0x0
#define _T6CON_T6CKPS0_POSITION                             0x0
#define _T6CON_T6CKPS0_SIZE                                 0x1
#define _T6CON_T6CKPS0_LENGTH                               0x1
#define _T6CON_T6CKPS0_MASK                                 0x1
#define _T6CON_T6CKPS1_POSN                                 0x1
#define _T6CON_T6CKPS1_POSITION                             0x1
#define _T6CON_T6CKPS1_SIZE                                 0x1
#define _T6CON_T6CKPS1_LENGTH                               0x1
#define _T6CON_T6CKPS1_MASK                                 0x2
#define _T6CON_T6OUTPS0_POSN                                0x3
#define _T6CON_T6OUTPS0_POSITION                            0x3
#define _T6CON_T6OUTPS0_SIZE                                0x1
#define _T6CON_T6OUTPS0_LENGTH                              0x1
#define _T6CON_T6OUTPS0_MASK                                0x8
#define _T6CON_T6OUTPS1_POSN                                0x4
#define _T6CON_T6OUTPS1_POSITION                            0x4
#define _T6CON_T6OUTPS1_SIZE                                0x1
#define _T6CON_T6OUTPS1_LENGTH                              0x1
#define _T6CON_T6OUTPS1_MASK                                0x10
#define _T6CON_T6OUTPS2_POSN                                0x5
#define _T6CON_T6OUTPS2_POSITION                            0x5
#define _T6CON_T6OUTPS2_SIZE                                0x1
#define _T6CON_T6OUTPS2_LENGTH                              0x1
#define _T6CON_T6OUTPS2_MASK                                0x20
#define _T6CON_T6OUTPS3_POSN                                0x6
#define _T6CON_T6OUTPS3_POSITION                            0x6
#define _T6CON_T6OUTPS3_SIZE                                0x1
#define _T6CON_T6OUTPS3_LENGTH                              0x1
#define _T6CON_T6OUTPS3_MASK                                0x40

// Register: CCDCON
extern volatile unsigned char           CCDCON              @ 0x41F;
#ifndef _LIB_BUILD
asm("CCDCON equ 041Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCDS                   :2;
        unsigned                        :5;
        unsigned CCDEN                  :1;
    };
    struct {
        unsigned CCDS0                  :1;
        unsigned CCDS1                  :1;
    };
} CCDCONbits_t;
extern volatile CCDCONbits_t CCDCONbits @ 0x41F;
// bitfield macros
#define _CCDCON_CCDS_POSN                                   0x0
#define _CCDCON_CCDS_POSITION                               0x0
#define _CCDCON_CCDS_SIZE                                   0x2
#define _CCDCON_CCDS_LENGTH                                 0x2
#define _CCDCON_CCDS_MASK                                   0x3
#define _CCDCON_CCDEN_POSN                                  0x7
#define _CCDCON_CCDEN_POSITION                              0x7
#define _CCDCON_CCDEN_SIZE                                  0x1
#define _CCDCON_CCDEN_LENGTH                                0x1
#define _CCDCON_CCDEN_MASK                                  0x80
#define _CCDCON_CCDS0_POSN                                  0x0
#define _CCDCON_CCDS0_POSITION                              0x0
#define _CCDCON_CCDS0_SIZE                                  0x1
#define _CCDCON_CCDS0_LENGTH                                0x1
#define _CCDCON_CCDS0_MASK                                  0x1
#define _CCDCON_CCDS1_POSN                                  0x1
#define _CCDCON_CCDS1_POSITION                              0x1
#define _CCDCON_CCDS1_SIZE                                  0x1
#define _CCDCON_CCDS1_LENGTH                                0x1
#define _CCDCON_CCDS1_MASK                                  0x2

// Register: CCDPA
extern volatile unsigned char           CCDPA               @ 0x48C;
#ifndef _LIB_BUILD
asm("CCDPA equ 048Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCDPA0                 :1;
        unsigned CCDPA1                 :1;
        unsigned CCDPA2                 :1;
        unsigned                        :1;
        unsigned CCDPA4                 :1;
        unsigned CCDPA5                 :1;
    };
} CCDPAbits_t;
extern volatile CCDPAbits_t CCDPAbits @ 0x48C;
// bitfield macros
#define _CCDPA_CCDPA0_POSN                                  0x0
#define _CCDPA_CCDPA0_POSITION                              0x0
#define _CCDPA_CCDPA0_SIZE                                  0x1
#define _CCDPA_CCDPA0_LENGTH                                0x1
#define _CCDPA_CCDPA0_MASK                                  0x1
#define _CCDPA_CCDPA1_POSN                                  0x1
#define _CCDPA_CCDPA1_POSITION                              0x1
#define _CCDPA_CCDPA1_SIZE                                  0x1
#define _CCDPA_CCDPA1_LENGTH                                0x1
#define _CCDPA_CCDPA1_MASK                                  0x2
#define _CCDPA_CCDPA2_POSN                                  0x2
#define _CCDPA_CCDPA2_POSITION                              0x2
#define _CCDPA_CCDPA2_SIZE                                  0x1
#define _CCDPA_CCDPA2_LENGTH                                0x1
#define _CCDPA_CCDPA2_MASK                                  0x4
#define _CCDPA_CCDPA4_POSN                                  0x4
#define _CCDPA_CCDPA4_POSITION                              0x4
#define _CCDPA_CCDPA4_SIZE                                  0x1
#define _CCDPA_CCDPA4_LENGTH                                0x1
#define _CCDPA_CCDPA4_MASK                                  0x10
#define _CCDPA_CCDPA5_POSN                                  0x5
#define _CCDPA_CCDPA5_POSITION                              0x5
#define _CCDPA_CCDPA5_SIZE                                  0x1
#define _CCDPA_CCDPA5_LENGTH                                0x1
#define _CCDPA_CCDPA5_MASK                                  0x20

// Register: CCDPC
extern volatile unsigned char           CCDPC               @ 0x48E;
#ifndef _LIB_BUILD
asm("CCDPC equ 048Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCDPC0                 :1;
        unsigned CCDPC1                 :1;
        unsigned CCDPC2                 :1;
        unsigned CCDPC3                 :1;
        unsigned CCDPC4                 :1;
        unsigned CCDPC5                 :1;
    };
} CCDPCbits_t;
extern volatile CCDPCbits_t CCDPCbits @ 0x48E;
// bitfield macros
#define _CCDPC_CCDPC0_POSN                                  0x0
#define _CCDPC_CCDPC0_POSITION                              0x0
#define _CCDPC_CCDPC0_SIZE                                  0x1
#define _CCDPC_CCDPC0_LENGTH                                0x1
#define _CCDPC_CCDPC0_MASK                                  0x1
#define _CCDPC_CCDPC1_POSN                                  0x1
#define _CCDPC_CCDPC1_POSITION                              0x1
#define _CCDPC_CCDPC1_SIZE                                  0x1
#define _CCDPC_CCDPC1_LENGTH                                0x1
#define _CCDPC_CCDPC1_MASK                                  0x2
#define _CCDPC_CCDPC2_POSN                                  0x2
#define _CCDPC_CCDPC2_POSITION                              0x2
#define _CCDPC_CCDPC2_SIZE                                  0x1
#define _CCDPC_CCDPC2_LENGTH                                0x1
#define _CCDPC_CCDPC2_MASK                                  0x4
#define _CCDPC_CCDPC3_POSN                                  0x3
#define _CCDPC_CCDPC3_POSITION                              0x3
#define _CCDPC_CCDPC3_SIZE                                  0x1
#define _CCDPC_CCDPC3_LENGTH                                0x1
#define _CCDPC_CCDPC3_MASK                                  0x8
#define _CCDPC_CCDPC4_POSN                                  0x4
#define _CCDPC_CCDPC4_POSITION                              0x4
#define _CCDPC_CCDPC4_SIZE                                  0x1
#define _CCDPC_CCDPC4_LENGTH                                0x1
#define _CCDPC_CCDPC4_MASK                                  0x10
#define _CCDPC_CCDPC5_POSN                                  0x5
#define _CCDPC_CCDPC5_POSITION                              0x5
#define _CCDPC_CCDPC5_SIZE                                  0x1
#define _CCDPC_CCDPC5_LENGTH                                0x1
#define _CCDPC_CCDPC5_MASK                                  0x20

// Register: NCO1ACC
#ifndef __CCI__
extern volatile unsigned short long     NCO1ACC             @ 0x498;
#endif
#ifndef _LIB_BUILD
asm("NCO1ACC equ 0498h");
#endif

// Register: NCO1ACCL
extern volatile unsigned char           NCO1ACCL            @ 0x498;
#ifndef _LIB_BUILD
asm("NCO1ACCL equ 0498h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCO1ACC                :8;
    };
} NCO1ACCLbits_t;
extern volatile NCO1ACCLbits_t NCO1ACCLbits @ 0x498;
// bitfield macros
#define _NCO1ACCL_NCO1ACC_POSN                              0x0
#define _NCO1ACCL_NCO1ACC_POSITION                          0x0
#define _NCO1ACCL_NCO1ACC_SIZE                              0x8
#define _NCO1ACCL_NCO1ACC_LENGTH                            0x8
#define _NCO1ACCL_NCO1ACC_MASK                              0xFF

// Register: NCO1ACCH
extern volatile unsigned char           NCO1ACCH            @ 0x499;
#ifndef _LIB_BUILD
asm("NCO1ACCH equ 0499h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCO1ACC                :8;
    };
} NCO1ACCHbits_t;
extern volatile NCO1ACCHbits_t NCO1ACCHbits @ 0x499;
// bitfield macros
#define _NCO1ACCH_NCO1ACC_POSN                              0x0
#define _NCO1ACCH_NCO1ACC_POSITION                          0x0
#define _NCO1ACCH_NCO1ACC_SIZE                              0x8
#define _NCO1ACCH_NCO1ACC_LENGTH                            0x8
#define _NCO1ACCH_NCO1ACC_MASK                              0xFF

// Register: NCO1ACCU
extern volatile unsigned char           NCO1ACCU            @ 0x49A;
#ifndef _LIB_BUILD
asm("NCO1ACCU equ 049Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCO1ACC                :4;
    };
} NCO1ACCUbits_t;
extern volatile NCO1ACCUbits_t NCO1ACCUbits @ 0x49A;
// bitfield macros
#define _NCO1ACCU_NCO1ACC_POSN                              0x0
#define _NCO1ACCU_NCO1ACC_POSITION                          0x0
#define _NCO1ACCU_NCO1ACC_SIZE                              0x4
#define _NCO1ACCU_NCO1ACC_LENGTH                            0x4
#define _NCO1ACCU_NCO1ACC_MASK                              0xF

// Register: NCO1INC
#ifndef __CCI__
extern volatile unsigned short long     NCO1INC             @ 0x49B;
#endif
#ifndef _LIB_BUILD
asm("NCO1INC equ 049Bh");
#endif

// Register: NCO1INCL
extern volatile unsigned char           NCO1INCL            @ 0x49B;
#ifndef _LIB_BUILD
asm("NCO1INCL equ 049Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCO1INC                :8;
    };
} NCO1INCLbits_t;
extern volatile NCO1INCLbits_t NCO1INCLbits @ 0x49B;
// bitfield macros
#define _NCO1INCL_NCO1INC_POSN                              0x0
#define _NCO1INCL_NCO1INC_POSITION                          0x0
#define _NCO1INCL_NCO1INC_SIZE                              0x8
#define _NCO1INCL_NCO1INC_LENGTH                            0x8
#define _NCO1INCL_NCO1INC_MASK                              0xFF

// Register: NCO1INCH
extern volatile unsigned char           NCO1INCH            @ 0x49C;
#ifndef _LIB_BUILD
asm("NCO1INCH equ 049Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCO1INC                :8;
    };
} NCO1INCHbits_t;
extern volatile NCO1INCHbits_t NCO1INCHbits @ 0x49C;
// bitfield macros
#define _NCO1INCH_NCO1INC_POSN                              0x0
#define _NCO1INCH_NCO1INC_POSITION                          0x0
#define _NCO1INCH_NCO1INC_SIZE                              0x8
#define _NCO1INCH_NCO1INC_LENGTH                            0x8
#define _NCO1INCH_NCO1INC_MASK                              0xFF

// Register: NCO1INCU
extern volatile unsigned char           NCO1INCU            @ 0x49D;
#ifndef _LIB_BUILD
asm("NCO1INCU equ 049Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NCO1INC                :4;
    };
} NCO1INCUbits_t;
extern volatile NCO1INCUbits_t NCO1INCUbits @ 0x49D;
// bitfield macros
#define _NCO1INCU_NCO1INC_POSN                              0x0
#define _NCO1INCU_NCO1INC_POSITION                          0x0
#define _NCO1INCU_NCO1INC_SIZE                              0x4
#define _NCO1INCU_NCO1INC_LENGTH                            0x4
#define _NCO1INCU_NCO1INC_MASK                              0xF

// Register: NCO1CON
extern volatile unsigned char           NCO1CON             @ 0x49E;
#ifndef _LIB_BUILD
asm("NCO1CON equ 049Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned N1PFM                  :1;
        unsigned                        :3;
        unsigned N1POL                  :1;
        unsigned N1OUT                  :1;
        unsigned                        :1;
        unsigned N1EN                   :1;
    };
} NCO1CONbits_t;
extern volatile NCO1CONbits_t NCO1CONbits @ 0x49E;
// bitfield macros
#define _NCO1CON_N1PFM_POSN                                 0x0
#define _NCO1CON_N1PFM_POSITION                             0x0
#define _NCO1CON_N1PFM_SIZE                                 0x1
#define _NCO1CON_N1PFM_LENGTH                               0x1
#define _NCO1CON_N1PFM_MASK                                 0x1
#define _NCO1CON_N1POL_POSN                                 0x4
#define _NCO1CON_N1POL_POSITION                             0x4
#define _NCO1CON_N1POL_SIZE                                 0x1
#define _NCO1CON_N1POL_LENGTH                               0x1
#define _NCO1CON_N1POL_MASK                                 0x10
#define _NCO1CON_N1OUT_POSN                                 0x5
#define _NCO1CON_N1OUT_POSITION                             0x5
#define _NCO1CON_N1OUT_SIZE                                 0x1
#define _NCO1CON_N1OUT_LENGTH                               0x1
#define _NCO1CON_N1OUT_MASK                                 0x20
#define _NCO1CON_N1EN_POSN                                  0x7
#define _NCO1CON_N1EN_POSITION                              0x7
#define _NCO1CON_N1EN_SIZE                                  0x1
#define _NCO1CON_N1EN_LENGTH                                0x1
#define _NCO1CON_N1EN_MASK                                  0x80

// Register: NCO1CLK
extern volatile unsigned char           NCO1CLK             @ 0x49F;
#ifndef _LIB_BUILD
asm("NCO1CLK equ 049Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned N1CKS                  :2;
        unsigned                        :3;
        unsigned N1PWS                  :3;
    };
} NCO1CLKbits_t;
extern volatile NCO1CLKbits_t NCO1CLKbits @ 0x49F;
// bitfield macros
#define _NCO1CLK_N1CKS_POSN                                 0x0
#define _NCO1CLK_N1CKS_POSITION                             0x0
#define _NCO1CLK_N1CKS_SIZE                                 0x2
#define _NCO1CLK_N1CKS_LENGTH                               0x2
#define _NCO1CLK_N1CKS_MASK                                 0x3
#define _NCO1CLK_N1PWS_POSN                                 0x5
#define _NCO1CLK_N1PWS_POSITION                             0x5
#define _NCO1CLK_N1PWS_SIZE                                 0x3
#define _NCO1CLK_N1PWS_LENGTH                               0x3
#define _NCO1CLK_N1PWS_MASK                                 0xE0

// Register: PWM5DCL
extern volatile unsigned char           PWM5DCL             @ 0x617;
#ifndef _LIB_BUILD
asm("PWM5DCL equ 0617h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :6;
        unsigned PWM5DCL                :2;
    };
    struct {
        unsigned                        :6;
        unsigned PWM5DCL0               :1;
        unsigned PWM5DCL1               :1;
    };
} PWM5DCLbits_t;
extern volatile PWM5DCLbits_t PWM5DCLbits @ 0x617;
// bitfield macros
#define _PWM5DCL_PWM5DCL_POSN                               0x6
#define _PWM5DCL_PWM5DCL_POSITION                           0x6
#define _PWM5DCL_PWM5DCL_SIZE                               0x2
#define _PWM5DCL_PWM5DCL_LENGTH                             0x2
#define _PWM5DCL_PWM5DCL_MASK                               0xC0
#define _PWM5DCL_PWM5DCL0_POSN                              0x6
#define _PWM5DCL_PWM5DCL0_POSITION                          0x6
#define _PWM5DCL_PWM5DCL0_SIZE                              0x1
#define _PWM5DCL_PWM5DCL0_LENGTH                            0x1
#define _PWM5DCL_PWM5DCL0_MASK                              0x40
#define _PWM5DCL_PWM5DCL1_POSN                              0x7
#define _PWM5DCL_PWM5DCL1_POSITION                          0x7
#define _PWM5DCL_PWM5DCL1_SIZE                              0x1
#define _PWM5DCL_PWM5DCL1_LENGTH                            0x1
#define _PWM5DCL_PWM5DCL1_MASK                              0x80

// Register: PWM5DCH
extern volatile unsigned char           PWM5DCH             @ 0x618;
#ifndef _LIB_BUILD
asm("PWM5DCH equ 0618h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PWM5DCH                :8;
    };
    struct {
        unsigned PWM5DCH0               :1;
        unsigned PWM5DCH1               :1;
        unsigned PWM5DCH2               :1;
        unsigned PWM5DCH3               :1;
        unsigned PWM5DCH4               :1;
        unsigned PWM5DCH5               :1;
        unsigned PWM5DCH6               :1;
        unsigned PWM5DCH7               :1;
    };
} PWM5DCHbits_t;
extern volatile PWM5DCHbits_t PWM5DCHbits @ 0x618;
// bitfield macros
#define _PWM5DCH_PWM5DCH_POSN                               0x0
#define _PWM5DCH_PWM5DCH_POSITION                           0x0
#define _PWM5DCH_PWM5DCH_SIZE                               0x8
#define _PWM5DCH_PWM5DCH_LENGTH                             0x8
#define _PWM5DCH_PWM5DCH_MASK                               0xFF
#define _PWM5DCH_PWM5DCH0_POSN                              0x0
#define _PWM5DCH_PWM5DCH0_POSITION                          0x0
#define _PWM5DCH_PWM5DCH0_SIZE                              0x1
#define _PWM5DCH_PWM5DCH0_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH0_MASK                              0x1
#define _PWM5DCH_PWM5DCH1_POSN                              0x1
#define _PWM5DCH_PWM5DCH1_POSITION                          0x1
#define _PWM5DCH_PWM5DCH1_SIZE                              0x1
#define _PWM5DCH_PWM5DCH1_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH1_MASK                              0x2
#define _PWM5DCH_PWM5DCH2_POSN                              0x2
#define _PWM5DCH_PWM5DCH2_POSITION                          0x2
#define _PWM5DCH_PWM5DCH2_SIZE                              0x1
#define _PWM5DCH_PWM5DCH2_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH2_MASK                              0x4
#define _PWM5DCH_PWM5DCH3_POSN                              0x3
#define _PWM5DCH_PWM5DCH3_POSITION                          0x3
#define _PWM5DCH_PWM5DCH3_SIZE                              0x1
#define _PWM5DCH_PWM5DCH3_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH3_MASK                              0x8
#define _PWM5DCH_PWM5DCH4_POSN                              0x4
#define _PWM5DCH_PWM5DCH4_POSITION                          0x4
#define _PWM5DCH_PWM5DCH4_SIZE                              0x1
#define _PWM5DCH_PWM5DCH4_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH4_MASK                              0x10
#define _PWM5DCH_PWM5DCH5_POSN                              0x5
#define _PWM5DCH_PWM5DCH5_POSITION                          0x5
#define _PWM5DCH_PWM5DCH5_SIZE                              0x1
#define _PWM5DCH_PWM5DCH5_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH5_MASK                              0x20
#define _PWM5DCH_PWM5DCH6_POSN                              0x6
#define _PWM5DCH_PWM5DCH6_POSITION                          0x6
#define _PWM5DCH_PWM5DCH6_SIZE                              0x1
#define _PWM5DCH_PWM5DCH6_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH6_MASK                              0x40
#define _PWM5DCH_PWM5DCH7_POSN                              0x7
#define _PWM5DCH_PWM5DCH7_POSITION                          0x7
#define _PWM5DCH_PWM5DCH7_SIZE                              0x1
#define _PWM5DCH_PWM5DCH7_LENGTH                            0x1
#define _PWM5DCH_PWM5DCH7_MASK                              0x80

// Register: PWM5CON
extern volatile unsigned char           PWM5CON             @ 0x619;
#ifndef _LIB_BUILD
asm("PWM5CON equ 0619h");
#endif
// aliases
extern volatile unsigned char           PWM5CON0            @ 0x619;
#ifndef _LIB_BUILD
asm("PWM5CON0 equ 0619h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :4;
        unsigned PWM5POL                :1;
        unsigned PWM5OUT                :1;
        unsigned                        :1;
        unsigned PWM5EN                 :1;
    };
} PWM5CONbits_t;
extern volatile PWM5CONbits_t PWM5CONbits @ 0x619;
// bitfield macros
#define _PWM5CON_PWM5POL_POSN                               0x4
#define _PWM5CON_PWM5POL_POSITION                           0x4
#define _PWM5CON_PWM5POL_SIZE                               0x1
#define _PWM5CON_PWM5POL_LENGTH                             0x1
#define _PWM5CON_PWM5POL_MASK                               0x10
#define _PWM5CON_PWM5OUT_POSN                               0x5
#define _PWM5CON_PWM5OUT_POSITION                           0x5
#define _PWM5CON_PWM5OUT_SIZE                               0x1
#define _PWM5CON_PWM5OUT_LENGTH                             0x1
#define _PWM5CON_PWM5OUT_MASK                               0x20
#define _PWM5CON_PWM5EN_POSN                                0x7
#define _PWM5CON_PWM5EN_POSITION                            0x7
#define _PWM5CON_PWM5EN_SIZE                                0x1
#define _PWM5CON_PWM5EN_LENGTH                              0x1
#define _PWM5CON_PWM5EN_MASK                                0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned                        :4;
        unsigned PWM5POL                :1;
        unsigned PWM5OUT                :1;
        unsigned                        :1;
        unsigned PWM5EN                 :1;
    };
} PWM5CON0bits_t;
extern volatile PWM5CON0bits_t PWM5CON0bits @ 0x619;
// bitfield macros
#define _PWM5CON0_PWM5POL_POSN                              0x4
#define _PWM5CON0_PWM5POL_POSITION                          0x4
#define _PWM5CON0_PWM5POL_SIZE                              0x1
#define _PWM5CON0_PWM5POL_LENGTH                            0x1
#define _PWM5CON0_PWM5POL_MASK                              0x10
#define _PWM5CON0_PWM5OUT_POSN                              0x5
#define _PWM5CON0_PWM5OUT_POSITION                          0x5
#define _PWM5CON0_PWM5OUT_SIZE                              0x1
#define _PWM5CON0_PWM5OUT_LENGTH                            0x1
#define _PWM5CON0_PWM5OUT_MASK                              0x20
#define _PWM5CON0_PWM5EN_POSN                               0x7
#define _PWM5CON0_PWM5EN_POSITION                           0x7
#define _PWM5CON0_PWM5EN_SIZE                               0x1
#define _PWM5CON0_PWM5EN_LENGTH                             0x1
#define _PWM5CON0_PWM5EN_MASK                               0x80

// Register: PWM6DCL
extern volatile unsigned char           PWM6DCL             @ 0x61A;
#ifndef _LIB_BUILD
asm("PWM6DCL equ 061Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :6;
        unsigned PWM6DCL                :2;
    };
    struct {
        unsigned                        :6;
        unsigned PWM6DCL0               :1;
        unsigned PWM6DCL1               :1;
    };
} PWM6DCLbits_t;
extern volatile PWM6DCLbits_t PWM6DCLbits @ 0x61A;
// bitfield macros
#define _PWM6DCL_PWM6DCL_POSN                               0x6
#define _PWM6DCL_PWM6DCL_POSITION                           0x6
#define _PWM6DCL_PWM6DCL_SIZE                               0x2
#define _PWM6DCL_PWM6DCL_LENGTH                             0x2
#define _PWM6DCL_PWM6DCL_MASK                               0xC0
#define _PWM6DCL_PWM6DCL0_POSN                              0x6
#define _PWM6DCL_PWM6DCL0_POSITION                          0x6
#define _PWM6DCL_PWM6DCL0_SIZE                              0x1
#define _PWM6DCL_PWM6DCL0_LENGTH                            0x1
#define _PWM6DCL_PWM6DCL0_MASK                              0x40
#define _PWM6DCL_PWM6DCL1_POSN                              0x7
#define _PWM6DCL_PWM6DCL1_POSITION                          0x7
#define _PWM6DCL_PWM6DCL1_SIZE                              0x1
#define _PWM6DCL_PWM6DCL1_LENGTH                            0x1
#define _PWM6DCL_PWM6DCL1_MASK                              0x80

// Register: PWM6DCH
extern volatile unsigned char           PWM6DCH             @ 0x61B;
#ifndef _LIB_BUILD
asm("PWM6DCH equ 061Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PWM6DCH                :8;
    };
    struct {
        unsigned PWM6DCH0               :1;
        unsigned PWM6DCH1               :1;
        unsigned PWM6DCH2               :1;
        unsigned PWM6DCH3               :1;
        unsigned PWM6DCH4               :1;
        unsigned PWM6DCH5               :1;
        unsigned PWM6DCH6               :1;
        unsigned PWM6DCH7               :1;
    };
} PWM6DCHbits_t;
extern volatile PWM6DCHbits_t PWM6DCHbits @ 0x61B;
// bitfield macros
#define _PWM6DCH_PWM6DCH_POSN                               0x0
#define _PWM6DCH_PWM6DCH_POSITION                           0x0
#define _PWM6DCH_PWM6DCH_SIZE                               0x8
#define _PWM6DCH_PWM6DCH_LENGTH                             0x8
#define _PWM6DCH_PWM6DCH_MASK                               0xFF
#define _PWM6DCH_PWM6DCH0_POSN                              0x0
#define _PWM6DCH_PWM6DCH0_POSITION                          0x0
#define _PWM6DCH_PWM6DCH0_SIZE                              0x1
#define _PWM6DCH_PWM6DCH0_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH0_MASK                              0x1
#define _PWM6DCH_PWM6DCH1_POSN                              0x1
#define _PWM6DCH_PWM6DCH1_POSITION                          0x1
#define _PWM6DCH_PWM6DCH1_SIZE                              0x1
#define _PWM6DCH_PWM6DCH1_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH1_MASK                              0x2
#define _PWM6DCH_PWM6DCH2_POSN                              0x2
#define _PWM6DCH_PWM6DCH2_POSITION                          0x2
#define _PWM6DCH_PWM6DCH2_SIZE                              0x1
#define _PWM6DCH_PWM6DCH2_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH2_MASK                              0x4
#define _PWM6DCH_PWM6DCH3_POSN                              0x3
#define _PWM6DCH_PWM6DCH3_POSITION                          0x3
#define _PWM6DCH_PWM6DCH3_SIZE                              0x1
#define _PWM6DCH_PWM6DCH3_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH3_MASK                              0x8
#define _PWM6DCH_PWM6DCH4_POSN                              0x4
#define _PWM6DCH_PWM6DCH4_POSITION                          0x4
#define _PWM6DCH_PWM6DCH4_SIZE                              0x1
#define _PWM6DCH_PWM6DCH4_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH4_MASK                              0x10
#define _PWM6DCH_PWM6DCH5_POSN                              0x5
#define _PWM6DCH_PWM6DCH5_POSITION                          0x5
#define _PWM6DCH_PWM6DCH5_SIZE                              0x1
#define _PWM6DCH_PWM6DCH5_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH5_MASK                              0x20
#define _PWM6DCH_PWM6DCH6_POSN                              0x6
#define _PWM6DCH_PWM6DCH6_POSITION                          0x6
#define _PWM6DCH_PWM6DCH6_SIZE                              0x1
#define _PWM6DCH_PWM6DCH6_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH6_MASK                              0x40
#define _PWM6DCH_PWM6DCH7_POSN                              0x7
#define _PWM6DCH_PWM6DCH7_POSITION                          0x7
#define _PWM6DCH_PWM6DCH7_SIZE                              0x1
#define _PWM6DCH_PWM6DCH7_LENGTH                            0x1
#define _PWM6DCH_PWM6DCH7_MASK                              0x80

// Register: PWM6CON
extern volatile unsigned char           PWM6CON             @ 0x61C;
#ifndef _LIB_BUILD
asm("PWM6CON equ 061Ch");
#endif
// aliases
extern volatile unsigned char           PWM6CON0            @ 0x61C;
#ifndef _LIB_BUILD
asm("PWM6CON0 equ 061Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :4;
        unsigned PWM6POL                :1;
        unsigned PWM6OUT                :1;
        unsigned                        :1;
        unsigned PWM6EN                 :1;
    };
} PWM6CONbits_t;
extern volatile PWM6CONbits_t PWM6CONbits @ 0x61C;
// bitfield macros
#define _PWM6CON_PWM6POL_POSN                               0x4
#define _PWM6CON_PWM6POL_POSITION                           0x4
#define _PWM6CON_PWM6POL_SIZE                               0x1
#define _PWM6CON_PWM6POL_LENGTH                             0x1
#define _PWM6CON_PWM6POL_MASK                               0x10
#define _PWM6CON_PWM6OUT_POSN                               0x5
#define _PWM6CON_PWM6OUT_POSITION                           0x5
#define _PWM6CON_PWM6OUT_SIZE                               0x1
#define _PWM6CON_PWM6OUT_LENGTH                             0x1
#define _PWM6CON_PWM6OUT_MASK                               0x20
#define _PWM6CON_PWM6EN_POSN                                0x7
#define _PWM6CON_PWM6EN_POSITION                            0x7
#define _PWM6CON_PWM6EN_SIZE                                0x1
#define _PWM6CON_PWM6EN_LENGTH                              0x1
#define _PWM6CON_PWM6EN_MASK                                0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned                        :4;
        unsigned PWM6POL                :1;
        unsigned PWM6OUT                :1;
        unsigned                        :1;
        unsigned PWM6EN                 :1;
    };
} PWM6CON0bits_t;
extern volatile PWM6CON0bits_t PWM6CON0bits @ 0x61C;
// bitfield macros
#define _PWM6CON0_PWM6POL_POSN                              0x4
#define _PWM6CON0_PWM6POL_POSITION                          0x4
#define _PWM6CON0_PWM6POL_SIZE                              0x1
#define _PWM6CON0_PWM6POL_LENGTH                            0x1
#define _PWM6CON0_PWM6POL_MASK                              0x10
#define _PWM6CON0_PWM6OUT_POSN                              0x5
#define _PWM6CON0_PWM6OUT_POSITION                          0x5
#define _PWM6CON0_PWM6OUT_SIZE                              0x1
#define _PWM6CON0_PWM6OUT_LENGTH                            0x1
#define _PWM6CON0_PWM6OUT_MASK                              0x20
#define _PWM6CON0_PWM6EN_POSN                               0x7
#define _PWM6CON0_PWM6EN_POSITION                           0x7
#define _PWM6CON0_PWM6EN_SIZE                               0x1
#define _PWM6CON0_PWM6EN_LENGTH                             0x1
#define _PWM6CON0_PWM6EN_MASK                               0x80

// Register: PWMTMRS
extern volatile unsigned char           PWMTMRS             @ 0x61F;
#ifndef _LIB_BUILD
asm("PWMTMRS equ 061Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned P5TSEL                 :2;
        unsigned P6TSEL                 :2;
    };
    struct {
        unsigned P5TSEL0                :1;
        unsigned P5TSEL1                :1;
        unsigned P6TSEL0                :1;
        unsigned P6TSEL1                :1;
    };
} PWMTMRSbits_t;
extern volatile PWMTMRSbits_t PWMTMRSbits @ 0x61F;
// bitfield macros
#define _PWMTMRS_P5TSEL_POSN                                0x0
#define _PWMTMRS_P5TSEL_POSITION                            0x0
#define _PWMTMRS_P5TSEL_SIZE                                0x2
#define _PWMTMRS_P5TSEL_LENGTH                              0x2
#define _PWMTMRS_P5TSEL_MASK                                0x3
#define _PWMTMRS_P6TSEL_POSN                                0x2
#define _PWMTMRS_P6TSEL_POSITION                            0x2
#define _PWMTMRS_P6TSEL_SIZE                                0x2
#define _PWMTMRS_P6TSEL_LENGTH                              0x2
#define _PWMTMRS_P6TSEL_MASK                                0xC
#define _PWMTMRS_P5TSEL0_POSN                               0x0
#define _PWMTMRS_P5TSEL0_POSITION                           0x0
#define _PWMTMRS_P5TSEL0_SIZE                               0x1
#define _PWMTMRS_P5TSEL0_LENGTH                             0x1
#define _PWMTMRS_P5TSEL0_MASK                               0x1
#define _PWMTMRS_P5TSEL1_POSN                               0x1
#define _PWMTMRS_P5TSEL1_POSITION                           0x1
#define _PWMTMRS_P5TSEL1_SIZE                               0x1
#define _PWMTMRS_P5TSEL1_LENGTH                             0x1
#define _PWMTMRS_P5TSEL1_MASK                               0x2
#define _PWMTMRS_P6TSEL0_POSN                               0x2
#define _PWMTMRS_P6TSEL0_POSITION                           0x2
#define _PWMTMRS_P6TSEL0_SIZE                               0x1
#define _PWMTMRS_P6TSEL0_LENGTH                             0x1
#define _PWMTMRS_P6TSEL0_MASK                               0x4
#define _PWMTMRS_P6TSEL1_POSN                               0x3
#define _PWMTMRS_P6TSEL1_POSITION                           0x3
#define _PWMTMRS_P6TSEL1_SIZE                               0x1
#define _PWMTMRS_P6TSEL1_LENGTH                             0x1
#define _PWMTMRS_P6TSEL1_MASK                               0x8

// Register: CWG1CLKCON
extern volatile unsigned char           CWG1CLKCON          @ 0x691;
#ifndef _LIB_BUILD
asm("CWG1CLKCON equ 0691h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CS                     :1;
    };
    struct {
        unsigned CWG1CS                 :1;
    };
} CWG1CLKCONbits_t;
extern volatile CWG1CLKCONbits_t CWG1CLKCONbits @ 0x691;
// bitfield macros
#define _CWG1CLKCON_CS_POSN                                 0x0
#define _CWG1CLKCON_CS_POSITION                             0x0
#define _CWG1CLKCON_CS_SIZE                                 0x1
#define _CWG1CLKCON_CS_LENGTH                               0x1
#define _CWG1CLKCON_CS_MASK                                 0x1
#define _CWG1CLKCON_CWG1CS_POSN                             0x0
#define _CWG1CLKCON_CWG1CS_POSITION                         0x0
#define _CWG1CLKCON_CWG1CS_SIZE                             0x1
#define _CWG1CLKCON_CWG1CS_LENGTH                           0x1
#define _CWG1CLKCON_CWG1CS_MASK                             0x1

// Register: CWG1DAT
extern volatile unsigned char           CWG1DAT             @ 0x692;
#ifndef _LIB_BUILD
asm("CWG1DAT equ 0692h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DAT                    :4;
    };
    struct {
        unsigned CWG1DAT0               :1;
        unsigned CWG1DAT1               :1;
        unsigned CWG1DAT2               :1;
        unsigned CWG1DAT3               :1;
    };
} CWG1DATbits_t;
extern volatile CWG1DATbits_t CWG1DATbits @ 0x692;
// bitfield macros
#define _CWG1DAT_DAT_POSN                                   0x0
#define _CWG1DAT_DAT_POSITION                               0x0
#define _CWG1DAT_DAT_SIZE                                   0x4
#define _CWG1DAT_DAT_LENGTH                                 0x4
#define _CWG1DAT_DAT_MASK                                   0xF
#define _CWG1DAT_CWG1DAT0_POSN                              0x0
#define _CWG1DAT_CWG1DAT0_POSITION                          0x0
#define _CWG1DAT_CWG1DAT0_SIZE                              0x1
#define _CWG1DAT_CWG1DAT0_LENGTH                            0x1
#define _CWG1DAT_CWG1DAT0_MASK                              0x1
#define _CWG1DAT_CWG1DAT1_POSN                              0x1
#define _CWG1DAT_CWG1DAT1_POSITION                          0x1
#define _CWG1DAT_CWG1DAT1_SIZE                              0x1
#define _CWG1DAT_CWG1DAT1_LENGTH                            0x1
#define _CWG1DAT_CWG1DAT1_MASK                              0x2
#define _CWG1DAT_CWG1DAT2_POSN                              0x2
#define _CWG1DAT_CWG1DAT2_POSITION                          0x2
#define _CWG1DAT_CWG1DAT2_SIZE                              0x1
#define _CWG1DAT_CWG1DAT2_LENGTH                            0x1
#define _CWG1DAT_CWG1DAT2_MASK                              0x4
#define _CWG1DAT_CWG1DAT3_POSN                              0x3
#define _CWG1DAT_CWG1DAT3_POSITION                          0x3
#define _CWG1DAT_CWG1DAT3_SIZE                              0x1
#define _CWG1DAT_CWG1DAT3_LENGTH                            0x1
#define _CWG1DAT_CWG1DAT3_MASK                              0x8

// Register: CWG1DBR
extern volatile unsigned char           CWG1DBR             @ 0x693;
#ifndef _LIB_BUILD
asm("CWG1DBR equ 0693h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DBR                    :6;
    };
    struct {
        unsigned DBR0                   :1;
        unsigned DBR1                   :1;
        unsigned DBR2                   :1;
        unsigned DBR3                   :1;
        unsigned DBR4                   :1;
        unsigned DBR5                   :1;
    };
    struct {
        unsigned CWG1DBR                :6;
    };
    struct {
        unsigned CWG1DBR0               :1;
        unsigned CWG1DBR1               :1;
        unsigned CWG1DBR2               :1;
        unsigned CWG1DBR3               :1;
        unsigned CWG1DBR4               :1;
        unsigned CWG1DBR5               :1;
    };
} CWG1DBRbits_t;
extern volatile CWG1DBRbits_t CWG1DBRbits @ 0x693;
// bitfield macros
#define _CWG1DBR_DBR_POSN                                   0x0
#define _CWG1DBR_DBR_POSITION                               0x0
#define _CWG1DBR_DBR_SIZE                                   0x6
#define _CWG1DBR_DBR_LENGTH                                 0x6
#define _CWG1DBR_DBR_MASK                                   0x3F
#define _CWG1DBR_DBR0_POSN                                  0x0
#define _CWG1DBR_DBR0_POSITION                              0x0
#define _CWG1DBR_DBR0_SIZE                                  0x1
#define _CWG1DBR_DBR0_LENGTH                                0x1
#define _CWG1DBR_DBR0_MASK                                  0x1
#define _CWG1DBR_DBR1_POSN                                  0x1
#define _CWG1DBR_DBR1_POSITION                              0x1
#define _CWG1DBR_DBR1_SIZE                                  0x1
#define _CWG1DBR_DBR1_LENGTH                                0x1
#define _CWG1DBR_DBR1_MASK                                  0x2
#define _CWG1DBR_DBR2_POSN                                  0x2
#define _CWG1DBR_DBR2_POSITION                              0x2
#define _CWG1DBR_DBR2_SIZE                                  0x1
#define _CWG1DBR_DBR2_LENGTH                                0x1
#define _CWG1DBR_DBR2_MASK                                  0x4
#define _CWG1DBR_DBR3_POSN                                  0x3
#define _CWG1DBR_DBR3_POSITION                              0x3
#define _CWG1DBR_DBR3_SIZE                                  0x1
#define _CWG1DBR_DBR3_LENGTH                                0x1
#define _CWG1DBR_DBR3_MASK                                  0x8
#define _CWG1DBR_DBR4_POSN                                  0x4
#define _CWG1DBR_DBR4_POSITION                              0x4
#define _CWG1DBR_DBR4_SIZE                                  0x1
#define _CWG1DBR_DBR4_LENGTH                                0x1
#define _CWG1DBR_DBR4_MASK                                  0x10
#define _CWG1DBR_DBR5_POSN                                  0x5
#define _CWG1DBR_DBR5_POSITION                              0x5
#define _CWG1DBR_DBR5_SIZE                                  0x1
#define _CWG1DBR_DBR5_LENGTH                                0x1
#define _CWG1DBR_DBR5_MASK                                  0x20
#define _CWG1DBR_CWG1DBR_POSN                               0x0
#define _CWG1DBR_CWG1DBR_POSITION                           0x0
#define _CWG1DBR_CWG1DBR_SIZE                               0x6
#define _CWG1DBR_CWG1DBR_LENGTH                             0x6
#define _CWG1DBR_CWG1DBR_MASK                               0x3F
#define _CWG1DBR_CWG1DBR0_POSN                              0x0
#define _CWG1DBR_CWG1DBR0_POSITION                          0x0
#define _CWG1DBR_CWG1DBR0_SIZE                              0x1
#define _CWG1DBR_CWG1DBR0_LENGTH                            0x1
#define _CWG1DBR_CWG1DBR0_MASK                              0x1
#define _CWG1DBR_CWG1DBR1_POSN                              0x1
#define _CWG1DBR_CWG1DBR1_POSITION                          0x1
#define _CWG1DBR_CWG1DBR1_SIZE                              0x1
#define _CWG1DBR_CWG1DBR1_LENGTH                            0x1
#define _CWG1DBR_CWG1DBR1_MASK                              0x2
#define _CWG1DBR_CWG1DBR2_POSN                              0x2
#define _CWG1DBR_CWG1DBR2_POSITION                          0x2
#define _CWG1DBR_CWG1DBR2_SIZE                              0x1
#define _CWG1DBR_CWG1DBR2_LENGTH                            0x1
#define _CWG1DBR_CWG1DBR2_MASK                              0x4
#define _CWG1DBR_CWG1DBR3_POSN                              0x3
#define _CWG1DBR_CWG1DBR3_POSITION                          0x3
#define _CWG1DBR_CWG1DBR3_SIZE                              0x1
#define _CWG1DBR_CWG1DBR3_LENGTH                            0x1
#define _CWG1DBR_CWG1DBR3_MASK                              0x8
#define _CWG1DBR_CWG1DBR4_POSN                              0x4
#define _CWG1DBR_CWG1DBR4_POSITION                          0x4
#define _CWG1DBR_CWG1DBR4_SIZE                              0x1
#define _CWG1DBR_CWG1DBR4_LENGTH                            0x1
#define _CWG1DBR_CWG1DBR4_MASK                              0x10
#define _CWG1DBR_CWG1DBR5_POSN                              0x5
#define _CWG1DBR_CWG1DBR5_POSITION                          0x5
#define _CWG1DBR_CWG1DBR5_SIZE                              0x1
#define _CWG1DBR_CWG1DBR5_LENGTH                            0x1
#define _CWG1DBR_CWG1DBR5_MASK                              0x20

// Register: CWG1DBF
extern volatile unsigned char           CWG1DBF             @ 0x694;
#ifndef _LIB_BUILD
asm("CWG1DBF equ 0694h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DBF                    :6;
    };
    struct {
        unsigned DBF0                   :1;
        unsigned DBF1                   :1;
        unsigned DBF2                   :1;
        unsigned DBF3                   :1;
        unsigned DBF4                   :1;
        unsigned DBF5                   :1;
    };
    struct {
        unsigned CWG1DBF                :6;
    };
    struct {
        unsigned CWG1DBF0               :1;
        unsigned CWG1DBF1               :1;
        unsigned CWG1DBF2               :1;
        unsigned CWG1DBF3               :1;
        unsigned CWG1DBF4               :1;
        unsigned CWG1DBF5               :1;
    };
} CWG1DBFbits_t;
extern volatile CWG1DBFbits_t CWG1DBFbits @ 0x694;
// bitfield macros
#define _CWG1DBF_DBF_POSN                                   0x0
#define _CWG1DBF_DBF_POSITION                               0x0
#define _CWG1DBF_DBF_SIZE                                   0x6
#define _CWG1DBF_DBF_LENGTH                                 0x6
#define _CWG1DBF_DBF_MASK                                   0x3F
#define _CWG1DBF_DBF0_POSN                                  0x0
#define _CWG1DBF_DBF0_POSITION                              0x0
#define _CWG1DBF_DBF0_SIZE                                  0x1
#define _CWG1DBF_DBF0_LENGTH                                0x1
#define _CWG1DBF_DBF0_MASK                                  0x1
#define _CWG1DBF_DBF1_POSN                                  0x1
#define _CWG1DBF_DBF1_POSITION                              0x1
#define _CWG1DBF_DBF1_SIZE                                  0x1
#define _CWG1DBF_DBF1_LENGTH                                0x1
#define _CWG1DBF_DBF1_MASK                                  0x2
#define _CWG1DBF_DBF2_POSN                                  0x2
#define _CWG1DBF_DBF2_POSITION                              0x2
#define _CWG1DBF_DBF2_SIZE                                  0x1
#define _CWG1DBF_DBF2_LENGTH                                0x1
#define _CWG1DBF_DBF2_MASK                                  0x4
#define _CWG1DBF_DBF3_POSN                                  0x3
#define _CWG1DBF_DBF3_POSITION                              0x3
#define _CWG1DBF_DBF3_SIZE                                  0x1
#define _CWG1DBF_DBF3_LENGTH                                0x1
#define _CWG1DBF_DBF3_MASK                                  0x8
#define _CWG1DBF_DBF4_POSN                                  0x4
#define _CWG1DBF_DBF4_POSITION                              0x4
#define _CWG1DBF_DBF4_SIZE                                  0x1
#define _CWG1DBF_DBF4_LENGTH                                0x1
#define _CWG1DBF_DBF4_MASK                                  0x10
#define _CWG1DBF_DBF5_POSN                                  0x5
#define _CWG1DBF_DBF5_POSITION                              0x5
#define _CWG1DBF_DBF5_SIZE                                  0x1
#define _CWG1DBF_DBF5_LENGTH                                0x1
#define _CWG1DBF_DBF5_MASK                                  0x20
#define _CWG1DBF_CWG1DBF_POSN                               0x0
#define _CWG1DBF_CWG1DBF_POSITION                           0x0
#define _CWG1DBF_CWG1DBF_SIZE                               0x6
#define _CWG1DBF_CWG1DBF_LENGTH                             0x6
#define _CWG1DBF_CWG1DBF_MASK                               0x3F
#define _CWG1DBF_CWG1DBF0_POSN                              0x0
#define _CWG1DBF_CWG1DBF0_POSITION                          0x0
#define _CWG1DBF_CWG1DBF0_SIZE                              0x1
#define _CWG1DBF_CWG1DBF0_LENGTH                            0x1
#define _CWG1DBF_CWG1DBF0_MASK                              0x1
#define _CWG1DBF_CWG1DBF1_POSN                              0x1
#define _CWG1DBF_CWG1DBF1_POSITION                          0x1
#define _CWG1DBF_CWG1DBF1_SIZE                              0x1
#define _CWG1DBF_CWG1DBF1_LENGTH                            0x1
#define _CWG1DBF_CWG1DBF1_MASK                              0x2
#define _CWG1DBF_CWG1DBF2_POSN                              0x2
#define _CWG1DBF_CWG1DBF2_POSITION                          0x2
#define _CWG1DBF_CWG1DBF2_SIZE                              0x1
#define _CWG1DBF_CWG1DBF2_LENGTH                            0x1
#define _CWG1DBF_CWG1DBF2_MASK                              0x4
#define _CWG1DBF_CWG1DBF3_POSN                              0x3
#define _CWG1DBF_CWG1DBF3_POSITION                          0x3
#define _CWG1DBF_CWG1DBF3_SIZE                              0x1
#define _CWG1DBF_CWG1DBF3_LENGTH                            0x1
#define _CWG1DBF_CWG1DBF3_MASK                              0x8
#define _CWG1DBF_CWG1DBF4_POSN                              0x4
#define _CWG1DBF_CWG1DBF4_POSITION                          0x4
#define _CWG1DBF_CWG1DBF4_SIZE                              0x1
#define _CWG1DBF_CWG1DBF4_LENGTH                            0x1
#define _CWG1DBF_CWG1DBF4_MASK                              0x10
#define _CWG1DBF_CWG1DBF5_POSN                              0x5
#define _CWG1DBF_CWG1DBF5_POSITION                          0x5
#define _CWG1DBF_CWG1DBF5_SIZE                              0x1
#define _CWG1DBF_CWG1DBF5_LENGTH                            0x1
#define _CWG1DBF_CWG1DBF5_MASK                              0x20

// Register: CWG1CON0
extern volatile unsigned char           CWG1CON0            @ 0x695;
#ifndef _LIB_BUILD
asm("CWG1CON0 equ 0695h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MODE                   :3;
        unsigned                        :3;
        unsigned LD                     :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
        unsigned                        :4;
        unsigned G1EN                   :1;
    };
    struct {
        unsigned CWG1MODE               :3;
        unsigned                        :3;
        unsigned CWG1LD                 :1;
        unsigned CWG1EN                 :1;
    };
    struct {
        unsigned CWG1MODE0              :1;
        unsigned CWG1MODE1              :1;
        unsigned CWG1MODE2              :1;
    };
} CWG1CON0bits_t;
extern volatile CWG1CON0bits_t CWG1CON0bits @ 0x695;
// bitfield macros
#define _CWG1CON0_MODE_POSN                                 0x0
#define _CWG1CON0_MODE_POSITION                             0x0
#define _CWG1CON0_MODE_SIZE                                 0x3
#define _CWG1CON0_MODE_LENGTH                               0x3
#define _CWG1CON0_MODE_MASK                                 0x7
#define _CWG1CON0_LD_POSN                                   0x6
#define _CWG1CON0_LD_POSITION                               0x6
#define _CWG1CON0_LD_SIZE                                   0x1
#define _CWG1CON0_LD_LENGTH                                 0x1
#define _CWG1CON0_LD_MASK                                   0x40
#define _CWG1CON0_EN_POSN                                   0x7
#define _CWG1CON0_EN_POSITION                               0x7
#define _CWG1CON0_EN_SIZE                                   0x1
#define _CWG1CON0_EN_LENGTH                                 0x1
#define _CWG1CON0_EN_MASK                                   0x80
#define _CWG1CON0_MODE0_POSN                                0x0
#define _CWG1CON0_MODE0_POSITION                            0x0
#define _CWG1CON0_MODE0_SIZE                                0x1
#define _CWG1CON0_MODE0_LENGTH                              0x1
#define _CWG1CON0_MODE0_MASK                                0x1
#define _CWG1CON0_MODE1_POSN                                0x1
#define _CWG1CON0_MODE1_POSITION                            0x1
#define _CWG1CON0_MODE1_SIZE                                0x1
#define _CWG1CON0_MODE1_LENGTH                              0x1
#define _CWG1CON0_MODE1_MASK                                0x2
#define _CWG1CON0_MODE2_POSN                                0x2
#define _CWG1CON0_MODE2_POSITION                            0x2
#define _CWG1CON0_MODE2_SIZE                                0x1
#define _CWG1CON0_MODE2_LENGTH                              0x1
#define _CWG1CON0_MODE2_MASK                                0x4
#define _CWG1CON0_G1EN_POSN                                 0x7
#define _CWG1CON0_G1EN_POSITION                             0x7
#define _CWG1CON0_G1EN_SIZE                                 0x1
#define _CWG1CON0_G1EN_LENGTH                               0x1
#define _CWG1CON0_G1EN_MASK                                 0x80
#define _CWG1CON0_CWG1MODE_POSN                             0x0
#define _CWG1CON0_CWG1MODE_POSITION                         0x0
#define _CWG1CON0_CWG1MODE_SIZE                             0x3
#define _CWG1CON0_CWG1MODE_LENGTH                           0x3
#define _CWG1CON0_CWG1MODE_MASK                             0x7
#define _CWG1CON0_CWG1LD_POSN                               0x6
#define _CWG1CON0_CWG1LD_POSITION                           0x6
#define _CWG1CON0_CWG1LD_SIZE                               0x1
#define _CWG1CON0_CWG1LD_LENGTH                             0x1
#define _CWG1CON0_CWG1LD_MASK                               0x40
#define _CWG1CON0_CWG1EN_POSN                               0x7
#define _CWG1CON0_CWG1EN_POSITION                           0x7
#define _CWG1CON0_CWG1EN_SIZE                               0x1
#define _CWG1CON0_CWG1EN_LENGTH                             0x1
#define _CWG1CON0_CWG1EN_MASK                               0x80
#define _CWG1CON0_CWG1MODE0_POSN                            0x0
#define _CWG1CON0_CWG1MODE0_POSITION                        0x0
#define _CWG1CON0_CWG1MODE0_SIZE                            0x1
#define _CWG1CON0_CWG1MODE0_LENGTH                          0x1
#define _CWG1CON0_CWG1MODE0_MASK                            0x1
#define _CWG1CON0_CWG1MODE1_POSN                            0x1
#define _CWG1CON0_CWG1MODE1_POSITION                        0x1
#define _CWG1CON0_CWG1MODE1_SIZE                            0x1
#define _CWG1CON0_CWG1MODE1_LENGTH                          0x1
#define _CWG1CON0_CWG1MODE1_MASK                            0x2
#define _CWG1CON0_CWG1MODE2_POSN                            0x2
#define _CWG1CON0_CWG1MODE2_POSITION                        0x2
#define _CWG1CON0_CWG1MODE2_SIZE                            0x1
#define _CWG1CON0_CWG1MODE2_LENGTH                          0x1
#define _CWG1CON0_CWG1MODE2_MASK                            0x4

// Register: CWG1CON1
extern volatile unsigned char           CWG1CON1            @ 0x696;
#ifndef _LIB_BUILD
asm("CWG1CON1 equ 0696h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POLA                   :1;
        unsigned POLB                   :1;
        unsigned POLC                   :1;
        unsigned POLD                   :1;
        unsigned                        :1;
        unsigned IN                     :1;
    };
    struct {
        unsigned CWG1POLA               :1;
        unsigned CWG1POLB               :1;
        unsigned CWG1POLC               :1;
        unsigned CWG1POLD               :1;
        unsigned                        :1;
        unsigned CWG1IN                 :1;
    };
} CWG1CON1bits_t;
extern volatile CWG1CON1bits_t CWG1CON1bits @ 0x696;
// bitfield macros
#define _CWG1CON1_POLA_POSN                                 0x0
#define _CWG1CON1_POLA_POSITION                             0x0
#define _CWG1CON1_POLA_SIZE                                 0x1
#define _CWG1CON1_POLA_LENGTH                               0x1
#define _CWG1CON1_POLA_MASK                                 0x1
#define _CWG1CON1_POLB_POSN                                 0x1
#define _CWG1CON1_POLB_POSITION                             0x1
#define _CWG1CON1_POLB_SIZE                                 0x1
#define _CWG1CON1_POLB_LENGTH                               0x1
#define _CWG1CON1_POLB_MASK                                 0x2
#define _CWG1CON1_POLC_POSN                                 0x2
#define _CWG1CON1_POLC_POSITION                             0x2
#define _CWG1CON1_POLC_SIZE                                 0x1
#define _CWG1CON1_POLC_LENGTH                               0x1
#define _CWG1CON1_POLC_MASK                                 0x4
#define _CWG1CON1_POLD_POSN                                 0x3
#define _CWG1CON1_POLD_POSITION                             0x3
#define _CWG1CON1_POLD_SIZE                                 0x1
#define _CWG1CON1_POLD_LENGTH                               0x1
#define _CWG1CON1_POLD_MASK                                 0x8
#define _CWG1CON1_IN_POSN                                   0x5
#define _CWG1CON1_IN_POSITION                               0x5
#define _CWG1CON1_IN_SIZE                                   0x1
#define _CWG1CON1_IN_LENGTH                                 0x1
#define _CWG1CON1_IN_MASK                                   0x20
#define _CWG1CON1_CWG1POLA_POSN                             0x0
#define _CWG1CON1_CWG1POLA_POSITION                         0x0
#define _CWG1CON1_CWG1POLA_SIZE                             0x1
#define _CWG1CON1_CWG1POLA_LENGTH                           0x1
#define _CWG1CON1_CWG1POLA_MASK                             0x1
#define _CWG1CON1_CWG1POLB_POSN                             0x1
#define _CWG1CON1_CWG1POLB_POSITION                         0x1
#define _CWG1CON1_CWG1POLB_SIZE                             0x1
#define _CWG1CON1_CWG1POLB_LENGTH                           0x1
#define _CWG1CON1_CWG1POLB_MASK                             0x2
#define _CWG1CON1_CWG1POLC_POSN                             0x2
#define _CWG1CON1_CWG1POLC_POSITION                         0x2
#define _CWG1CON1_CWG1POLC_SIZE                             0x1
#define _CWG1CON1_CWG1POLC_LENGTH                           0x1
#define _CWG1CON1_CWG1POLC_MASK                             0x4
#define _CWG1CON1_CWG1POLD_POSN                             0x3
#define _CWG1CON1_CWG1POLD_POSITION                         0x3
#define _CWG1CON1_CWG1POLD_SIZE                             0x1
#define _CWG1CON1_CWG1POLD_LENGTH                           0x1
#define _CWG1CON1_CWG1POLD_MASK                             0x8
#define _CWG1CON1_CWG1IN_POSN                               0x5
#define _CWG1CON1_CWG1IN_POSITION                           0x5
#define _CWG1CON1_CWG1IN_SIZE                               0x1
#define _CWG1CON1_CWG1IN_LENGTH                             0x1
#define _CWG1CON1_CWG1IN_MASK                               0x20

// Register: CWG1AS0
extern volatile unsigned char           CWG1AS0             @ 0x697;
#ifndef _LIB_BUILD
asm("CWG1AS0 equ 0697h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned LSAC                   :2;
        unsigned LSBD                   :2;
        unsigned REN                    :1;
        unsigned SHUTDOWN               :1;
    };
    struct {
        unsigned                        :2;
        unsigned LSAC0                  :1;
        unsigned LSAC1                  :1;
        unsigned LSBD0                  :1;
        unsigned LSBD1                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned CWG1LSAC               :2;
        unsigned CWG1LSBD               :2;
        unsigned CWG1REN                :1;
        unsigned CWG1SHUTDOWN           :1;
    };
    struct {
        unsigned                        :2;
        unsigned CWG1LSAC0              :1;
        unsigned CWG1LSAC1              :1;
        unsigned CWG1LSBD0              :1;
        unsigned CWG1LSBD1              :1;
    };
} CWG1AS0bits_t;
extern volatile CWG1AS0bits_t CWG1AS0bits @ 0x697;
// bitfield macros
#define _CWG1AS0_LSAC_POSN                                  0x2
#define _CWG1AS0_LSAC_POSITION                              0x2
#define _CWG1AS0_LSAC_SIZE                                  0x2
#define _CWG1AS0_LSAC_LENGTH                                0x2
#define _CWG1AS0_LSAC_MASK                                  0xC
#define _CWG1AS0_LSBD_POSN                                  0x4
#define _CWG1AS0_LSBD_POSITION                              0x4
#define _CWG1AS0_LSBD_SIZE                                  0x2
#define _CWG1AS0_LSBD_LENGTH                                0x2
#define _CWG1AS0_LSBD_MASK                                  0x30
#define _CWG1AS0_REN_POSN                                   0x6
#define _CWG1AS0_REN_POSITION                               0x6
#define _CWG1AS0_REN_SIZE                                   0x1
#define _CWG1AS0_REN_LENGTH                                 0x1
#define _CWG1AS0_REN_MASK                                   0x40
#define _CWG1AS0_SHUTDOWN_POSN                              0x7
#define _CWG1AS0_SHUTDOWN_POSITION                          0x7
#define _CWG1AS0_SHUTDOWN_SIZE                              0x1
#define _CWG1AS0_SHUTDOWN_LENGTH                            0x1
#define _CWG1AS0_SHUTDOWN_MASK                              0x80
#define _CWG1AS0_LSAC0_POSN                                 0x2
#define _CWG1AS0_LSAC0_POSITION                             0x2
#define _CWG1AS0_LSAC0_SIZE                                 0x1
#define _CWG1AS0_LSAC0_LENGTH                               0x1
#define _CWG1AS0_LSAC0_MASK                                 0x4
#define _CWG1AS0_LSAC1_POSN                                 0x3
#define _CWG1AS0_LSAC1_POSITION                             0x3
#define _CWG1AS0_LSAC1_SIZE                                 0x1
#define _CWG1AS0_LSAC1_LENGTH                               0x1
#define _CWG1AS0_LSAC1_MASK                                 0x8
#define _CWG1AS0_LSBD0_POSN                                 0x4
#define _CWG1AS0_LSBD0_POSITION                             0x4
#define _CWG1AS0_LSBD0_SIZE                                 0x1
#define _CWG1AS0_LSBD0_LENGTH                               0x1
#define _CWG1AS0_LSBD0_MASK                                 0x10
#define _CWG1AS0_LSBD1_POSN                                 0x5
#define _CWG1AS0_LSBD1_POSITION                             0x5
#define _CWG1AS0_LSBD1_SIZE                                 0x1
#define _CWG1AS0_LSBD1_LENGTH                               0x1
#define _CWG1AS0_LSBD1_MASK                                 0x20
#define _CWG1AS0_CWG1LSAC_POSN                              0x2
#define _CWG1AS0_CWG1LSAC_POSITION                          0x2
#define _CWG1AS0_CWG1LSAC_SIZE                              0x2
#define _CWG1AS0_CWG1LSAC_LENGTH                            0x2
#define _CWG1AS0_CWG1LSAC_MASK                              0xC
#define _CWG1AS0_CWG1LSBD_POSN                              0x4
#define _CWG1AS0_CWG1LSBD_POSITION                          0x4
#define _CWG1AS0_CWG1LSBD_SIZE                              0x2
#define _CWG1AS0_CWG1LSBD_LENGTH                            0x2
#define _CWG1AS0_CWG1LSBD_MASK                              0x30
#define _CWG1AS0_CWG1REN_POSN                               0x6
#define _CWG1AS0_CWG1REN_POSITION                           0x6
#define _CWG1AS0_CWG1REN_SIZE                               0x1
#define _CWG1AS0_CWG1REN_LENGTH                             0x1
#define _CWG1AS0_CWG1REN_MASK                               0x40
#define _CWG1AS0_CWG1SHUTDOWN_POSN                          0x7
#define _CWG1AS0_CWG1SHUTDOWN_POSITION                      0x7
#define _CWG1AS0_CWG1SHUTDOWN_SIZE                          0x1
#define _CWG1AS0_CWG1SHUTDOWN_LENGTH                        0x1
#define _CWG1AS0_CWG1SHUTDOWN_MASK                          0x80
#define _CWG1AS0_CWG1LSAC0_POSN                             0x2
#define _CWG1AS0_CWG1LSAC0_POSITION                         0x2
#define _CWG1AS0_CWG1LSAC0_SIZE                             0x1
#define _CWG1AS0_CWG1LSAC0_LENGTH                           0x1
#define _CWG1AS0_CWG1LSAC0_MASK                             0x4
#define _CWG1AS0_CWG1LSAC1_POSN                             0x3
#define _CWG1AS0_CWG1LSAC1_POSITION                         0x3
#define _CWG1AS0_CWG1LSAC1_SIZE                             0x1
#define _CWG1AS0_CWG1LSAC1_LENGTH                           0x1
#define _CWG1AS0_CWG1LSAC1_MASK                             0x8
#define _CWG1AS0_CWG1LSBD0_POSN                             0x4
#define _CWG1AS0_CWG1LSBD0_POSITION                         0x4
#define _CWG1AS0_CWG1LSBD0_SIZE                             0x1
#define _CWG1AS0_CWG1LSBD0_LENGTH                           0x1
#define _CWG1AS0_CWG1LSBD0_MASK                             0x10
#define _CWG1AS0_CWG1LSBD1_POSN                             0x5
#define _CWG1AS0_CWG1LSBD1_POSITION                         0x5
#define _CWG1AS0_CWG1LSBD1_SIZE                             0x1
#define _CWG1AS0_CWG1LSBD1_LENGTH                           0x1
#define _CWG1AS0_CWG1LSBD1_MASK                             0x20

// Register: CWG1AS1
extern volatile unsigned char           CWG1AS1             @ 0x698;
#ifndef _LIB_BUILD
asm("CWG1AS1 equ 0698h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned AS0E                   :1;
        unsigned AS1E                   :1;
        unsigned AS2E                   :1;
        unsigned AS3E                   :1;
        unsigned AS4E                   :1;
    };
} CWG1AS1bits_t;
extern volatile CWG1AS1bits_t CWG1AS1bits @ 0x698;
// bitfield macros
#define _CWG1AS1_AS0E_POSN                                  0x0
#define _CWG1AS1_AS0E_POSITION                              0x0
#define _CWG1AS1_AS0E_SIZE                                  0x1
#define _CWG1AS1_AS0E_LENGTH                                0x1
#define _CWG1AS1_AS0E_MASK                                  0x1
#define _CWG1AS1_AS1E_POSN                                  0x1
#define _CWG1AS1_AS1E_POSITION                              0x1
#define _CWG1AS1_AS1E_SIZE                                  0x1
#define _CWG1AS1_AS1E_LENGTH                                0x1
#define _CWG1AS1_AS1E_MASK                                  0x2
#define _CWG1AS1_AS2E_POSN                                  0x2
#define _CWG1AS1_AS2E_POSITION                              0x2
#define _CWG1AS1_AS2E_SIZE                                  0x1
#define _CWG1AS1_AS2E_LENGTH                                0x1
#define _CWG1AS1_AS2E_MASK                                  0x4
#define _CWG1AS1_AS3E_POSN                                  0x3
#define _CWG1AS1_AS3E_POSITION                              0x3
#define _CWG1AS1_AS3E_SIZE                                  0x1
#define _CWG1AS1_AS3E_LENGTH                                0x1
#define _CWG1AS1_AS3E_MASK                                  0x8
#define _CWG1AS1_AS4E_POSN                                  0x4
#define _CWG1AS1_AS4E_POSITION                              0x4
#define _CWG1AS1_AS4E_SIZE                                  0x1
#define _CWG1AS1_AS4E_LENGTH                                0x1
#define _CWG1AS1_AS4E_MASK                                  0x10

// Register: CWG1STR
extern volatile unsigned char           CWG1STR             @ 0x699;
#ifndef _LIB_BUILD
asm("CWG1STR equ 0699h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STRA                   :1;
        unsigned STRB                   :1;
        unsigned STRC                   :1;
        unsigned STRD                   :1;
        unsigned OVRA                   :1;
        unsigned OVRB                   :1;
        unsigned OVRC                   :1;
        unsigned OVRD                   :1;
    };
    struct {
        unsigned CWG1STRA               :1;
        unsigned CWG1STRB               :1;
        unsigned CWG1STRC               :1;
        unsigned CWG1STRD               :1;
        unsigned CWG1OVRA               :1;
        unsigned CWG1OVRB               :1;
        unsigned CWG1OVRC               :1;
        unsigned CWG1OVRD               :1;
    };
} CWG1STRbits_t;
extern volatile CWG1STRbits_t CWG1STRbits @ 0x699;
// bitfield macros
#define _CWG1STR_STRA_POSN                                  0x0
#define _CWG1STR_STRA_POSITION                              0x0
#define _CWG1STR_STRA_SIZE                                  0x1
#define _CWG1STR_STRA_LENGTH                                0x1
#define _CWG1STR_STRA_MASK                                  0x1
#define _CWG1STR_STRB_POSN                                  0x1
#define _CWG1STR_STRB_POSITION                              0x1
#define _CWG1STR_STRB_SIZE                                  0x1
#define _CWG1STR_STRB_LENGTH                                0x1
#define _CWG1STR_STRB_MASK                                  0x2
#define _CWG1STR_STRC_POSN                                  0x2
#define _CWG1STR_STRC_POSITION                              0x2
#define _CWG1STR_STRC_SIZE                                  0x1
#define _CWG1STR_STRC_LENGTH                                0x1
#define _CWG1STR_STRC_MASK                                  0x4
#define _CWG1STR_STRD_POSN                                  0x3
#define _CWG1STR_STRD_POSITION                              0x3
#define _CWG1STR_STRD_SIZE                                  0x1
#define _CWG1STR_STRD_LENGTH                                0x1
#define _CWG1STR_STRD_MASK                                  0x8
#define _CWG1STR_OVRA_POSN                                  0x4
#define _CWG1STR_OVRA_POSITION                              0x4
#define _CWG1STR_OVRA_SIZE                                  0x1
#define _CWG1STR_OVRA_LENGTH                                0x1
#define _CWG1STR_OVRA_MASK                                  0x10
#define _CWG1STR_OVRB_POSN                                  0x5
#define _CWG1STR_OVRB_POSITION                              0x5
#define _CWG1STR_OVRB_SIZE                                  0x1
#define _CWG1STR_OVRB_LENGTH                                0x1
#define _CWG1STR_OVRB_MASK                                  0x20
#define _CWG1STR_OVRC_POSN                                  0x6
#define _CWG1STR_OVRC_POSITION                              0x6
#define _CWG1STR_OVRC_SIZE                                  0x1
#define _CWG1STR_OVRC_LENGTH                                0x1
#define _CWG1STR_OVRC_MASK                                  0x40
#define _CWG1STR_OVRD_POSN                                  0x7
#define _CWG1STR_OVRD_POSITION                              0x7
#define _CWG1STR_OVRD_SIZE                                  0x1
#define _CWG1STR_OVRD_LENGTH                                0x1
#define _CWG1STR_OVRD_MASK                                  0x80
#define _CWG1STR_CWG1STRA_POSN                              0x0
#define _CWG1STR_CWG1STRA_POSITION                          0x0
#define _CWG1STR_CWG1STRA_SIZE                              0x1
#define _CWG1STR_CWG1STRA_LENGTH                            0x1
#define _CWG1STR_CWG1STRA_MASK                              0x1
#define _CWG1STR_CWG1STRB_POSN                              0x1
#define _CWG1STR_CWG1STRB_POSITION                          0x1
#define _CWG1STR_CWG1STRB_SIZE                              0x1
#define _CWG1STR_CWG1STRB_LENGTH                            0x1
#define _CWG1STR_CWG1STRB_MASK                              0x2
#define _CWG1STR_CWG1STRC_POSN                              0x2
#define _CWG1STR_CWG1STRC_POSITION                          0x2
#define _CWG1STR_CWG1STRC_SIZE                              0x1
#define _CWG1STR_CWG1STRC_LENGTH                            0x1
#define _CWG1STR_CWG1STRC_MASK                              0x4
#define _CWG1STR_CWG1STRD_POSN                              0x3
#define _CWG1STR_CWG1STRD_POSITION                          0x3
#define _CWG1STR_CWG1STRD_SIZE                              0x1
#define _CWG1STR_CWG1STRD_LENGTH                            0x1
#define _CWG1STR_CWG1STRD_MASK                              0x8
#define _CWG1STR_CWG1OVRA_POSN                              0x4
#define _CWG1STR_CWG1OVRA_POSITION                          0x4
#define _CWG1STR_CWG1OVRA_SIZE                              0x1
#define _CWG1STR_CWG1OVRA_LENGTH                            0x1
#define _CWG1STR_CWG1OVRA_MASK                              0x10
#define _CWG1STR_CWG1OVRB_POSN                              0x5
#define _CWG1STR_CWG1OVRB_POSITION                          0x5
#define _CWG1STR_CWG1OVRB_SIZE                              0x1
#define _CWG1STR_CWG1OVRB_LENGTH                            0x1
#define _CWG1STR_CWG1OVRB_MASK                              0x20
#define _CWG1STR_CWG1OVRC_POSN                              0x6
#define _CWG1STR_CWG1OVRC_POSITION                          0x6
#define _CWG1STR_CWG1OVRC_SIZE                              0x1
#define _CWG1STR_CWG1OVRC_LENGTH                            0x1
#define _CWG1STR_CWG1OVRC_MASK                              0x40
#define _CWG1STR_CWG1OVRD_POSN                              0x7
#define _CWG1STR_CWG1OVRD_POSITION                          0x7
#define _CWG1STR_CWG1OVRD_SIZE                              0x1
#define _CWG1STR_CWG1OVRD_LENGTH                            0x1
#define _CWG1STR_CWG1OVRD_MASK                              0x80

// Register: CWG2CLKCON
extern volatile unsigned char           CWG2CLKCON          @ 0x711;
#ifndef _LIB_BUILD
asm("CWG2CLKCON equ 0711h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CS                     :1;
    };
    struct {
        unsigned CWG2CS                 :1;
    };
} CWG2CLKCONbits_t;
extern volatile CWG2CLKCONbits_t CWG2CLKCONbits @ 0x711;
// bitfield macros
#define _CWG2CLKCON_CS_POSN                                 0x0
#define _CWG2CLKCON_CS_POSITION                             0x0
#define _CWG2CLKCON_CS_SIZE                                 0x1
#define _CWG2CLKCON_CS_LENGTH                               0x1
#define _CWG2CLKCON_CS_MASK                                 0x1
#define _CWG2CLKCON_CWG2CS_POSN                             0x0
#define _CWG2CLKCON_CWG2CS_POSITION                         0x0
#define _CWG2CLKCON_CWG2CS_SIZE                             0x1
#define _CWG2CLKCON_CWG2CS_LENGTH                           0x1
#define _CWG2CLKCON_CWG2CS_MASK                             0x1

// Register: CWG2DAT
extern volatile unsigned char           CWG2DAT             @ 0x712;
#ifndef _LIB_BUILD
asm("CWG2DAT equ 0712h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DAT                    :4;
    };
    struct {
        unsigned CWG2DAT0               :1;
        unsigned CWG2DAT1               :1;
        unsigned CWG2DAT2               :1;
        unsigned CWG2DAT3               :1;
    };
} CWG2DATbits_t;
extern volatile CWG2DATbits_t CWG2DATbits @ 0x712;
// bitfield macros
#define _CWG2DAT_DAT_POSN                                   0x0
#define _CWG2DAT_DAT_POSITION                               0x0
#define _CWG2DAT_DAT_SIZE                                   0x4
#define _CWG2DAT_DAT_LENGTH                                 0x4
#define _CWG2DAT_DAT_MASK                                   0xF
#define _CWG2DAT_CWG2DAT0_POSN                              0x0
#define _CWG2DAT_CWG2DAT0_POSITION                          0x0
#define _CWG2DAT_CWG2DAT0_SIZE                              0x1
#define _CWG2DAT_CWG2DAT0_LENGTH                            0x1
#define _CWG2DAT_CWG2DAT0_MASK                              0x1
#define _CWG2DAT_CWG2DAT1_POSN                              0x1
#define _CWG2DAT_CWG2DAT1_POSITION                          0x1
#define _CWG2DAT_CWG2DAT1_SIZE                              0x1
#define _CWG2DAT_CWG2DAT1_LENGTH                            0x1
#define _CWG2DAT_CWG2DAT1_MASK                              0x2
#define _CWG2DAT_CWG2DAT2_POSN                              0x2
#define _CWG2DAT_CWG2DAT2_POSITION                          0x2
#define _CWG2DAT_CWG2DAT2_SIZE                              0x1
#define _CWG2DAT_CWG2DAT2_LENGTH                            0x1
#define _CWG2DAT_CWG2DAT2_MASK                              0x4
#define _CWG2DAT_CWG2DAT3_POSN                              0x3
#define _CWG2DAT_CWG2DAT3_POSITION                          0x3
#define _CWG2DAT_CWG2DAT3_SIZE                              0x1
#define _CWG2DAT_CWG2DAT3_LENGTH                            0x1
#define _CWG2DAT_CWG2DAT3_MASK                              0x8

// Register: CWG2DBR
extern volatile unsigned char           CWG2DBR             @ 0x713;
#ifndef _LIB_BUILD
asm("CWG2DBR equ 0713h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DBR                    :6;
    };
    struct {
        unsigned DBR0                   :1;
        unsigned DBR1                   :1;
        unsigned DBR2                   :1;
        unsigned DBR3                   :1;
        unsigned DBR4                   :1;
        unsigned DBR5                   :1;
    };
    struct {
        unsigned CWG2DBR                :6;
    };
    struct {
        unsigned CWG2DBR0               :1;
        unsigned CWG2DBR1               :1;
        unsigned CWG2DBR2               :1;
        unsigned CWG2DBR3               :1;
        unsigned CWG2DBR4               :1;
        unsigned CWG2DBR5               :1;
    };
} CWG2DBRbits_t;
extern volatile CWG2DBRbits_t CWG2DBRbits @ 0x713;
// bitfield macros
#define _CWG2DBR_DBR_POSN                                   0x0
#define _CWG2DBR_DBR_POSITION                               0x0
#define _CWG2DBR_DBR_SIZE                                   0x6
#define _CWG2DBR_DBR_LENGTH                                 0x6
#define _CWG2DBR_DBR_MASK                                   0x3F
#define _CWG2DBR_DBR0_POSN                                  0x0
#define _CWG2DBR_DBR0_POSITION                              0x0
#define _CWG2DBR_DBR0_SIZE                                  0x1
#define _CWG2DBR_DBR0_LENGTH                                0x1
#define _CWG2DBR_DBR0_MASK                                  0x1
#define _CWG2DBR_DBR1_POSN                                  0x1
#define _CWG2DBR_DBR1_POSITION                              0x1
#define _CWG2DBR_DBR1_SIZE                                  0x1
#define _CWG2DBR_DBR1_LENGTH                                0x1
#define _CWG2DBR_DBR1_MASK                                  0x2
#define _CWG2DBR_DBR2_POSN                                  0x2
#define _CWG2DBR_DBR2_POSITION                              0x2
#define _CWG2DBR_DBR2_SIZE                                  0x1
#define _CWG2DBR_DBR2_LENGTH                                0x1
#define _CWG2DBR_DBR2_MASK                                  0x4
#define _CWG2DBR_DBR3_POSN                                  0x3
#define _CWG2DBR_DBR3_POSITION                              0x3
#define _CWG2DBR_DBR3_SIZE                                  0x1
#define _CWG2DBR_DBR3_LENGTH                                0x1
#define _CWG2DBR_DBR3_MASK                                  0x8
#define _CWG2DBR_DBR4_POSN                                  0x4
#define _CWG2DBR_DBR4_POSITION                              0x4
#define _CWG2DBR_DBR4_SIZE                                  0x1
#define _CWG2DBR_DBR4_LENGTH                                0x1
#define _CWG2DBR_DBR4_MASK                                  0x10
#define _CWG2DBR_DBR5_POSN                                  0x5
#define _CWG2DBR_DBR5_POSITION                              0x5
#define _CWG2DBR_DBR5_SIZE                                  0x1
#define _CWG2DBR_DBR5_LENGTH                                0x1
#define _CWG2DBR_DBR5_MASK                                  0x20
#define _CWG2DBR_CWG2DBR_POSN                               0x0
#define _CWG2DBR_CWG2DBR_POSITION                           0x0
#define _CWG2DBR_CWG2DBR_SIZE                               0x6
#define _CWG2DBR_CWG2DBR_LENGTH                             0x6
#define _CWG2DBR_CWG2DBR_MASK                               0x3F
#define _CWG2DBR_CWG2DBR0_POSN                              0x0
#define _CWG2DBR_CWG2DBR0_POSITION                          0x0
#define _CWG2DBR_CWG2DBR0_SIZE                              0x1
#define _CWG2DBR_CWG2DBR0_LENGTH                            0x1
#define _CWG2DBR_CWG2DBR0_MASK                              0x1
#define _CWG2DBR_CWG2DBR1_POSN                              0x1
#define _CWG2DBR_CWG2DBR1_POSITION                          0x1
#define _CWG2DBR_CWG2DBR1_SIZE                              0x1
#define _CWG2DBR_CWG2DBR1_LENGTH                            0x1
#define _CWG2DBR_CWG2DBR1_MASK                              0x2
#define _CWG2DBR_CWG2DBR2_POSN                              0x2
#define _CWG2DBR_CWG2DBR2_POSITION                          0x2
#define _CWG2DBR_CWG2DBR2_SIZE                              0x1
#define _CWG2DBR_CWG2DBR2_LENGTH                            0x1
#define _CWG2DBR_CWG2DBR2_MASK                              0x4
#define _CWG2DBR_CWG2DBR3_POSN                              0x3
#define _CWG2DBR_CWG2DBR3_POSITION                          0x3
#define _CWG2DBR_CWG2DBR3_SIZE                              0x1
#define _CWG2DBR_CWG2DBR3_LENGTH                            0x1
#define _CWG2DBR_CWG2DBR3_MASK                              0x8
#define _CWG2DBR_CWG2DBR4_POSN                              0x4
#define _CWG2DBR_CWG2DBR4_POSITION                          0x4
#define _CWG2DBR_CWG2DBR4_SIZE                              0x1
#define _CWG2DBR_CWG2DBR4_LENGTH                            0x1
#define _CWG2DBR_CWG2DBR4_MASK                              0x10
#define _CWG2DBR_CWG2DBR5_POSN                              0x5
#define _CWG2DBR_CWG2DBR5_POSITION                          0x5
#define _CWG2DBR_CWG2DBR5_SIZE                              0x1
#define _CWG2DBR_CWG2DBR5_LENGTH                            0x1
#define _CWG2DBR_CWG2DBR5_MASK                              0x20

// Register: CWG2DBF
extern volatile unsigned char           CWG2DBF             @ 0x714;
#ifndef _LIB_BUILD
asm("CWG2DBF equ 0714h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DBF                    :6;
    };
    struct {
        unsigned DBF0                   :1;
        unsigned DBF1                   :1;
        unsigned DBF2                   :1;
        unsigned DBF3                   :1;
        unsigned DBF4                   :1;
        unsigned DBF5                   :1;
    };
    struct {
        unsigned CWG2DBF                :6;
    };
    struct {
        unsigned CWG2DBF0               :1;
        unsigned CWG2DBF1               :1;
        unsigned CWG2DBF2               :1;
        unsigned CWG2DBF3               :1;
        unsigned CWG2DBF4               :1;
        unsigned CWG2DBF5               :1;
    };
} CWG2DBFbits_t;
extern volatile CWG2DBFbits_t CWG2DBFbits @ 0x714;
// bitfield macros
#define _CWG2DBF_DBF_POSN                                   0x0
#define _CWG2DBF_DBF_POSITION                               0x0
#define _CWG2DBF_DBF_SIZE                                   0x6
#define _CWG2DBF_DBF_LENGTH                                 0x6
#define _CWG2DBF_DBF_MASK                                   0x3F
#define _CWG2DBF_DBF0_POSN                                  0x0
#define _CWG2DBF_DBF0_POSITION                              0x0
#define _CWG2DBF_DBF0_SIZE                                  0x1
#define _CWG2DBF_DBF0_LENGTH                                0x1
#define _CWG2DBF_DBF0_MASK                                  0x1
#define _CWG2DBF_DBF1_POSN                                  0x1
#define _CWG2DBF_DBF1_POSITION                              0x1
#define _CWG2DBF_DBF1_SIZE                                  0x1
#define _CWG2DBF_DBF1_LENGTH                                0x1
#define _CWG2DBF_DBF1_MASK                                  0x2
#define _CWG2DBF_DBF2_POSN                                  0x2
#define _CWG2DBF_DBF2_POSITION                              0x2
#define _CWG2DBF_DBF2_SIZE                                  0x1
#define _CWG2DBF_DBF2_LENGTH                                0x1
#define _CWG2DBF_DBF2_MASK                                  0x4
#define _CWG2DBF_DBF3_POSN                                  0x3
#define _CWG2DBF_DBF3_POSITION                              0x3
#define _CWG2DBF_DBF3_SIZE                                  0x1
#define _CWG2DBF_DBF3_LENGTH                                0x1
#define _CWG2DBF_DBF3_MASK                                  0x8
#define _CWG2DBF_DBF4_POSN                                  0x4
#define _CWG2DBF_DBF4_POSITION                              0x4
#define _CWG2DBF_DBF4_SIZE                                  0x1
#define _CWG2DBF_DBF4_LENGTH                                0x1
#define _CWG2DBF_DBF4_MASK                                  0x10
#define _CWG2DBF_DBF5_POSN                                  0x5
#define _CWG2DBF_DBF5_POSITION                              0x5
#define _CWG2DBF_DBF5_SIZE                                  0x1
#define _CWG2DBF_DBF5_LENGTH                                0x1
#define _CWG2DBF_DBF5_MASK                                  0x20
#define _CWG2DBF_CWG2DBF_POSN                               0x0
#define _CWG2DBF_CWG2DBF_POSITION                           0x0
#define _CWG2DBF_CWG2DBF_SIZE                               0x6
#define _CWG2DBF_CWG2DBF_LENGTH                             0x6
#define _CWG2DBF_CWG2DBF_MASK                               0x3F
#define _CWG2DBF_CWG2DBF0_POSN                              0x0
#define _CWG2DBF_CWG2DBF0_POSITION                          0x0
#define _CWG2DBF_CWG2DBF0_SIZE                              0x1
#define _CWG2DBF_CWG2DBF0_LENGTH                            0x1
#define _CWG2DBF_CWG2DBF0_MASK                              0x1
#define _CWG2DBF_CWG2DBF1_POSN                              0x1
#define _CWG2DBF_CWG2DBF1_POSITION                          0x1
#define _CWG2DBF_CWG2DBF1_SIZE                              0x1
#define _CWG2DBF_CWG2DBF1_LENGTH                            0x1
#define _CWG2DBF_CWG2DBF1_MASK                              0x2
#define _CWG2DBF_CWG2DBF2_POSN                              0x2
#define _CWG2DBF_CWG2DBF2_POSITION                          0x2
#define _CWG2DBF_CWG2DBF2_SIZE                              0x1
#define _CWG2DBF_CWG2DBF2_LENGTH                            0x1
#define _CWG2DBF_CWG2DBF2_MASK                              0x4
#define _CWG2DBF_CWG2DBF3_POSN                              0x3
#define _CWG2DBF_CWG2DBF3_POSITION                          0x3
#define _CWG2DBF_CWG2DBF3_SIZE                              0x1
#define _CWG2DBF_CWG2DBF3_LENGTH                            0x1
#define _CWG2DBF_CWG2DBF3_MASK                              0x8
#define _CWG2DBF_CWG2DBF4_POSN                              0x4
#define _CWG2DBF_CWG2DBF4_POSITION                          0x4
#define _CWG2DBF_CWG2DBF4_SIZE                              0x1
#define _CWG2DBF_CWG2DBF4_LENGTH                            0x1
#define _CWG2DBF_CWG2DBF4_MASK                              0x10
#define _CWG2DBF_CWG2DBF5_POSN                              0x5
#define _CWG2DBF_CWG2DBF5_POSITION                          0x5
#define _CWG2DBF_CWG2DBF5_SIZE                              0x1
#define _CWG2DBF_CWG2DBF5_LENGTH                            0x1
#define _CWG2DBF_CWG2DBF5_MASK                              0x20

// Register: CWG2CON0
extern volatile unsigned char           CWG2CON0            @ 0x715;
#ifndef _LIB_BUILD
asm("CWG2CON0 equ 0715h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MODE                   :3;
        unsigned                        :3;
        unsigned LD                     :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
        unsigned                        :4;
        unsigned G2EN                   :1;
    };
    struct {
        unsigned CWG2MODE               :3;
        unsigned                        :3;
        unsigned CWG2LD                 :1;
        unsigned CWG2EN                 :1;
    };
    struct {
        unsigned CWG2MODE0              :1;
        unsigned CWG2MODE1              :1;
        unsigned CWG2MODE2              :1;
    };
} CWG2CON0bits_t;
extern volatile CWG2CON0bits_t CWG2CON0bits @ 0x715;
// bitfield macros
#define _CWG2CON0_MODE_POSN                                 0x0
#define _CWG2CON0_MODE_POSITION                             0x0
#define _CWG2CON0_MODE_SIZE                                 0x3
#define _CWG2CON0_MODE_LENGTH                               0x3
#define _CWG2CON0_MODE_MASK                                 0x7
#define _CWG2CON0_LD_POSN                                   0x6
#define _CWG2CON0_LD_POSITION                               0x6
#define _CWG2CON0_LD_SIZE                                   0x1
#define _CWG2CON0_LD_LENGTH                                 0x1
#define _CWG2CON0_LD_MASK                                   0x40
#define _CWG2CON0_EN_POSN                                   0x7
#define _CWG2CON0_EN_POSITION                               0x7
#define _CWG2CON0_EN_SIZE                                   0x1
#define _CWG2CON0_EN_LENGTH                                 0x1
#define _CWG2CON0_EN_MASK                                   0x80
#define _CWG2CON0_MODE0_POSN                                0x0
#define _CWG2CON0_MODE0_POSITION                            0x0
#define _CWG2CON0_MODE0_SIZE                                0x1
#define _CWG2CON0_MODE0_LENGTH                              0x1
#define _CWG2CON0_MODE0_MASK                                0x1
#define _CWG2CON0_MODE1_POSN                                0x1
#define _CWG2CON0_MODE1_POSITION                            0x1
#define _CWG2CON0_MODE1_SIZE                                0x1
#define _CWG2CON0_MODE1_LENGTH                              0x1
#define _CWG2CON0_MODE1_MASK                                0x2
#define _CWG2CON0_MODE2_POSN                                0x2
#define _CWG2CON0_MODE2_POSITION                            0x2
#define _CWG2CON0_MODE2_SIZE                                0x1
#define _CWG2CON0_MODE2_LENGTH                              0x1
#define _CWG2CON0_MODE2_MASK                                0x4
#define _CWG2CON0_G2EN_POSN                                 0x7
#define _CWG2CON0_G2EN_POSITION                             0x7
#define _CWG2CON0_G2EN_SIZE                                 0x1
#define _CWG2CON0_G2EN_LENGTH                               0x1
#define _CWG2CON0_G2EN_MASK                                 0x80
#define _CWG2CON0_CWG2MODE_POSN                             0x0
#define _CWG2CON0_CWG2MODE_POSITION                         0x0
#define _CWG2CON0_CWG2MODE_SIZE                             0x3
#define _CWG2CON0_CWG2MODE_LENGTH                           0x3
#define _CWG2CON0_CWG2MODE_MASK                             0x7
#define _CWG2CON0_CWG2LD_POSN                               0x6
#define _CWG2CON0_CWG2LD_POSITION                           0x6
#define _CWG2CON0_CWG2LD_SIZE                               0x1
#define _CWG2CON0_CWG2LD_LENGTH                             0x1
#define _CWG2CON0_CWG2LD_MASK                               0x40
#define _CWG2CON0_CWG2EN_POSN                               0x7
#define _CWG2CON0_CWG2EN_POSITION                           0x7
#define _CWG2CON0_CWG2EN_SIZE                               0x1
#define _CWG2CON0_CWG2EN_LENGTH                             0x1
#define _CWG2CON0_CWG2EN_MASK                               0x80
#define _CWG2CON0_CWG2MODE0_POSN                            0x0
#define _CWG2CON0_CWG2MODE0_POSITION                        0x0
#define _CWG2CON0_CWG2MODE0_SIZE                            0x1
#define _CWG2CON0_CWG2MODE0_LENGTH                          0x1
#define _CWG2CON0_CWG2MODE0_MASK                            0x1
#define _CWG2CON0_CWG2MODE1_POSN                            0x1
#define _CWG2CON0_CWG2MODE1_POSITION                        0x1
#define _CWG2CON0_CWG2MODE1_SIZE                            0x1
#define _CWG2CON0_CWG2MODE1_LENGTH                          0x1
#define _CWG2CON0_CWG2MODE1_MASK                            0x2
#define _CWG2CON0_CWG2MODE2_POSN                            0x2
#define _CWG2CON0_CWG2MODE2_POSITION                        0x2
#define _CWG2CON0_CWG2MODE2_SIZE                            0x1
#define _CWG2CON0_CWG2MODE2_LENGTH                          0x1
#define _CWG2CON0_CWG2MODE2_MASK                            0x4

// Register: CWG2CON1
extern volatile unsigned char           CWG2CON1            @ 0x716;
#ifndef _LIB_BUILD
asm("CWG2CON1 equ 0716h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POLA                   :1;
        unsigned POLB                   :1;
        unsigned POLC                   :1;
        unsigned POLD                   :1;
        unsigned                        :1;
        unsigned IN                     :1;
    };
    struct {
        unsigned CWG2POLA               :1;
        unsigned CWG2POLB               :1;
        unsigned CWG2POLC               :1;
        unsigned CWG2POLD               :1;
        unsigned                        :1;
        unsigned CWG2IN                 :1;
    };
} CWG2CON1bits_t;
extern volatile CWG2CON1bits_t CWG2CON1bits @ 0x716;
// bitfield macros
#define _CWG2CON1_POLA_POSN                                 0x0
#define _CWG2CON1_POLA_POSITION                             0x0
#define _CWG2CON1_POLA_SIZE                                 0x1
#define _CWG2CON1_POLA_LENGTH                               0x1
#define _CWG2CON1_POLA_MASK                                 0x1
#define _CWG2CON1_POLB_POSN                                 0x1
#define _CWG2CON1_POLB_POSITION                             0x1
#define _CWG2CON1_POLB_SIZE                                 0x1
#define _CWG2CON1_POLB_LENGTH                               0x1
#define _CWG2CON1_POLB_MASK                                 0x2
#define _CWG2CON1_POLC_POSN                                 0x2
#define _CWG2CON1_POLC_POSITION                             0x2
#define _CWG2CON1_POLC_SIZE                                 0x1
#define _CWG2CON1_POLC_LENGTH                               0x1
#define _CWG2CON1_POLC_MASK                                 0x4
#define _CWG2CON1_POLD_POSN                                 0x3
#define _CWG2CON1_POLD_POSITION                             0x3
#define _CWG2CON1_POLD_SIZE                                 0x1
#define _CWG2CON1_POLD_LENGTH                               0x1
#define _CWG2CON1_POLD_MASK                                 0x8
#define _CWG2CON1_IN_POSN                                   0x5
#define _CWG2CON1_IN_POSITION                               0x5
#define _CWG2CON1_IN_SIZE                                   0x1
#define _CWG2CON1_IN_LENGTH                                 0x1
#define _CWG2CON1_IN_MASK                                   0x20
#define _CWG2CON1_CWG2POLA_POSN                             0x0
#define _CWG2CON1_CWG2POLA_POSITION                         0x0
#define _CWG2CON1_CWG2POLA_SIZE                             0x1
#define _CWG2CON1_CWG2POLA_LENGTH                           0x1
#define _CWG2CON1_CWG2POLA_MASK                             0x1
#define _CWG2CON1_CWG2POLB_POSN                             0x1
#define _CWG2CON1_CWG2POLB_POSITION                         0x1
#define _CWG2CON1_CWG2POLB_SIZE                             0x1
#define _CWG2CON1_CWG2POLB_LENGTH                           0x1
#define _CWG2CON1_CWG2POLB_MASK                             0x2
#define _CWG2CON1_CWG2POLC_POSN                             0x2
#define _CWG2CON1_CWG2POLC_POSITION                         0x2
#define _CWG2CON1_CWG2POLC_SIZE                             0x1
#define _CWG2CON1_CWG2POLC_LENGTH                           0x1
#define _CWG2CON1_CWG2POLC_MASK                             0x4
#define _CWG2CON1_CWG2POLD_POSN                             0x3
#define _CWG2CON1_CWG2POLD_POSITION                         0x3
#define _CWG2CON1_CWG2POLD_SIZE                             0x1
#define _CWG2CON1_CWG2POLD_LENGTH                           0x1
#define _CWG2CON1_CWG2POLD_MASK                             0x8
#define _CWG2CON1_CWG2IN_POSN                               0x5
#define _CWG2CON1_CWG2IN_POSITION                           0x5
#define _CWG2CON1_CWG2IN_SIZE                               0x1
#define _CWG2CON1_CWG2IN_LENGTH                             0x1
#define _CWG2CON1_CWG2IN_MASK                               0x20

// Register: CWG2AS0
extern volatile unsigned char           CWG2AS0             @ 0x717;
#ifndef _LIB_BUILD
asm("CWG2AS0 equ 0717h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned LSAC                   :2;
        unsigned LSBD                   :2;
        unsigned REN                    :1;
        unsigned SHUTDOWN               :1;
    };
    struct {
        unsigned                        :2;
        unsigned LSAC0                  :1;
        unsigned LSAC1                  :1;
        unsigned LSBD0                  :1;
        unsigned LSBD1                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned CWG2LSAC               :2;
        unsigned CWG2LSBD               :2;
        unsigned CWG2REN                :1;
        unsigned CWG2SHUTDOWN           :1;
    };
    struct {
        unsigned                        :2;
        unsigned CWG2LSAC0              :1;
        unsigned CWG2LSAC1              :1;
        unsigned CWG2LSBD0              :1;
        unsigned CWG2LSBD1              :1;
    };
} CWG2AS0bits_t;
extern volatile CWG2AS0bits_t CWG2AS0bits @ 0x717;
// bitfield macros
#define _CWG2AS0_LSAC_POSN                                  0x2
#define _CWG2AS0_LSAC_POSITION                              0x2
#define _CWG2AS0_LSAC_SIZE                                  0x2
#define _CWG2AS0_LSAC_LENGTH                                0x2
#define _CWG2AS0_LSAC_MASK                                  0xC
#define _CWG2AS0_LSBD_POSN                                  0x4
#define _CWG2AS0_LSBD_POSITION                              0x4
#define _CWG2AS0_LSBD_SIZE                                  0x2
#define _CWG2AS0_LSBD_LENGTH                                0x2
#define _CWG2AS0_LSBD_MASK                                  0x30
#define _CWG2AS0_REN_POSN                                   0x6
#define _CWG2AS0_REN_POSITION                               0x6
#define _CWG2AS0_REN_SIZE                                   0x1
#define _CWG2AS0_REN_LENGTH                                 0x1
#define _CWG2AS0_REN_MASK                                   0x40
#define _CWG2AS0_SHUTDOWN_POSN                              0x7
#define _CWG2AS0_SHUTDOWN_POSITION                          0x7
#define _CWG2AS0_SHUTDOWN_SIZE                              0x1
#define _CWG2AS0_SHUTDOWN_LENGTH                            0x1
#define _CWG2AS0_SHUTDOWN_MASK                              0x80
#define _CWG2AS0_LSAC0_POSN                                 0x2
#define _CWG2AS0_LSAC0_POSITION                             0x2
#define _CWG2AS0_LSAC0_SIZE                                 0x1
#define _CWG2AS0_LSAC0_LENGTH                               0x1
#define _CWG2AS0_LSAC0_MASK                                 0x4
#define _CWG2AS0_LSAC1_POSN                                 0x3
#define _CWG2AS0_LSAC1_POSITION                             0x3
#define _CWG2AS0_LSAC1_SIZE                                 0x1
#define _CWG2AS0_LSAC1_LENGTH                               0x1
#define _CWG2AS0_LSAC1_MASK                                 0x8
#define _CWG2AS0_LSBD0_POSN                                 0x4
#define _CWG2AS0_LSBD0_POSITION                             0x4
#define _CWG2AS0_LSBD0_SIZE                                 0x1
#define _CWG2AS0_LSBD0_LENGTH                               0x1
#define _CWG2AS0_LSBD0_MASK                                 0x10
#define _CWG2AS0_LSBD1_POSN                                 0x5
#define _CWG2AS0_LSBD1_POSITION                             0x5
#define _CWG2AS0_LSBD1_SIZE                                 0x1
#define _CWG2AS0_LSBD1_LENGTH                               0x1
#define _CWG2AS0_LSBD1_MASK                                 0x20
#define _CWG2AS0_CWG2LSAC_POSN                              0x2
#define _CWG2AS0_CWG2LSAC_POSITION                          0x2
#define _CWG2AS0_CWG2LSAC_SIZE                              0x2
#define _CWG2AS0_CWG2LSAC_LENGTH                            0x2
#define _CWG2AS0_CWG2LSAC_MASK                              0xC
#define _CWG2AS0_CWG2LSBD_POSN                              0x4
#define _CWG2AS0_CWG2LSBD_POSITION                          0x4
#define _CWG2AS0_CWG2LSBD_SIZE                              0x2
#define _CWG2AS0_CWG2LSBD_LENGTH                            0x2
#define _CWG2AS0_CWG2LSBD_MASK                              0x30
#define _CWG2AS0_CWG2REN_POSN                               0x6
#define _CWG2AS0_CWG2REN_POSITION                           0x6
#define _CWG2AS0_CWG2REN_SIZE                               0x1
#define _CWG2AS0_CWG2REN_LENGTH                             0x1
#define _CWG2AS0_CWG2REN_MASK                               0x40
#define _CWG2AS0_CWG2SHUTDOWN_POSN                          0x7
#define _CWG2AS0_CWG2SHUTDOWN_POSITION                      0x7
#define _CWG2AS0_CWG2SHUTDOWN_SIZE                          0x1
#define _CWG2AS0_CWG2SHUTDOWN_LENGTH                        0x1
#define _CWG2AS0_CWG2SHUTDOWN_MASK                          0x80
#define _CWG2AS0_CWG2LSAC0_POSN                             0x2
#define _CWG2AS0_CWG2LSAC0_POSITION                         0x2
#define _CWG2AS0_CWG2LSAC0_SIZE                             0x1
#define _CWG2AS0_CWG2LSAC0_LENGTH                           0x1
#define _CWG2AS0_CWG2LSAC0_MASK                             0x4
#define _CWG2AS0_CWG2LSAC1_POSN                             0x3
#define _CWG2AS0_CWG2LSAC1_POSITION                         0x3
#define _CWG2AS0_CWG2LSAC1_SIZE                             0x1
#define _CWG2AS0_CWG2LSAC1_LENGTH                           0x1
#define _CWG2AS0_CWG2LSAC1_MASK                             0x8
#define _CWG2AS0_CWG2LSBD0_POSN                             0x4
#define _CWG2AS0_CWG2LSBD0_POSITION                         0x4
#define _CWG2AS0_CWG2LSBD0_SIZE                             0x1
#define _CWG2AS0_CWG2LSBD0_LENGTH                           0x1
#define _CWG2AS0_CWG2LSBD0_MASK                             0x10
#define _CWG2AS0_CWG2LSBD1_POSN                             0x5
#define _CWG2AS0_CWG2LSBD1_POSITION                         0x5
#define _CWG2AS0_CWG2LSBD1_SIZE                             0x1
#define _CWG2AS0_CWG2LSBD1_LENGTH                           0x1
#define _CWG2AS0_CWG2LSBD1_MASK                             0x20

// Register: CWG2AS1
extern volatile unsigned char           CWG2AS1             @ 0x718;
#ifndef _LIB_BUILD
asm("CWG2AS1 equ 0718h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned AS0E                   :1;
        unsigned AS1E                   :1;
        unsigned AS2E                   :1;
        unsigned AS3E                   :1;
        unsigned AS4E                   :1;
    };
} CWG2AS1bits_t;
extern volatile CWG2AS1bits_t CWG2AS1bits @ 0x718;
// bitfield macros
#define _CWG2AS1_AS0E_POSN                                  0x0
#define _CWG2AS1_AS0E_POSITION                              0x0
#define _CWG2AS1_AS0E_SIZE                                  0x1
#define _CWG2AS1_AS0E_LENGTH                                0x1
#define _CWG2AS1_AS0E_MASK                                  0x1
#define _CWG2AS1_AS1E_POSN                                  0x1
#define _CWG2AS1_AS1E_POSITION                              0x1
#define _CWG2AS1_AS1E_SIZE                                  0x1
#define _CWG2AS1_AS1E_LENGTH                                0x1
#define _CWG2AS1_AS1E_MASK                                  0x2
#define _CWG2AS1_AS2E_POSN                                  0x2
#define _CWG2AS1_AS2E_POSITION                              0x2
#define _CWG2AS1_AS2E_SIZE                                  0x1
#define _CWG2AS1_AS2E_LENGTH                                0x1
#define _CWG2AS1_AS2E_MASK                                  0x4
#define _CWG2AS1_AS3E_POSN                                  0x3
#define _CWG2AS1_AS3E_POSITION                              0x3
#define _CWG2AS1_AS3E_SIZE                                  0x1
#define _CWG2AS1_AS3E_LENGTH                                0x1
#define _CWG2AS1_AS3E_MASK                                  0x8
#define _CWG2AS1_AS4E_POSN                                  0x4
#define _CWG2AS1_AS4E_POSITION                              0x4
#define _CWG2AS1_AS4E_SIZE                                  0x1
#define _CWG2AS1_AS4E_LENGTH                                0x1
#define _CWG2AS1_AS4E_MASK                                  0x10

// Register: CWG2STR
extern volatile unsigned char           CWG2STR             @ 0x719;
#ifndef _LIB_BUILD
asm("CWG2STR equ 0719h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STRA                   :1;
        unsigned STRB                   :1;
        unsigned STRC                   :1;
        unsigned STRD                   :1;
        unsigned OVRA                   :1;
        unsigned OVRB                   :1;
        unsigned OVRC                   :1;
        unsigned OVRD                   :1;
    };
    struct {
        unsigned CWG2STRA               :1;
        unsigned CWG2STRB               :1;
        unsigned CWG2STRC               :1;
        unsigned CWG2STRD               :1;
        unsigned CWG2OVRA               :1;
        unsigned CWG2OVRB               :1;
        unsigned CWG2OVRC               :1;
        unsigned CWG2OVRD               :1;
    };
} CWG2STRbits_t;
extern volatile CWG2STRbits_t CWG2STRbits @ 0x719;
// bitfield macros
#define _CWG2STR_STRA_POSN                                  0x0
#define _CWG2STR_STRA_POSITION                              0x0
#define _CWG2STR_STRA_SIZE                                  0x1
#define _CWG2STR_STRA_LENGTH                                0x1
#define _CWG2STR_STRA_MASK                                  0x1
#define _CWG2STR_STRB_POSN                                  0x1
#define _CWG2STR_STRB_POSITION                              0x1
#define _CWG2STR_STRB_SIZE                                  0x1
#define _CWG2STR_STRB_LENGTH                                0x1
#define _CWG2STR_STRB_MASK                                  0x2
#define _CWG2STR_STRC_POSN                                  0x2
#define _CWG2STR_STRC_POSITION                              0x2
#define _CWG2STR_STRC_SIZE                                  0x1
#define _CWG2STR_STRC_LENGTH                                0x1
#define _CWG2STR_STRC_MASK                                  0x4
#define _CWG2STR_STRD_POSN                                  0x3
#define _CWG2STR_STRD_POSITION                              0x3
#define _CWG2STR_STRD_SIZE                                  0x1
#define _CWG2STR_STRD_LENGTH                                0x1
#define _CWG2STR_STRD_MASK                                  0x8
#define _CWG2STR_OVRA_POSN                                  0x4
#define _CWG2STR_OVRA_POSITION                              0x4
#define _CWG2STR_OVRA_SIZE                                  0x1
#define _CWG2STR_OVRA_LENGTH                                0x1
#define _CWG2STR_OVRA_MASK                                  0x10
#define _CWG2STR_OVRB_POSN                                  0x5
#define _CWG2STR_OVRB_POSITION                              0x5
#define _CWG2STR_OVRB_SIZE                                  0x1
#define _CWG2STR_OVRB_LENGTH                                0x1
#define _CWG2STR_OVRB_MASK                                  0x20
#define _CWG2STR_OVRC_POSN                                  0x6
#define _CWG2STR_OVRC_POSITION                              0x6
#define _CWG2STR_OVRC_SIZE                                  0x1
#define _CWG2STR_OVRC_LENGTH                                0x1
#define _CWG2STR_OVRC_MASK                                  0x40
#define _CWG2STR_OVRD_POSN                                  0x7
#define _CWG2STR_OVRD_POSITION                              0x7
#define _CWG2STR_OVRD_SIZE                                  0x1
#define _CWG2STR_OVRD_LENGTH                                0x1
#define _CWG2STR_OVRD_MASK                                  0x80
#define _CWG2STR_CWG2STRA_POSN                              0x0
#define _CWG2STR_CWG2STRA_POSITION                          0x0
#define _CWG2STR_CWG2STRA_SIZE                              0x1
#define _CWG2STR_CWG2STRA_LENGTH                            0x1
#define _CWG2STR_CWG2STRA_MASK                              0x1
#define _CWG2STR_CWG2STRB_POSN                              0x1
#define _CWG2STR_CWG2STRB_POSITION                          0x1
#define _CWG2STR_CWG2STRB_SIZE                              0x1
#define _CWG2STR_CWG2STRB_LENGTH                            0x1
#define _CWG2STR_CWG2STRB_MASK                              0x2
#define _CWG2STR_CWG2STRC_POSN                              0x2
#define _CWG2STR_CWG2STRC_POSITION                          0x2
#define _CWG2STR_CWG2STRC_SIZE                              0x1
#define _CWG2STR_CWG2STRC_LENGTH                            0x1
#define _CWG2STR_CWG2STRC_MASK                              0x4
#define _CWG2STR_CWG2STRD_POSN                              0x3
#define _CWG2STR_CWG2STRD_POSITION                          0x3
#define _CWG2STR_CWG2STRD_SIZE                              0x1
#define _CWG2STR_CWG2STRD_LENGTH                            0x1
#define _CWG2STR_CWG2STRD_MASK                              0x8
#define _CWG2STR_CWG2OVRA_POSN                              0x4
#define _CWG2STR_CWG2OVRA_POSITION                          0x4
#define _CWG2STR_CWG2OVRA_SIZE                              0x1
#define _CWG2STR_CWG2OVRA_LENGTH                            0x1
#define _CWG2STR_CWG2OVRA_MASK                              0x10
#define _CWG2STR_CWG2OVRB_POSN                              0x5
#define _CWG2STR_CWG2OVRB_POSITION                          0x5
#define _CWG2STR_CWG2OVRB_SIZE                              0x1
#define _CWG2STR_CWG2OVRB_LENGTH                            0x1
#define _CWG2STR_CWG2OVRB_MASK                              0x20
#define _CWG2STR_CWG2OVRC_POSN                              0x6
#define _CWG2STR_CWG2OVRC_POSITION                          0x6
#define _CWG2STR_CWG2OVRC_SIZE                              0x1
#define _CWG2STR_CWG2OVRC_LENGTH                            0x1
#define _CWG2STR_CWG2OVRC_MASK                              0x40
#define _CWG2STR_CWG2OVRD_POSN                              0x7
#define _CWG2STR_CWG2OVRD_POSITION                          0x7
#define _CWG2STR_CWG2OVRD_SIZE                              0x1
#define _CWG2STR_CWG2OVRD_LENGTH                            0x1
#define _CWG2STR_CWG2OVRD_MASK                              0x80

// Register: NVMADR
extern volatile unsigned short          NVMADR              @ 0x891;
#ifndef _LIB_BUILD
asm("NVMADR equ 0891h");
#endif

// Register: NVMADRL
extern volatile unsigned char           NVMADRL             @ 0x891;
#ifndef _LIB_BUILD
asm("NVMADRL equ 0891h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NVMADRL                :8;
    };
    struct {
        unsigned NVMADR0                :1;
        unsigned NVMADR1                :1;
        unsigned NVMADR2                :1;
        unsigned NVMADR3                :1;
        unsigned NVMADR4                :1;
        unsigned NVMADR5                :1;
        unsigned NVMADR6                :1;
        unsigned NVMADR7                :1;
    };
} NVMADRLbits_t;
extern volatile NVMADRLbits_t NVMADRLbits @ 0x891;
// bitfield macros
#define _NVMADRL_NVMADRL_POSN                               0x0
#define _NVMADRL_NVMADRL_POSITION                           0x0
#define _NVMADRL_NVMADRL_SIZE                               0x8
#define _NVMADRL_NVMADRL_LENGTH                             0x8
#define _NVMADRL_NVMADRL_MASK                               0xFF
#define _NVMADRL_NVMADR0_POSN                               0x0
#define _NVMADRL_NVMADR0_POSITION                           0x0
#define _NVMADRL_NVMADR0_SIZE                               0x1
#define _NVMADRL_NVMADR0_LENGTH                             0x1
#define _NVMADRL_NVMADR0_MASK                               0x1
#define _NVMADRL_NVMADR1_POSN                               0x1
#define _NVMADRL_NVMADR1_POSITION                           0x1
#define _NVMADRL_NVMADR1_SIZE                               0x1
#define _NVMADRL_NVMADR1_LENGTH                             0x1
#define _NVMADRL_NVMADR1_MASK                               0x2
#define _NVMADRL_NVMADR2_POSN                               0x2
#define _NVMADRL_NVMADR2_POSITION                           0x2
#define _NVMADRL_NVMADR2_SIZE                               0x1
#define _NVMADRL_NVMADR2_LENGTH                             0x1
#define _NVMADRL_NVMADR2_MASK                               0x4
#define _NVMADRL_NVMADR3_POSN                               0x3
#define _NVMADRL_NVMADR3_POSITION                           0x3
#define _NVMADRL_NVMADR3_SIZE                               0x1
#define _NVMADRL_NVMADR3_LENGTH                             0x1
#define _NVMADRL_NVMADR3_MASK                               0x8
#define _NVMADRL_NVMADR4_POSN                               0x4
#define _NVMADRL_NVMADR4_POSITION                           0x4
#define _NVMADRL_NVMADR4_SIZE                               0x1
#define _NVMADRL_NVMADR4_LENGTH                             0x1
#define _NVMADRL_NVMADR4_MASK                               0x10
#define _NVMADRL_NVMADR5_POSN                               0x5
#define _NVMADRL_NVMADR5_POSITION                           0x5
#define _NVMADRL_NVMADR5_SIZE                               0x1
#define _NVMADRL_NVMADR5_LENGTH                             0x1
#define _NVMADRL_NVMADR5_MASK                               0x20
#define _NVMADRL_NVMADR6_POSN                               0x6
#define _NVMADRL_NVMADR6_POSITION                           0x6
#define _NVMADRL_NVMADR6_SIZE                               0x1
#define _NVMADRL_NVMADR6_LENGTH                             0x1
#define _NVMADRL_NVMADR6_MASK                               0x40
#define _NVMADRL_NVMADR7_POSN                               0x7
#define _NVMADRL_NVMADR7_POSITION                           0x7
#define _NVMADRL_NVMADR7_SIZE                               0x1
#define _NVMADRL_NVMADR7_LENGTH                             0x1
#define _NVMADRL_NVMADR7_MASK                               0x80

// Register: NVMADRH
extern volatile unsigned char           NVMADRH             @ 0x892;
#ifndef _LIB_BUILD
asm("NVMADRH equ 0892h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NVMADRH                :7;
    };
    struct {
        unsigned NVMADR8                :1;
        unsigned NVMADR9                :1;
        unsigned NVMADR10               :1;
        unsigned NVMADR11               :1;
        unsigned NVMADR12               :1;
        unsigned NVMADR13               :1;
        unsigned NVMADR14               :1;
    };
} NVMADRHbits_t;
extern volatile NVMADRHbits_t NVMADRHbits @ 0x892;
// bitfield macros
#define _NVMADRH_NVMADRH_POSN                               0x0
#define _NVMADRH_NVMADRH_POSITION                           0x0
#define _NVMADRH_NVMADRH_SIZE                               0x7
#define _NVMADRH_NVMADRH_LENGTH                             0x7
#define _NVMADRH_NVMADRH_MASK                               0x7F
#define _NVMADRH_NVMADR8_POSN                               0x0
#define _NVMADRH_NVMADR8_POSITION                           0x0
#define _NVMADRH_NVMADR8_SIZE                               0x1
#define _NVMADRH_NVMADR8_LENGTH                             0x1
#define _NVMADRH_NVMADR8_MASK                               0x1
#define _NVMADRH_NVMADR9_POSN                               0x1
#define _NVMADRH_NVMADR9_POSITION                           0x1
#define _NVMADRH_NVMADR9_SIZE                               0x1
#define _NVMADRH_NVMADR9_LENGTH                             0x1
#define _NVMADRH_NVMADR9_MASK                               0x2
#define _NVMADRH_NVMADR10_POSN                              0x2
#define _NVMADRH_NVMADR10_POSITION                          0x2
#define _NVMADRH_NVMADR10_SIZE                              0x1
#define _NVMADRH_NVMADR10_LENGTH                            0x1
#define _NVMADRH_NVMADR10_MASK                              0x4
#define _NVMADRH_NVMADR11_POSN                              0x3
#define _NVMADRH_NVMADR11_POSITION                          0x3
#define _NVMADRH_NVMADR11_SIZE                              0x1
#define _NVMADRH_NVMADR11_LENGTH                            0x1
#define _NVMADRH_NVMADR11_MASK                              0x8
#define _NVMADRH_NVMADR12_POSN                              0x4
#define _NVMADRH_NVMADR12_POSITION                          0x4
#define _NVMADRH_NVMADR12_SIZE                              0x1
#define _NVMADRH_NVMADR12_LENGTH                            0x1
#define _NVMADRH_NVMADR12_MASK                              0x10
#define _NVMADRH_NVMADR13_POSN                              0x5
#define _NVMADRH_NVMADR13_POSITION                          0x5
#define _NVMADRH_NVMADR13_SIZE                              0x1
#define _NVMADRH_NVMADR13_LENGTH                            0x1
#define _NVMADRH_NVMADR13_MASK                              0x20
#define _NVMADRH_NVMADR14_POSN                              0x6
#define _NVMADRH_NVMADR14_POSITION                          0x6
#define _NVMADRH_NVMADR14_SIZE                              0x1
#define _NVMADRH_NVMADR14_LENGTH                            0x1
#define _NVMADRH_NVMADR14_MASK                              0x40

// Register: NVMDAT
extern volatile unsigned short          NVMDAT              @ 0x893;
#ifndef _LIB_BUILD
asm("NVMDAT equ 0893h");
#endif

// Register: NVMDATL
extern volatile unsigned char           NVMDATL             @ 0x893;
#ifndef _LIB_BUILD
asm("NVMDATL equ 0893h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NVMDATL                :8;
    };
    struct {
        unsigned NVMDAT0                :1;
        unsigned NVMDAT1                :1;
        unsigned NVMDAT2                :1;
        unsigned NVMDAT3                :1;
        unsigned NVMDAT4                :1;
        unsigned NVMDAT5                :1;
        unsigned NVMDAT6                :1;
        unsigned NVMDAT7                :1;
    };
} NVMDATLbits_t;
extern volatile NVMDATLbits_t NVMDATLbits @ 0x893;
// bitfield macros
#define _NVMDATL_NVMDATL_POSN                               0x0
#define _NVMDATL_NVMDATL_POSITION                           0x0
#define _NVMDATL_NVMDATL_SIZE                               0x8
#define _NVMDATL_NVMDATL_LENGTH                             0x8
#define _NVMDATL_NVMDATL_MASK                               0xFF
#define _NVMDATL_NVMDAT0_POSN                               0x0
#define _NVMDATL_NVMDAT0_POSITION                           0x0
#define _NVMDATL_NVMDAT0_SIZE                               0x1
#define _NVMDATL_NVMDAT0_LENGTH                             0x1
#define _NVMDATL_NVMDAT0_MASK                               0x1
#define _NVMDATL_NVMDAT1_POSN                               0x1
#define _NVMDATL_NVMDAT1_POSITION                           0x1
#define _NVMDATL_NVMDAT1_SIZE                               0x1
#define _NVMDATL_NVMDAT1_LENGTH                             0x1
#define _NVMDATL_NVMDAT1_MASK                               0x2
#define _NVMDATL_NVMDAT2_POSN                               0x2
#define _NVMDATL_NVMDAT2_POSITION                           0x2
#define _NVMDATL_NVMDAT2_SIZE                               0x1
#define _NVMDATL_NVMDAT2_LENGTH                             0x1
#define _NVMDATL_NVMDAT2_MASK                               0x4
#define _NVMDATL_NVMDAT3_POSN                               0x3
#define _NVMDATL_NVMDAT3_POSITION                           0x3
#define _NVMDATL_NVMDAT3_SIZE                               0x1
#define _NVMDATL_NVMDAT3_LENGTH                             0x1
#define _NVMDATL_NVMDAT3_MASK                               0x8
#define _NVMDATL_NVMDAT4_POSN                               0x4
#define _NVMDATL_NVMDAT4_POSITION                           0x4
#define _NVMDATL_NVMDAT4_SIZE                               0x1
#define _NVMDATL_NVMDAT4_LENGTH                             0x1
#define _NVMDATL_NVMDAT4_MASK                               0x10
#define _NVMDATL_NVMDAT5_POSN                               0x5
#define _NVMDATL_NVMDAT5_POSITION                           0x5
#define _NVMDATL_NVMDAT5_SIZE                               0x1
#define _NVMDATL_NVMDAT5_LENGTH                             0x1
#define _NVMDATL_NVMDAT5_MASK                               0x20
#define _NVMDATL_NVMDAT6_POSN                               0x6
#define _NVMDATL_NVMDAT6_POSITION                           0x6
#define _NVMDATL_NVMDAT6_SIZE                               0x1
#define _NVMDATL_NVMDAT6_LENGTH                             0x1
#define _NVMDATL_NVMDAT6_MASK                               0x40
#define _NVMDATL_NVMDAT7_POSN                               0x7
#define _NVMDATL_NVMDAT7_POSITION                           0x7
#define _NVMDATL_NVMDAT7_SIZE                               0x1
#define _NVMDATL_NVMDAT7_LENGTH                             0x1
#define _NVMDATL_NVMDAT7_MASK                               0x80

// Register: NVMDATH
extern volatile unsigned char           NVMDATH             @ 0x894;
#ifndef _LIB_BUILD
asm("NVMDATH equ 0894h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NVMDATH                :6;
    };
    struct {
        unsigned NVMDAT8                :1;
        unsigned NVMDAT9                :1;
        unsigned NVMDAT10               :1;
        unsigned NVMDAT11               :1;
        unsigned NVMDAT12               :1;
        unsigned NVMDAT13               :1;
    };
} NVMDATHbits_t;
extern volatile NVMDATHbits_t NVMDATHbits @ 0x894;
// bitfield macros
#define _NVMDATH_NVMDATH_POSN                               0x0
#define _NVMDATH_NVMDATH_POSITION                           0x0
#define _NVMDATH_NVMDATH_SIZE                               0x6
#define _NVMDATH_NVMDATH_LENGTH                             0x6
#define _NVMDATH_NVMDATH_MASK                               0x3F
#define _NVMDATH_NVMDAT8_POSN                               0x0
#define _NVMDATH_NVMDAT8_POSITION                           0x0
#define _NVMDATH_NVMDAT8_SIZE                               0x1
#define _NVMDATH_NVMDAT8_LENGTH                             0x1
#define _NVMDATH_NVMDAT8_MASK                               0x1
#define _NVMDATH_NVMDAT9_POSN                               0x1
#define _NVMDATH_NVMDAT9_POSITION                           0x1
#define _NVMDATH_NVMDAT9_SIZE                               0x1
#define _NVMDATH_NVMDAT9_LENGTH                             0x1
#define _NVMDATH_NVMDAT9_MASK                               0x2
#define _NVMDATH_NVMDAT10_POSN                              0x2
#define _NVMDATH_NVMDAT10_POSITION                          0x2
#define _NVMDATH_NVMDAT10_SIZE                              0x1
#define _NVMDATH_NVMDAT10_LENGTH                            0x1
#define _NVMDATH_NVMDAT10_MASK                              0x4
#define _NVMDATH_NVMDAT11_POSN                              0x3
#define _NVMDATH_NVMDAT11_POSITION                          0x3
#define _NVMDATH_NVMDAT11_SIZE                              0x1
#define _NVMDATH_NVMDAT11_LENGTH                            0x1
#define _NVMDATH_NVMDAT11_MASK                              0x8
#define _NVMDATH_NVMDAT12_POSN                              0x4
#define _NVMDATH_NVMDAT12_POSITION                          0x4
#define _NVMDATH_NVMDAT12_SIZE                              0x1
#define _NVMDATH_NVMDAT12_LENGTH                            0x1
#define _NVMDATH_NVMDAT12_MASK                              0x10
#define _NVMDATH_NVMDAT13_POSN                              0x5
#define _NVMDATH_NVMDAT13_POSITION                          0x5
#define _NVMDATH_NVMDAT13_SIZE                              0x1
#define _NVMDATH_NVMDAT13_LENGTH                            0x1
#define _NVMDATH_NVMDAT13_MASK                              0x20

// Register: NVMCON1
extern volatile unsigned char           NVMCON1             @ 0x895;
#ifndef _LIB_BUILD
asm("NVMCON1 equ 0895h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RD                     :1;
        unsigned WR                     :1;
        unsigned WREN                   :1;
        unsigned WRERR                  :1;
        unsigned FREE                   :1;
        unsigned LWLO                   :1;
        unsigned NVMREGS                :1;
    };
} NVMCON1bits_t;
extern volatile NVMCON1bits_t NVMCON1bits @ 0x895;
// bitfield macros
#define _NVMCON1_RD_POSN                                    0x0
#define _NVMCON1_RD_POSITION                                0x0
#define _NVMCON1_RD_SIZE                                    0x1
#define _NVMCON1_RD_LENGTH                                  0x1
#define _NVMCON1_RD_MASK                                    0x1
#define _NVMCON1_WR_POSN                                    0x1
#define _NVMCON1_WR_POSITION                                0x1
#define _NVMCON1_WR_SIZE                                    0x1
#define _NVMCON1_WR_LENGTH                                  0x1
#define _NVMCON1_WR_MASK                                    0x2
#define _NVMCON1_WREN_POSN                                  0x2
#define _NVMCON1_WREN_POSITION                              0x2
#define _NVMCON1_WREN_SIZE                                  0x1
#define _NVMCON1_WREN_LENGTH                                0x1
#define _NVMCON1_WREN_MASK                                  0x4
#define _NVMCON1_WRERR_POSN                                 0x3
#define _NVMCON1_WRERR_POSITION                             0x3
#define _NVMCON1_WRERR_SIZE                                 0x1
#define _NVMCON1_WRERR_LENGTH                               0x1
#define _NVMCON1_WRERR_MASK                                 0x8
#define _NVMCON1_FREE_POSN                                  0x4
#define _NVMCON1_FREE_POSITION                              0x4
#define _NVMCON1_FREE_SIZE                                  0x1
#define _NVMCON1_FREE_LENGTH                                0x1
#define _NVMCON1_FREE_MASK                                  0x10
#define _NVMCON1_LWLO_POSN                                  0x5
#define _NVMCON1_LWLO_POSITION                              0x5
#define _NVMCON1_LWLO_SIZE                                  0x1
#define _NVMCON1_LWLO_LENGTH                                0x1
#define _NVMCON1_LWLO_MASK                                  0x20
#define _NVMCON1_NVMREGS_POSN                               0x6
#define _NVMCON1_NVMREGS_POSITION                           0x6
#define _NVMCON1_NVMREGS_SIZE                               0x1
#define _NVMCON1_NVMREGS_LENGTH                             0x1
#define _NVMCON1_NVMREGS_MASK                               0x40

// Register: NVMCON2
extern volatile unsigned char           NVMCON2             @ 0x896;
#ifndef _LIB_BUILD
asm("NVMCON2 equ 0896h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NMVCON2                :8;
    };
} NVMCON2bits_t;
extern volatile NVMCON2bits_t NVMCON2bits @ 0x896;
// bitfield macros
#define _NVMCON2_NMVCON2_POSN                               0x0
#define _NVMCON2_NMVCON2_POSITION                           0x0
#define _NVMCON2_NMVCON2_SIZE                               0x8
#define _NVMCON2_NMVCON2_LENGTH                             0x8
#define _NVMCON2_NMVCON2_MASK                               0xFF

// Register: PCON0
extern volatile unsigned char           PCON0               @ 0x89B;
#ifndef _LIB_BUILD
asm("PCON0 equ 089Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned nBOR                   :1;
        unsigned nPOR                   :1;
        unsigned nRI                    :1;
        unsigned nRMCLR                 :1;
        unsigned nRWDT                  :1;
        unsigned                        :1;
        unsigned STKUNF                 :1;
        unsigned STKOVF                 :1;
    };
} PCON0bits_t;
extern volatile PCON0bits_t PCON0bits @ 0x89B;
// bitfield macros
#define _PCON0_nBOR_POSN                                    0x0
#define _PCON0_nBOR_POSITION                                0x0
#define _PCON0_nBOR_SIZE                                    0x1
#define _PCON0_nBOR_LENGTH                                  0x1
#define _PCON0_nBOR_MASK                                    0x1
#define _PCON0_nPOR_POSN                                    0x1
#define _PCON0_nPOR_POSITION                                0x1
#define _PCON0_nPOR_SIZE                                    0x1
#define _PCON0_nPOR_LENGTH                                  0x1
#define _PCON0_nPOR_MASK                                    0x2
#define _PCON0_nRI_POSN                                     0x2
#define _PCON0_nRI_POSITION                                 0x2
#define _PCON0_nRI_SIZE                                     0x1
#define _PCON0_nRI_LENGTH                                   0x1
#define _PCON0_nRI_MASK                                     0x4
#define _PCON0_nRMCLR_POSN                                  0x3
#define _PCON0_nRMCLR_POSITION                              0x3
#define _PCON0_nRMCLR_SIZE                                  0x1
#define _PCON0_nRMCLR_LENGTH                                0x1
#define _PCON0_nRMCLR_MASK                                  0x8
#define _PCON0_nRWDT_POSN                                   0x4
#define _PCON0_nRWDT_POSITION                               0x4
#define _PCON0_nRWDT_SIZE                                   0x1
#define _PCON0_nRWDT_LENGTH                                 0x1
#define _PCON0_nRWDT_MASK                                   0x10
#define _PCON0_STKUNF_POSN                                  0x6
#define _PCON0_STKUNF_POSITION                              0x6
#define _PCON0_STKUNF_SIZE                                  0x1
#define _PCON0_STKUNF_LENGTH                                0x1
#define _PCON0_STKUNF_MASK                                  0x40
#define _PCON0_STKOVF_POSN                                  0x7
#define _PCON0_STKOVF_POSITION                              0x7
#define _PCON0_STKOVF_SIZE                                  0x1
#define _PCON0_STKOVF_LENGTH                                0x1
#define _PCON0_STKOVF_MASK                                  0x80

// Register: PMD0
extern volatile unsigned char           PMD0                @ 0x911;
#ifndef _LIB_BUILD
asm("PMD0 equ 0911h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOCMD                  :1;
        unsigned CLKRMD                 :1;
        unsigned NVMMD                  :1;
        unsigned                        :3;
        unsigned FVRMD                  :1;
        unsigned SYSCMD                 :1;
    };
} PMD0bits_t;
extern volatile PMD0bits_t PMD0bits @ 0x911;
// bitfield macros
#define _PMD0_IOCMD_POSN                                    0x0
#define _PMD0_IOCMD_POSITION                                0x0
#define _PMD0_IOCMD_SIZE                                    0x1
#define _PMD0_IOCMD_LENGTH                                  0x1
#define _PMD0_IOCMD_MASK                                    0x1
#define _PMD0_CLKRMD_POSN                                   0x1
#define _PMD0_CLKRMD_POSITION                               0x1
#define _PMD0_CLKRMD_SIZE                                   0x1
#define _PMD0_CLKRMD_LENGTH                                 0x1
#define _PMD0_CLKRMD_MASK                                   0x2
#define _PMD0_NVMMD_POSN                                    0x2
#define _PMD0_NVMMD_POSITION                                0x2
#define _PMD0_NVMMD_SIZE                                    0x1
#define _PMD0_NVMMD_LENGTH                                  0x1
#define _PMD0_NVMMD_MASK                                    0x4
#define _PMD0_FVRMD_POSN                                    0x6
#define _PMD0_FVRMD_POSITION                                0x6
#define _PMD0_FVRMD_SIZE                                    0x1
#define _PMD0_FVRMD_LENGTH                                  0x1
#define _PMD0_FVRMD_MASK                                    0x40
#define _PMD0_SYSCMD_POSN                                   0x7
#define _PMD0_SYSCMD_POSITION                               0x7
#define _PMD0_SYSCMD_SIZE                                   0x1
#define _PMD0_SYSCMD_LENGTH                                 0x1
#define _PMD0_SYSCMD_MASK                                   0x80

// Register: PMD1
extern volatile unsigned char           PMD1                @ 0x912;
#ifndef _LIB_BUILD
asm("PMD1 equ 0912h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR0MD                 :1;
        unsigned TMR1MD                 :1;
        unsigned TMR2MD                 :1;
        unsigned TMR3MD                 :1;
        unsigned TMR4MD                 :1;
        unsigned TMR5MD                 :1;
        unsigned TMR6MD                 :1;
        unsigned NCOMD                  :1;
    };
} PMD1bits_t;
extern volatile PMD1bits_t PMD1bits @ 0x912;
// bitfield macros
#define _PMD1_TMR0MD_POSN                                   0x0
#define _PMD1_TMR0MD_POSITION                               0x0
#define _PMD1_TMR0MD_SIZE                                   0x1
#define _PMD1_TMR0MD_LENGTH                                 0x1
#define _PMD1_TMR0MD_MASK                                   0x1
#define _PMD1_TMR1MD_POSN                                   0x1
#define _PMD1_TMR1MD_POSITION                               0x1
#define _PMD1_TMR1MD_SIZE                                   0x1
#define _PMD1_TMR1MD_LENGTH                                 0x1
#define _PMD1_TMR1MD_MASK                                   0x2
#define _PMD1_TMR2MD_POSN                                   0x2
#define _PMD1_TMR2MD_POSITION                               0x2
#define _PMD1_TMR2MD_SIZE                                   0x1
#define _PMD1_TMR2MD_LENGTH                                 0x1
#define _PMD1_TMR2MD_MASK                                   0x4
#define _PMD1_TMR3MD_POSN                                   0x3
#define _PMD1_TMR3MD_POSITION                               0x3
#define _PMD1_TMR3MD_SIZE                                   0x1
#define _PMD1_TMR3MD_LENGTH                                 0x1
#define _PMD1_TMR3MD_MASK                                   0x8
#define _PMD1_TMR4MD_POSN                                   0x4
#define _PMD1_TMR4MD_POSITION                               0x4
#define _PMD1_TMR4MD_SIZE                                   0x1
#define _PMD1_TMR4MD_LENGTH                                 0x1
#define _PMD1_TMR4MD_MASK                                   0x10
#define _PMD1_TMR5MD_POSN                                   0x5
#define _PMD1_TMR5MD_POSITION                               0x5
#define _PMD1_TMR5MD_SIZE                                   0x1
#define _PMD1_TMR5MD_LENGTH                                 0x1
#define _PMD1_TMR5MD_MASK                                   0x20
#define _PMD1_TMR6MD_POSN                                   0x6
#define _PMD1_TMR6MD_POSITION                               0x6
#define _PMD1_TMR6MD_SIZE                                   0x1
#define _PMD1_TMR6MD_LENGTH                                 0x1
#define _PMD1_TMR6MD_MASK                                   0x40
#define _PMD1_NCOMD_POSN                                    0x7
#define _PMD1_NCOMD_POSITION                                0x7
#define _PMD1_NCOMD_SIZE                                    0x1
#define _PMD1_NCOMD_LENGTH                                  0x1
#define _PMD1_NCOMD_MASK                                    0x80

// Register: PMD2
extern volatile unsigned char           PMD2                @ 0x913;
#ifndef _LIB_BUILD
asm("PMD2 equ 0913h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned CMP1MD                 :1;
        unsigned CMP2MD                 :1;
        unsigned                        :2;
        unsigned ADCMD                  :1;
        unsigned DACMD                  :1;
    };
} PMD2bits_t;
extern volatile PMD2bits_t PMD2bits @ 0x913;
// bitfield macros
#define _PMD2_CMP1MD_POSN                                   0x1
#define _PMD2_CMP1MD_POSITION                               0x1
#define _PMD2_CMP1MD_SIZE                                   0x1
#define _PMD2_CMP1MD_LENGTH                                 0x1
#define _PMD2_CMP1MD_MASK                                   0x2
#define _PMD2_CMP2MD_POSN                                   0x2
#define _PMD2_CMP2MD_POSITION                               0x2
#define _PMD2_CMP2MD_SIZE                                   0x1
#define _PMD2_CMP2MD_LENGTH                                 0x1
#define _PMD2_CMP2MD_MASK                                   0x4
#define _PMD2_ADCMD_POSN                                    0x5
#define _PMD2_ADCMD_POSITION                                0x5
#define _PMD2_ADCMD_SIZE                                    0x1
#define _PMD2_ADCMD_LENGTH                                  0x1
#define _PMD2_ADCMD_MASK                                    0x20
#define _PMD2_DACMD_POSN                                    0x6
#define _PMD2_DACMD_POSITION                                0x6
#define _PMD2_DACMD_SIZE                                    0x1
#define _PMD2_DACMD_LENGTH                                  0x1
#define _PMD2_DACMD_MASK                                    0x40

// Register: PMD3
extern volatile unsigned char           PMD3                @ 0x914;
#ifndef _LIB_BUILD
asm("PMD3 equ 0914h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP1MD                 :1;
        unsigned CCP2MD                 :1;
        unsigned CCP3MD                 :1;
        unsigned CCP4MD                 :1;
        unsigned PWM5MD                 :1;
        unsigned PWM6MD                 :1;
        unsigned CWG1MD                 :1;
        unsigned CWG2MD                 :1;
    };
} PMD3bits_t;
extern volatile PMD3bits_t PMD3bits @ 0x914;
// bitfield macros
#define _PMD3_CCP1MD_POSN                                   0x0
#define _PMD3_CCP1MD_POSITION                               0x0
#define _PMD3_CCP1MD_SIZE                                   0x1
#define _PMD3_CCP1MD_LENGTH                                 0x1
#define _PMD3_CCP1MD_MASK                                   0x1
#define _PMD3_CCP2MD_POSN                                   0x1
#define _PMD3_CCP2MD_POSITION                               0x1
#define _PMD3_CCP2MD_SIZE                                   0x1
#define _PMD3_CCP2MD_LENGTH                                 0x1
#define _PMD3_CCP2MD_MASK                                   0x2
#define _PMD3_CCP3MD_POSN                                   0x2
#define _PMD3_CCP3MD_POSITION                               0x2
#define _PMD3_CCP3MD_SIZE                                   0x1
#define _PMD3_CCP3MD_LENGTH                                 0x1
#define _PMD3_CCP3MD_MASK                                   0x4
#define _PMD3_CCP4MD_POSN                                   0x3
#define _PMD3_CCP4MD_POSITION                               0x3
#define _PMD3_CCP4MD_SIZE                                   0x1
#define _PMD3_CCP4MD_LENGTH                                 0x1
#define _PMD3_CCP4MD_MASK                                   0x8
#define _PMD3_PWM5MD_POSN                                   0x4
#define _PMD3_PWM5MD_POSITION                               0x4
#define _PMD3_PWM5MD_SIZE                                   0x1
#define _PMD3_PWM5MD_LENGTH                                 0x1
#define _PMD3_PWM5MD_MASK                                   0x10
#define _PMD3_PWM6MD_POSN                                   0x5
#define _PMD3_PWM6MD_POSITION                               0x5
#define _PMD3_PWM6MD_SIZE                                   0x1
#define _PMD3_PWM6MD_LENGTH                                 0x1
#define _PMD3_PWM6MD_MASK                                   0x20
#define _PMD3_CWG1MD_POSN                                   0x6
#define _PMD3_CWG1MD_POSITION                               0x6
#define _PMD3_CWG1MD_SIZE                                   0x1
#define _PMD3_CWG1MD_LENGTH                                 0x1
#define _PMD3_CWG1MD_MASK                                   0x40
#define _PMD3_CWG2MD_POSN                                   0x7
#define _PMD3_CWG2MD_POSITION                               0x7
#define _PMD3_CWG2MD_SIZE                                   0x1
#define _PMD3_CWG2MD_LENGTH                                 0x1
#define _PMD3_CWG2MD_MASK                                   0x80

// Register: PMD4
extern volatile unsigned char           PMD4                @ 0x915;
#ifndef _LIB_BUILD
asm("PMD4 equ 0915h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned MSSP1MD                :1;
        unsigned                        :3;
        unsigned UART1MD                :1;
    };
} PMD4bits_t;
extern volatile PMD4bits_t PMD4bits @ 0x915;
// bitfield macros
#define _PMD4_MSSP1MD_POSN                                  0x1
#define _PMD4_MSSP1MD_POSITION                              0x1
#define _PMD4_MSSP1MD_SIZE                                  0x1
#define _PMD4_MSSP1MD_LENGTH                                0x1
#define _PMD4_MSSP1MD_MASK                                  0x2
#define _PMD4_UART1MD_POSN                                  0x5
#define _PMD4_UART1MD_POSITION                              0x5
#define _PMD4_UART1MD_SIZE                                  0x1
#define _PMD4_UART1MD_LENGTH                                0x1
#define _PMD4_UART1MD_MASK                                  0x20

// Register: PMD5
extern volatile unsigned char           PMD5                @ 0x916;
#ifndef _LIB_BUILD
asm("PMD5 equ 0916h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DSMMD                  :1;
        unsigned CLC1MD                 :1;
        unsigned CLC2MD                 :1;
        unsigned CLC3MD                 :1;
        unsigned CLC4MD                 :1;
    };
} PMD5bits_t;
extern volatile PMD5bits_t PMD5bits @ 0x916;
// bitfield macros
#define _PMD5_DSMMD_POSN                                    0x0
#define _PMD5_DSMMD_POSITION                                0x0
#define _PMD5_DSMMD_SIZE                                    0x1
#define _PMD5_DSMMD_LENGTH                                  0x1
#define _PMD5_DSMMD_MASK                                    0x1
#define _PMD5_CLC1MD_POSN                                   0x1
#define _PMD5_CLC1MD_POSITION                               0x1
#define _PMD5_CLC1MD_SIZE                                   0x1
#define _PMD5_CLC1MD_LENGTH                                 0x1
#define _PMD5_CLC1MD_MASK                                   0x2
#define _PMD5_CLC2MD_POSN                                   0x2
#define _PMD5_CLC2MD_POSITION                               0x2
#define _PMD5_CLC2MD_SIZE                                   0x1
#define _PMD5_CLC2MD_LENGTH                                 0x1
#define _PMD5_CLC2MD_MASK                                   0x4
#define _PMD5_CLC3MD_POSN                                   0x3
#define _PMD5_CLC3MD_POSITION                               0x3
#define _PMD5_CLC3MD_SIZE                                   0x1
#define _PMD5_CLC3MD_LENGTH                                 0x1
#define _PMD5_CLC3MD_MASK                                   0x8
#define _PMD5_CLC4MD_POSN                                   0x4
#define _PMD5_CLC4MD_POSITION                               0x4
#define _PMD5_CLC4MD_SIZE                                   0x1
#define _PMD5_CLC4MD_LENGTH                                 0x1
#define _PMD5_CLC4MD_MASK                                   0x10

// Register: CPUDOZE
extern volatile unsigned char           CPUDOZE             @ 0x918;
#ifndef _LIB_BUILD
asm("CPUDOZE equ 0918h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DOZE                   :3;
        unsigned                        :1;
        unsigned DOE                    :1;
        unsigned ROI                    :1;
        unsigned DOZEN                  :1;
        unsigned IDLEN                  :1;
    };
    struct {
        unsigned DOZE0                  :1;
        unsigned DOZE1                  :1;
        unsigned DOZE2                  :1;
    };
} CPUDOZEbits_t;
extern volatile CPUDOZEbits_t CPUDOZEbits @ 0x918;
// bitfield macros
#define _CPUDOZE_DOZE_POSN                                  0x0
#define _CPUDOZE_DOZE_POSITION                              0x0
#define _CPUDOZE_DOZE_SIZE                                  0x3
#define _CPUDOZE_DOZE_LENGTH                                0x3
#define _CPUDOZE_DOZE_MASK                                  0x7
#define _CPUDOZE_DOE_POSN                                   0x4
#define _CPUDOZE_DOE_POSITION                               0x4
#define _CPUDOZE_DOE_SIZE                                   0x1
#define _CPUDOZE_DOE_LENGTH                                 0x1
#define _CPUDOZE_DOE_MASK                                   0x10
#define _CPUDOZE_ROI_POSN                                   0x5
#define _CPUDOZE_ROI_POSITION                               0x5
#define _CPUDOZE_ROI_SIZE                                   0x1
#define _CPUDOZE_ROI_LENGTH                                 0x1
#define _CPUDOZE_ROI_MASK                                   0x20
#define _CPUDOZE_DOZEN_POSN                                 0x6
#define _CPUDOZE_DOZEN_POSITION                             0x6
#define _CPUDOZE_DOZEN_SIZE                                 0x1
#define _CPUDOZE_DOZEN_LENGTH                               0x1
#define _CPUDOZE_DOZEN_MASK                                 0x40
#define _CPUDOZE_IDLEN_POSN                                 0x7
#define _CPUDOZE_IDLEN_POSITION                             0x7
#define _CPUDOZE_IDLEN_SIZE                                 0x1
#define _CPUDOZE_IDLEN_LENGTH                               0x1
#define _CPUDOZE_IDLEN_MASK                                 0x80
#define _CPUDOZE_DOZE0_POSN                                 0x0
#define _CPUDOZE_DOZE0_POSITION                             0x0
#define _CPUDOZE_DOZE0_SIZE                                 0x1
#define _CPUDOZE_DOZE0_LENGTH                               0x1
#define _CPUDOZE_DOZE0_MASK                                 0x1
#define _CPUDOZE_DOZE1_POSN                                 0x1
#define _CPUDOZE_DOZE1_POSITION                             0x1
#define _CPUDOZE_DOZE1_SIZE                                 0x1
#define _CPUDOZE_DOZE1_LENGTH                               0x1
#define _CPUDOZE_DOZE1_MASK                                 0x2
#define _CPUDOZE_DOZE2_POSN                                 0x2
#define _CPUDOZE_DOZE2_POSITION                             0x2
#define _CPUDOZE_DOZE2_SIZE                                 0x1
#define _CPUDOZE_DOZE2_LENGTH                               0x1
#define _CPUDOZE_DOZE2_MASK                                 0x4

// Register: OSCCON1
extern volatile unsigned char           OSCCON1             @ 0x919;
#ifndef _LIB_BUILD
asm("OSCCON1 equ 0919h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NDIV                   :4;
        unsigned NOSC                   :3;
    };
    struct {
        unsigned NDIV0                  :1;
        unsigned NDIV1                  :1;
        unsigned NDIV2                  :1;
        unsigned NDIV3                  :1;
        unsigned NOSC0                  :1;
        unsigned NOSC1                  :1;
        unsigned NOSC2                  :1;
    };
} OSCCON1bits_t;
extern volatile OSCCON1bits_t OSCCON1bits @ 0x919;
// bitfield macros
#define _OSCCON1_NDIV_POSN                                  0x0
#define _OSCCON1_NDIV_POSITION                              0x0
#define _OSCCON1_NDIV_SIZE                                  0x4
#define _OSCCON1_NDIV_LENGTH                                0x4
#define _OSCCON1_NDIV_MASK                                  0xF
#define _OSCCON1_NOSC_POSN                                  0x4
#define _OSCCON1_NOSC_POSITION                              0x4
#define _OSCCON1_NOSC_SIZE                                  0x3
#define _OSCCON1_NOSC_LENGTH                                0x3
#define _OSCCON1_NOSC_MASK                                  0x70
#define _OSCCON1_NDIV0_POSN                                 0x0
#define _OSCCON1_NDIV0_POSITION                             0x0
#define _OSCCON1_NDIV0_SIZE                                 0x1
#define _OSCCON1_NDIV0_LENGTH                               0x1
#define _OSCCON1_NDIV0_MASK                                 0x1
#define _OSCCON1_NDIV1_POSN                                 0x1
#define _OSCCON1_NDIV1_POSITION                             0x1
#define _OSCCON1_NDIV1_SIZE                                 0x1
#define _OSCCON1_NDIV1_LENGTH                               0x1
#define _OSCCON1_NDIV1_MASK                                 0x2
#define _OSCCON1_NDIV2_POSN                                 0x2
#define _OSCCON1_NDIV2_POSITION                             0x2
#define _OSCCON1_NDIV2_SIZE                                 0x1
#define _OSCCON1_NDIV2_LENGTH                               0x1
#define _OSCCON1_NDIV2_MASK                                 0x4
#define _OSCCON1_NDIV3_POSN                                 0x3
#define _OSCCON1_NDIV3_POSITION                             0x3
#define _OSCCON1_NDIV3_SIZE                                 0x1
#define _OSCCON1_NDIV3_LENGTH                               0x1
#define _OSCCON1_NDIV3_MASK                                 0x8
#define _OSCCON1_NOSC0_POSN                                 0x4
#define _OSCCON1_NOSC0_POSITION                             0x4
#define _OSCCON1_NOSC0_SIZE                                 0x1
#define _OSCCON1_NOSC0_LENGTH                               0x1
#define _OSCCON1_NOSC0_MASK                                 0x10
#define _OSCCON1_NOSC1_POSN                                 0x5
#define _OSCCON1_NOSC1_POSITION                             0x5
#define _OSCCON1_NOSC1_SIZE                                 0x1
#define _OSCCON1_NOSC1_LENGTH                               0x1
#define _OSCCON1_NOSC1_MASK                                 0x20
#define _OSCCON1_NOSC2_POSN                                 0x6
#define _OSCCON1_NOSC2_POSITION                             0x6
#define _OSCCON1_NOSC2_SIZE                                 0x1
#define _OSCCON1_NOSC2_LENGTH                               0x1
#define _OSCCON1_NOSC2_MASK                                 0x40

// Register: OSCCON2
extern volatile unsigned char           OSCCON2             @ 0x91A;
#ifndef _LIB_BUILD
asm("OSCCON2 equ 091Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CDIV                   :4;
        unsigned COSC                   :3;
    };
    struct {
        unsigned CDIV0                  :1;
        unsigned CDIV1                  :1;
        unsigned CDIV2                  :1;
        unsigned CDIV3                  :1;
        unsigned COSC0                  :1;
        unsigned COSC1                  :1;
        unsigned COSC2                  :1;
    };
} OSCCON2bits_t;
extern volatile OSCCON2bits_t OSCCON2bits @ 0x91A;
// bitfield macros
#define _OSCCON2_CDIV_POSN                                  0x0
#define _OSCCON2_CDIV_POSITION                              0x0
#define _OSCCON2_CDIV_SIZE                                  0x4
#define _OSCCON2_CDIV_LENGTH                                0x4
#define _OSCCON2_CDIV_MASK                                  0xF
#define _OSCCON2_COSC_POSN                                  0x4
#define _OSCCON2_COSC_POSITION                              0x4
#define _OSCCON2_COSC_SIZE                                  0x3
#define _OSCCON2_COSC_LENGTH                                0x3
#define _OSCCON2_COSC_MASK                                  0x70
#define _OSCCON2_CDIV0_POSN                                 0x0
#define _OSCCON2_CDIV0_POSITION                             0x0
#define _OSCCON2_CDIV0_SIZE                                 0x1
#define _OSCCON2_CDIV0_LENGTH                               0x1
#define _OSCCON2_CDIV0_MASK                                 0x1
#define _OSCCON2_CDIV1_POSN                                 0x1
#define _OSCCON2_CDIV1_POSITION                             0x1
#define _OSCCON2_CDIV1_SIZE                                 0x1
#define _OSCCON2_CDIV1_LENGTH                               0x1
#define _OSCCON2_CDIV1_MASK                                 0x2
#define _OSCCON2_CDIV2_POSN                                 0x2
#define _OSCCON2_CDIV2_POSITION                             0x2
#define _OSCCON2_CDIV2_SIZE                                 0x1
#define _OSCCON2_CDIV2_LENGTH                               0x1
#define _OSCCON2_CDIV2_MASK                                 0x4
#define _OSCCON2_CDIV3_POSN                                 0x3
#define _OSCCON2_CDIV3_POSITION                             0x3
#define _OSCCON2_CDIV3_SIZE                                 0x1
#define _OSCCON2_CDIV3_LENGTH                               0x1
#define _OSCCON2_CDIV3_MASK                                 0x8
#define _OSCCON2_COSC0_POSN                                 0x4
#define _OSCCON2_COSC0_POSITION                             0x4
#define _OSCCON2_COSC0_SIZE                                 0x1
#define _OSCCON2_COSC0_LENGTH                               0x1
#define _OSCCON2_COSC0_MASK                                 0x10
#define _OSCCON2_COSC1_POSN                                 0x5
#define _OSCCON2_COSC1_POSITION                             0x5
#define _OSCCON2_COSC1_SIZE                                 0x1
#define _OSCCON2_COSC1_LENGTH                               0x1
#define _OSCCON2_COSC1_MASK                                 0x20
#define _OSCCON2_COSC2_POSN                                 0x6
#define _OSCCON2_COSC2_POSITION                             0x6
#define _OSCCON2_COSC2_SIZE                                 0x1
#define _OSCCON2_COSC2_LENGTH                               0x1
#define _OSCCON2_COSC2_MASK                                 0x40

// Register: OSCCON3
extern volatile unsigned char           OSCCON3             @ 0x91B;
#ifndef _LIB_BUILD
asm("OSCCON3 equ 091Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :3;
        unsigned NOSCR                  :1;
        unsigned ORDY                   :1;
        unsigned SOSCBE                 :1;
        unsigned SOSCPWR                :1;
        unsigned CSWHOLD                :1;
    };
} OSCCON3bits_t;
extern volatile OSCCON3bits_t OSCCON3bits @ 0x91B;
// bitfield macros
#define _OSCCON3_NOSCR_POSN                                 0x3
#define _OSCCON3_NOSCR_POSITION                             0x3
#define _OSCCON3_NOSCR_SIZE                                 0x1
#define _OSCCON3_NOSCR_LENGTH                               0x1
#define _OSCCON3_NOSCR_MASK                                 0x8
#define _OSCCON3_ORDY_POSN                                  0x4
#define _OSCCON3_ORDY_POSITION                              0x4
#define _OSCCON3_ORDY_SIZE                                  0x1
#define _OSCCON3_ORDY_LENGTH                                0x1
#define _OSCCON3_ORDY_MASK                                  0x10
#define _OSCCON3_SOSCBE_POSN                                0x5
#define _OSCCON3_SOSCBE_POSITION                            0x5
#define _OSCCON3_SOSCBE_SIZE                                0x1
#define _OSCCON3_SOSCBE_LENGTH                              0x1
#define _OSCCON3_SOSCBE_MASK                                0x20
#define _OSCCON3_SOSCPWR_POSN                               0x6
#define _OSCCON3_SOSCPWR_POSITION                           0x6
#define _OSCCON3_SOSCPWR_SIZE                               0x1
#define _OSCCON3_SOSCPWR_LENGTH                             0x1
#define _OSCCON3_SOSCPWR_MASK                               0x40
#define _OSCCON3_CSWHOLD_POSN                               0x7
#define _OSCCON3_CSWHOLD_POSITION                           0x7
#define _OSCCON3_CSWHOLD_SIZE                               0x1
#define _OSCCON3_CSWHOLD_LENGTH                             0x1
#define _OSCCON3_CSWHOLD_MASK                               0x80

// Register: OSCSTAT1
extern volatile unsigned char           OSCSTAT1            @ 0x91C;
#ifndef _LIB_BUILD
asm("OSCSTAT1 equ 091Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PLLR                   :1;
        unsigned                        :1;
        unsigned ADOR                   :1;
        unsigned SOR                    :1;
        unsigned LFOR                   :1;
        unsigned                        :1;
        unsigned HFOR                   :1;
        unsigned EXTOR                  :1;
    };
} OSCSTAT1bits_t;
extern volatile OSCSTAT1bits_t OSCSTAT1bits @ 0x91C;
// bitfield macros
#define _OSCSTAT1_PLLR_POSN                                 0x0
#define _OSCSTAT1_PLLR_POSITION                             0x0
#define _OSCSTAT1_PLLR_SIZE                                 0x1
#define _OSCSTAT1_PLLR_LENGTH                               0x1
#define _OSCSTAT1_PLLR_MASK                                 0x1
#define _OSCSTAT1_ADOR_POSN                                 0x2
#define _OSCSTAT1_ADOR_POSITION                             0x2
#define _OSCSTAT1_ADOR_SIZE                                 0x1
#define _OSCSTAT1_ADOR_LENGTH                               0x1
#define _OSCSTAT1_ADOR_MASK                                 0x4
#define _OSCSTAT1_SOR_POSN                                  0x3
#define _OSCSTAT1_SOR_POSITION                              0x3
#define _OSCSTAT1_SOR_SIZE                                  0x1
#define _OSCSTAT1_SOR_LENGTH                                0x1
#define _OSCSTAT1_SOR_MASK                                  0x8
#define _OSCSTAT1_LFOR_POSN                                 0x4
#define _OSCSTAT1_LFOR_POSITION                             0x4
#define _OSCSTAT1_LFOR_SIZE                                 0x1
#define _OSCSTAT1_LFOR_LENGTH                               0x1
#define _OSCSTAT1_LFOR_MASK                                 0x10
#define _OSCSTAT1_HFOR_POSN                                 0x6
#define _OSCSTAT1_HFOR_POSITION                             0x6
#define _OSCSTAT1_HFOR_SIZE                                 0x1
#define _OSCSTAT1_HFOR_LENGTH                               0x1
#define _OSCSTAT1_HFOR_MASK                                 0x40
#define _OSCSTAT1_EXTOR_POSN                                0x7
#define _OSCSTAT1_EXTOR_POSITION                            0x7
#define _OSCSTAT1_EXTOR_SIZE                                0x1
#define _OSCSTAT1_EXTOR_LENGTH                              0x1
#define _OSCSTAT1_EXTOR_MASK                                0x80

// Register: OSCEN
extern volatile unsigned char           OSCEN               @ 0x91D;
#ifndef _LIB_BUILD
asm("OSCEN equ 091Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned ADOEN                  :1;
        unsigned SOSCEN                 :1;
        unsigned LFOEN                  :1;
        unsigned                        :1;
        unsigned HFOEN                  :1;
        unsigned EXTOEN                 :1;
    };
} OSCENbits_t;
extern volatile OSCENbits_t OSCENbits @ 0x91D;
// bitfield macros
#define _OSCEN_ADOEN_POSN                                   0x2
#define _OSCEN_ADOEN_POSITION                               0x2
#define _OSCEN_ADOEN_SIZE                                   0x1
#define _OSCEN_ADOEN_LENGTH                                 0x1
#define _OSCEN_ADOEN_MASK                                   0x4
#define _OSCEN_SOSCEN_POSN                                  0x3
#define _OSCEN_SOSCEN_POSITION                              0x3
#define _OSCEN_SOSCEN_SIZE                                  0x1
#define _OSCEN_SOSCEN_LENGTH                                0x1
#define _OSCEN_SOSCEN_MASK                                  0x8
#define _OSCEN_LFOEN_POSN                                   0x4
#define _OSCEN_LFOEN_POSITION                               0x4
#define _OSCEN_LFOEN_SIZE                                   0x1
#define _OSCEN_LFOEN_LENGTH                                 0x1
#define _OSCEN_LFOEN_MASK                                   0x10
#define _OSCEN_HFOEN_POSN                                   0x6
#define _OSCEN_HFOEN_POSITION                               0x6
#define _OSCEN_HFOEN_SIZE                                   0x1
#define _OSCEN_HFOEN_LENGTH                                 0x1
#define _OSCEN_HFOEN_MASK                                   0x40
#define _OSCEN_EXTOEN_POSN                                  0x7
#define _OSCEN_EXTOEN_POSITION                              0x7
#define _OSCEN_EXTOEN_SIZE                                  0x1
#define _OSCEN_EXTOEN_LENGTH                                0x1
#define _OSCEN_EXTOEN_MASK                                  0x80

// Register: OSCTUNE
extern volatile unsigned char           OSCTUNE             @ 0x91E;
#ifndef _LIB_BUILD
asm("OSCTUNE equ 091Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned HFTUN                  :6;
    };
    struct {
        unsigned HFTUN0                 :1;
        unsigned HFTUN1                 :1;
        unsigned HFTUN2                 :1;
        unsigned HFTUN3                 :1;
        unsigned HFTUN4                 :1;
        unsigned HFTUN5                 :1;
    };
} OSCTUNEbits_t;
extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x91E;
// bitfield macros
#define _OSCTUNE_HFTUN_POSN                                 0x0
#define _OSCTUNE_HFTUN_POSITION                             0x0
#define _OSCTUNE_HFTUN_SIZE                                 0x6
#define _OSCTUNE_HFTUN_LENGTH                               0x6
#define _OSCTUNE_HFTUN_MASK                                 0x3F
#define _OSCTUNE_HFTUN0_POSN                                0x0
#define _OSCTUNE_HFTUN0_POSITION                            0x0
#define _OSCTUNE_HFTUN0_SIZE                                0x1
#define _OSCTUNE_HFTUN0_LENGTH                              0x1
#define _OSCTUNE_HFTUN0_MASK                                0x1
#define _OSCTUNE_HFTUN1_POSN                                0x1
#define _OSCTUNE_HFTUN1_POSITION                            0x1
#define _OSCTUNE_HFTUN1_SIZE                                0x1
#define _OSCTUNE_HFTUN1_LENGTH                              0x1
#define _OSCTUNE_HFTUN1_MASK                                0x2
#define _OSCTUNE_HFTUN2_POSN                                0x2
#define _OSCTUNE_HFTUN2_POSITION                            0x2
#define _OSCTUNE_HFTUN2_SIZE                                0x1
#define _OSCTUNE_HFTUN2_LENGTH                              0x1
#define _OSCTUNE_HFTUN2_MASK                                0x4
#define _OSCTUNE_HFTUN3_POSN                                0x3
#define _OSCTUNE_HFTUN3_POSITION                            0x3
#define _OSCTUNE_HFTUN3_SIZE                                0x1
#define _OSCTUNE_HFTUN3_LENGTH                              0x1
#define _OSCTUNE_HFTUN3_MASK                                0x8
#define _OSCTUNE_HFTUN4_POSN                                0x4
#define _OSCTUNE_HFTUN4_POSITION                            0x4
#define _OSCTUNE_HFTUN4_SIZE                                0x1
#define _OSCTUNE_HFTUN4_LENGTH                              0x1
#define _OSCTUNE_HFTUN4_MASK                                0x10
#define _OSCTUNE_HFTUN5_POSN                                0x5
#define _OSCTUNE_HFTUN5_POSITION                            0x5
#define _OSCTUNE_HFTUN5_SIZE                                0x1
#define _OSCTUNE_HFTUN5_LENGTH                              0x1
#define _OSCTUNE_HFTUN5_MASK                                0x20

// Register: OSCFRQ
extern volatile unsigned char           OSCFRQ              @ 0x91F;
#ifndef _LIB_BUILD
asm("OSCFRQ equ 091Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned HFFRQ                  :4;
    };
    struct {
        unsigned HFFRQ0                 :1;
        unsigned HFFRQ1                 :1;
        unsigned HFFRQ2                 :1;
        unsigned HFFRQ3                 :1;
    };
} OSCFRQbits_t;
extern volatile OSCFRQbits_t OSCFRQbits @ 0x91F;
// bitfield macros
#define _OSCFRQ_HFFRQ_POSN                                  0x0
#define _OSCFRQ_HFFRQ_POSITION                              0x0
#define _OSCFRQ_HFFRQ_SIZE                                  0x4
#define _OSCFRQ_HFFRQ_LENGTH                                0x4
#define _OSCFRQ_HFFRQ_MASK                                  0xF
#define _OSCFRQ_HFFRQ0_POSN                                 0x0
#define _OSCFRQ_HFFRQ0_POSITION                             0x0
#define _OSCFRQ_HFFRQ0_SIZE                                 0x1
#define _OSCFRQ_HFFRQ0_LENGTH                               0x1
#define _OSCFRQ_HFFRQ0_MASK                                 0x1
#define _OSCFRQ_HFFRQ1_POSN                                 0x1
#define _OSCFRQ_HFFRQ1_POSITION                             0x1
#define _OSCFRQ_HFFRQ1_SIZE                                 0x1
#define _OSCFRQ_HFFRQ1_LENGTH                               0x1
#define _OSCFRQ_HFFRQ1_MASK                                 0x2
#define _OSCFRQ_HFFRQ2_POSN                                 0x2
#define _OSCFRQ_HFFRQ2_POSITION                             0x2
#define _OSCFRQ_HFFRQ2_SIZE                                 0x1
#define _OSCFRQ_HFFRQ2_LENGTH                               0x1
#define _OSCFRQ_HFFRQ2_MASK                                 0x4
#define _OSCFRQ_HFFRQ3_POSN                                 0x3
#define _OSCFRQ_HFFRQ3_POSITION                             0x3
#define _OSCFRQ_HFFRQ3_SIZE                                 0x1
#define _OSCFRQ_HFFRQ3_LENGTH                               0x1
#define _OSCFRQ_HFFRQ3_MASK                                 0x8

// Register: PPSLOCK
extern volatile unsigned char           PPSLOCK             @ 0xE0F;
#ifndef _LIB_BUILD
asm("PPSLOCK equ 0E0Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PPSLOCKED              :1;
    };
} PPSLOCKbits_t;
extern volatile PPSLOCKbits_t PPSLOCKbits @ 0xE0F;
// bitfield macros
#define _PPSLOCK_PPSLOCKED_POSN                             0x0
#define _PPSLOCK_PPSLOCKED_POSITION                         0x0
#define _PPSLOCK_PPSLOCKED_SIZE                             0x1
#define _PPSLOCK_PPSLOCKED_LENGTH                           0x1
#define _PPSLOCK_PPSLOCKED_MASK                             0x1

// Register: INTPPS
extern volatile unsigned char           INTPPS              @ 0xE10;
#ifndef _LIB_BUILD
asm("INTPPS equ 0E10h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTPPS                 :5;
    };
    struct {
        unsigned INTPPS0                :1;
        unsigned INTPPS1                :1;
        unsigned INTPPS2                :1;
        unsigned INTPPS3                :1;
        unsigned INTPPS4                :1;
    };
} INTPPSbits_t;
extern volatile INTPPSbits_t INTPPSbits @ 0xE10;
// bitfield macros
#define _INTPPS_INTPPS_POSN                                 0x0
#define _INTPPS_INTPPS_POSITION                             0x0
#define _INTPPS_INTPPS_SIZE                                 0x5
#define _INTPPS_INTPPS_LENGTH                               0x5
#define _INTPPS_INTPPS_MASK                                 0x1F
#define _INTPPS_INTPPS0_POSN                                0x0
#define _INTPPS_INTPPS0_POSITION                            0x0
#define _INTPPS_INTPPS0_SIZE                                0x1
#define _INTPPS_INTPPS0_LENGTH                              0x1
#define _INTPPS_INTPPS0_MASK                                0x1
#define _INTPPS_INTPPS1_POSN                                0x1
#define _INTPPS_INTPPS1_POSITION                            0x1
#define _INTPPS_INTPPS1_SIZE                                0x1
#define _INTPPS_INTPPS1_LENGTH                              0x1
#define _INTPPS_INTPPS1_MASK                                0x2
#define _INTPPS_INTPPS2_POSN                                0x2
#define _INTPPS_INTPPS2_POSITION                            0x2
#define _INTPPS_INTPPS2_SIZE                                0x1
#define _INTPPS_INTPPS2_LENGTH                              0x1
#define _INTPPS_INTPPS2_MASK                                0x4
#define _INTPPS_INTPPS3_POSN                                0x3
#define _INTPPS_INTPPS3_POSITION                            0x3
#define _INTPPS_INTPPS3_SIZE                                0x1
#define _INTPPS_INTPPS3_LENGTH                              0x1
#define _INTPPS_INTPPS3_MASK                                0x8
#define _INTPPS_INTPPS4_POSN                                0x4
#define _INTPPS_INTPPS4_POSITION                            0x4
#define _INTPPS_INTPPS4_SIZE                                0x1
#define _INTPPS_INTPPS4_LENGTH                              0x1
#define _INTPPS_INTPPS4_MASK                                0x10

// Register: T0CKIPPS
extern volatile unsigned char           T0CKIPPS            @ 0xE11;
#ifndef _LIB_BUILD
asm("T0CKIPPS equ 0E11h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T0CKIPPS               :5;
    };
    struct {
        unsigned T0CKIPPS0              :1;
        unsigned T0CKIPPS1              :1;
        unsigned T0CKIPPS2              :1;
        unsigned T0CKIPPS3              :1;
        unsigned T0CKIPPS4              :1;
    };
} T0CKIPPSbits_t;
extern volatile T0CKIPPSbits_t T0CKIPPSbits @ 0xE11;
// bitfield macros
#define _T0CKIPPS_T0CKIPPS_POSN                             0x0
#define _T0CKIPPS_T0CKIPPS_POSITION                         0x0
#define _T0CKIPPS_T0CKIPPS_SIZE                             0x5
#define _T0CKIPPS_T0CKIPPS_LENGTH                           0x5
#define _T0CKIPPS_T0CKIPPS_MASK                             0x1F
#define _T0CKIPPS_T0CKIPPS0_POSN                            0x0
#define _T0CKIPPS_T0CKIPPS0_POSITION                        0x0
#define _T0CKIPPS_T0CKIPPS0_SIZE                            0x1
#define _T0CKIPPS_T0CKIPPS0_LENGTH                          0x1
#define _T0CKIPPS_T0CKIPPS0_MASK                            0x1
#define _T0CKIPPS_T0CKIPPS1_POSN                            0x1
#define _T0CKIPPS_T0CKIPPS1_POSITION                        0x1
#define _T0CKIPPS_T0CKIPPS1_SIZE                            0x1
#define _T0CKIPPS_T0CKIPPS1_LENGTH                          0x1
#define _T0CKIPPS_T0CKIPPS1_MASK                            0x2
#define _T0CKIPPS_T0CKIPPS2_POSN                            0x2
#define _T0CKIPPS_T0CKIPPS2_POSITION                        0x2
#define _T0CKIPPS_T0CKIPPS2_SIZE                            0x1
#define _T0CKIPPS_T0CKIPPS2_LENGTH                          0x1
#define _T0CKIPPS_T0CKIPPS2_MASK                            0x4
#define _T0CKIPPS_T0CKIPPS3_POSN                            0x3
#define _T0CKIPPS_T0CKIPPS3_POSITION                        0x3
#define _T0CKIPPS_T0CKIPPS3_SIZE                            0x1
#define _T0CKIPPS_T0CKIPPS3_LENGTH                          0x1
#define _T0CKIPPS_T0CKIPPS3_MASK                            0x8
#define _T0CKIPPS_T0CKIPPS4_POSN                            0x4
#define _T0CKIPPS_T0CKIPPS4_POSITION                        0x4
#define _T0CKIPPS_T0CKIPPS4_SIZE                            0x1
#define _T0CKIPPS_T0CKIPPS4_LENGTH                          0x1
#define _T0CKIPPS_T0CKIPPS4_MASK                            0x10

// Register: T1CKIPPS
extern volatile unsigned char           T1CKIPPS            @ 0xE12;
#ifndef _LIB_BUILD
asm("T1CKIPPS equ 0E12h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T1CKIPPS               :5;
    };
    struct {
        unsigned T1CKIPPS0              :1;
        unsigned T1CKIPPS1              :1;
        unsigned T1CKIPPS2              :1;
        unsigned T1CKIPPS3              :1;
        unsigned T1CKIPPS4              :1;
    };
} T1CKIPPSbits_t;
extern volatile T1CKIPPSbits_t T1CKIPPSbits @ 0xE12;
// bitfield macros
#define _T1CKIPPS_T1CKIPPS_POSN                             0x0
#define _T1CKIPPS_T1CKIPPS_POSITION                         0x0
#define _T1CKIPPS_T1CKIPPS_SIZE                             0x5
#define _T1CKIPPS_T1CKIPPS_LENGTH                           0x5
#define _T1CKIPPS_T1CKIPPS_MASK                             0x1F
#define _T1CKIPPS_T1CKIPPS0_POSN                            0x0
#define _T1CKIPPS_T1CKIPPS0_POSITION                        0x0
#define _T1CKIPPS_T1CKIPPS0_SIZE                            0x1
#define _T1CKIPPS_T1CKIPPS0_LENGTH                          0x1
#define _T1CKIPPS_T1CKIPPS0_MASK                            0x1
#define _T1CKIPPS_T1CKIPPS1_POSN                            0x1
#define _T1CKIPPS_T1CKIPPS1_POSITION                        0x1
#define _T1CKIPPS_T1CKIPPS1_SIZE                            0x1
#define _T1CKIPPS_T1CKIPPS1_LENGTH                          0x1
#define _T1CKIPPS_T1CKIPPS1_MASK                            0x2
#define _T1CKIPPS_T1CKIPPS2_POSN                            0x2
#define _T1CKIPPS_T1CKIPPS2_POSITION                        0x2
#define _T1CKIPPS_T1CKIPPS2_SIZE                            0x1
#define _T1CKIPPS_T1CKIPPS2_LENGTH                          0x1
#define _T1CKIPPS_T1CKIPPS2_MASK                            0x4
#define _T1CKIPPS_T1CKIPPS3_POSN                            0x3
#define _T1CKIPPS_T1CKIPPS3_POSITION                        0x3
#define _T1CKIPPS_T1CKIPPS3_SIZE                            0x1
#define _T1CKIPPS_T1CKIPPS3_LENGTH                          0x1
#define _T1CKIPPS_T1CKIPPS3_MASK                            0x8
#define _T1CKIPPS_T1CKIPPS4_POSN                            0x4
#define _T1CKIPPS_T1CKIPPS4_POSITION                        0x4
#define _T1CKIPPS_T1CKIPPS4_SIZE                            0x1
#define _T1CKIPPS_T1CKIPPS4_LENGTH                          0x1
#define _T1CKIPPS_T1CKIPPS4_MASK                            0x10

// Register: T1GPPS
extern volatile unsigned char           T1GPPS              @ 0xE13;
#ifndef _LIB_BUILD
asm("T1GPPS equ 0E13h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T1GPPS                 :5;
    };
    struct {
        unsigned T1GPPS0                :1;
        unsigned T1GPPS1                :1;
        unsigned T1GPPS2                :1;
        unsigned T1GPPS3                :1;
        unsigned T1GPPS4                :1;
    };
} T1GPPSbits_t;
extern volatile T1GPPSbits_t T1GPPSbits @ 0xE13;
// bitfield macros
#define _T1GPPS_T1GPPS_POSN                                 0x0
#define _T1GPPS_T1GPPS_POSITION                             0x0
#define _T1GPPS_T1GPPS_SIZE                                 0x5
#define _T1GPPS_T1GPPS_LENGTH                               0x5
#define _T1GPPS_T1GPPS_MASK                                 0x1F
#define _T1GPPS_T1GPPS0_POSN                                0x0
#define _T1GPPS_T1GPPS0_POSITION                            0x0
#define _T1GPPS_T1GPPS0_SIZE                                0x1
#define _T1GPPS_T1GPPS0_LENGTH                              0x1
#define _T1GPPS_T1GPPS0_MASK                                0x1
#define _T1GPPS_T1GPPS1_POSN                                0x1
#define _T1GPPS_T1GPPS1_POSITION                            0x1
#define _T1GPPS_T1GPPS1_SIZE                                0x1
#define _T1GPPS_T1GPPS1_LENGTH                              0x1
#define _T1GPPS_T1GPPS1_MASK                                0x2
#define _T1GPPS_T1GPPS2_POSN                                0x2
#define _T1GPPS_T1GPPS2_POSITION                            0x2
#define _T1GPPS_T1GPPS2_SIZE                                0x1
#define _T1GPPS_T1GPPS2_LENGTH                              0x1
#define _T1GPPS_T1GPPS2_MASK                                0x4
#define _T1GPPS_T1GPPS3_POSN                                0x3
#define _T1GPPS_T1GPPS3_POSITION                            0x3
#define _T1GPPS_T1GPPS3_SIZE                                0x1
#define _T1GPPS_T1GPPS3_LENGTH                              0x1
#define _T1GPPS_T1GPPS3_MASK                                0x8
#define _T1GPPS_T1GPPS4_POSN                                0x4
#define _T1GPPS_T1GPPS4_POSITION                            0x4
#define _T1GPPS_T1GPPS4_SIZE                                0x1
#define _T1GPPS_T1GPPS4_LENGTH                              0x1
#define _T1GPPS_T1GPPS4_MASK                                0x10

// Register: CCP1PPS
extern volatile unsigned char           CCP1PPS             @ 0xE14;
#ifndef _LIB_BUILD
asm("CCP1PPS equ 0E14h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP1PPS                :5;
    };
    struct {
        unsigned CCP1PPS0               :1;
        unsigned CCP1PPS1               :1;
        unsigned CCP1PPS2               :1;
        unsigned CCP1PPS3               :1;
        unsigned CCP1PPS4               :1;
    };
} CCP1PPSbits_t;
extern volatile CCP1PPSbits_t CCP1PPSbits @ 0xE14;
// bitfield macros
#define _CCP1PPS_CCP1PPS_POSN                               0x0
#define _CCP1PPS_CCP1PPS_POSITION                           0x0
#define _CCP1PPS_CCP1PPS_SIZE                               0x5
#define _CCP1PPS_CCP1PPS_LENGTH                             0x5
#define _CCP1PPS_CCP1PPS_MASK                               0x1F
#define _CCP1PPS_CCP1PPS0_POSN                              0x0
#define _CCP1PPS_CCP1PPS0_POSITION                          0x0
#define _CCP1PPS_CCP1PPS0_SIZE                              0x1
#define _CCP1PPS_CCP1PPS0_LENGTH                            0x1
#define _CCP1PPS_CCP1PPS0_MASK                              0x1
#define _CCP1PPS_CCP1PPS1_POSN                              0x1
#define _CCP1PPS_CCP1PPS1_POSITION                          0x1
#define _CCP1PPS_CCP1PPS1_SIZE                              0x1
#define _CCP1PPS_CCP1PPS1_LENGTH                            0x1
#define _CCP1PPS_CCP1PPS1_MASK                              0x2
#define _CCP1PPS_CCP1PPS2_POSN                              0x2
#define _CCP1PPS_CCP1PPS2_POSITION                          0x2
#define _CCP1PPS_CCP1PPS2_SIZE                              0x1
#define _CCP1PPS_CCP1PPS2_LENGTH                            0x1
#define _CCP1PPS_CCP1PPS2_MASK                              0x4
#define _CCP1PPS_CCP1PPS3_POSN                              0x3
#define _CCP1PPS_CCP1PPS3_POSITION                          0x3
#define _CCP1PPS_CCP1PPS3_SIZE                              0x1
#define _CCP1PPS_CCP1PPS3_LENGTH                            0x1
#define _CCP1PPS_CCP1PPS3_MASK                              0x8
#define _CCP1PPS_CCP1PPS4_POSN                              0x4
#define _CCP1PPS_CCP1PPS4_POSITION                          0x4
#define _CCP1PPS_CCP1PPS4_SIZE                              0x1
#define _CCP1PPS_CCP1PPS4_LENGTH                            0x1
#define _CCP1PPS_CCP1PPS4_MASK                              0x10

// Register: CCP2PPS
extern volatile unsigned char           CCP2PPS             @ 0xE15;
#ifndef _LIB_BUILD
asm("CCP2PPS equ 0E15h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2PPS                :5;
    };
    struct {
        unsigned CCP2PPS0               :1;
        unsigned CCP2PPS1               :1;
        unsigned CCP2PPS2               :1;
        unsigned CCP2PPS3               :1;
        unsigned CCP2PPS4               :1;
    };
} CCP2PPSbits_t;
extern volatile CCP2PPSbits_t CCP2PPSbits @ 0xE15;
// bitfield macros
#define _CCP2PPS_CCP2PPS_POSN                               0x0
#define _CCP2PPS_CCP2PPS_POSITION                           0x0
#define _CCP2PPS_CCP2PPS_SIZE                               0x5
#define _CCP2PPS_CCP2PPS_LENGTH                             0x5
#define _CCP2PPS_CCP2PPS_MASK                               0x1F
#define _CCP2PPS_CCP2PPS0_POSN                              0x0
#define _CCP2PPS_CCP2PPS0_POSITION                          0x0
#define _CCP2PPS_CCP2PPS0_SIZE                              0x1
#define _CCP2PPS_CCP2PPS0_LENGTH                            0x1
#define _CCP2PPS_CCP2PPS0_MASK                              0x1
#define _CCP2PPS_CCP2PPS1_POSN                              0x1
#define _CCP2PPS_CCP2PPS1_POSITION                          0x1
#define _CCP2PPS_CCP2PPS1_SIZE                              0x1
#define _CCP2PPS_CCP2PPS1_LENGTH                            0x1
#define _CCP2PPS_CCP2PPS1_MASK                              0x2
#define _CCP2PPS_CCP2PPS2_POSN                              0x2
#define _CCP2PPS_CCP2PPS2_POSITION                          0x2
#define _CCP2PPS_CCP2PPS2_SIZE                              0x1
#define _CCP2PPS_CCP2PPS2_LENGTH                            0x1
#define _CCP2PPS_CCP2PPS2_MASK                              0x4
#define _CCP2PPS_CCP2PPS3_POSN                              0x3
#define _CCP2PPS_CCP2PPS3_POSITION                          0x3
#define _CCP2PPS_CCP2PPS3_SIZE                              0x1
#define _CCP2PPS_CCP2PPS3_LENGTH                            0x1
#define _CCP2PPS_CCP2PPS3_MASK                              0x8
#define _CCP2PPS_CCP2PPS4_POSN                              0x4
#define _CCP2PPS_CCP2PPS4_POSITION                          0x4
#define _CCP2PPS_CCP2PPS4_SIZE                              0x1
#define _CCP2PPS_CCP2PPS4_LENGTH                            0x1
#define _CCP2PPS_CCP2PPS4_MASK                              0x10

// Register: CCP3PPS
extern volatile unsigned char           CCP3PPS             @ 0xE16;
#ifndef _LIB_BUILD
asm("CCP3PPS equ 0E16h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP3PPS                :5;
    };
    struct {
        unsigned CCP3PPS0               :1;
        unsigned CCP3PPS1               :1;
        unsigned CCP3PPS2               :1;
        unsigned CCP3PPS3               :1;
        unsigned CCP3PPS4               :1;
    };
} CCP3PPSbits_t;
extern volatile CCP3PPSbits_t CCP3PPSbits @ 0xE16;
// bitfield macros
#define _CCP3PPS_CCP3PPS_POSN                               0x0
#define _CCP3PPS_CCP3PPS_POSITION                           0x0
#define _CCP3PPS_CCP3PPS_SIZE                               0x5
#define _CCP3PPS_CCP3PPS_LENGTH                             0x5
#define _CCP3PPS_CCP3PPS_MASK                               0x1F
#define _CCP3PPS_CCP3PPS0_POSN                              0x0
#define _CCP3PPS_CCP3PPS0_POSITION                          0x0
#define _CCP3PPS_CCP3PPS0_SIZE                              0x1
#define _CCP3PPS_CCP3PPS0_LENGTH                            0x1
#define _CCP3PPS_CCP3PPS0_MASK                              0x1
#define _CCP3PPS_CCP3PPS1_POSN                              0x1
#define _CCP3PPS_CCP3PPS1_POSITION                          0x1
#define _CCP3PPS_CCP3PPS1_SIZE                              0x1
#define _CCP3PPS_CCP3PPS1_LENGTH                            0x1
#define _CCP3PPS_CCP3PPS1_MASK                              0x2
#define _CCP3PPS_CCP3PPS2_POSN                              0x2
#define _CCP3PPS_CCP3PPS2_POSITION                          0x2
#define _CCP3PPS_CCP3PPS2_SIZE                              0x1
#define _CCP3PPS_CCP3PPS2_LENGTH                            0x1
#define _CCP3PPS_CCP3PPS2_MASK                              0x4
#define _CCP3PPS_CCP3PPS3_POSN                              0x3
#define _CCP3PPS_CCP3PPS3_POSITION                          0x3
#define _CCP3PPS_CCP3PPS3_SIZE                              0x1
#define _CCP3PPS_CCP3PPS3_LENGTH                            0x1
#define _CCP3PPS_CCP3PPS3_MASK                              0x8
#define _CCP3PPS_CCP3PPS4_POSN                              0x4
#define _CCP3PPS_CCP3PPS4_POSITION                          0x4
#define _CCP3PPS_CCP3PPS4_SIZE                              0x1
#define _CCP3PPS_CCP3PPS4_LENGTH                            0x1
#define _CCP3PPS_CCP3PPS4_MASK                              0x10

// Register: CCP4PPS
extern volatile unsigned char           CCP4PPS             @ 0xE17;
#ifndef _LIB_BUILD
asm("CCP4PPS equ 0E17h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP4PPS                :5;
    };
    struct {
        unsigned CCP4PPS0               :1;
        unsigned CCP4PPS1               :1;
        unsigned CCP4PPS2               :1;
        unsigned CCP4PPS3               :1;
        unsigned CCP4PPS4               :1;
    };
} CCP4PPSbits_t;
extern volatile CCP4PPSbits_t CCP4PPSbits @ 0xE17;
// bitfield macros
#define _CCP4PPS_CCP4PPS_POSN                               0x0
#define _CCP4PPS_CCP4PPS_POSITION                           0x0
#define _CCP4PPS_CCP4PPS_SIZE                               0x5
#define _CCP4PPS_CCP4PPS_LENGTH                             0x5
#define _CCP4PPS_CCP4PPS_MASK                               0x1F
#define _CCP4PPS_CCP4PPS0_POSN                              0x0
#define _CCP4PPS_CCP4PPS0_POSITION                          0x0
#define _CCP4PPS_CCP4PPS0_SIZE                              0x1
#define _CCP4PPS_CCP4PPS0_LENGTH                            0x1
#define _CCP4PPS_CCP4PPS0_MASK                              0x1
#define _CCP4PPS_CCP4PPS1_POSN                              0x1
#define _CCP4PPS_CCP4PPS1_POSITION                          0x1
#define _CCP4PPS_CCP4PPS1_SIZE                              0x1
#define _CCP4PPS_CCP4PPS1_LENGTH                            0x1
#define _CCP4PPS_CCP4PPS1_MASK                              0x2
#define _CCP4PPS_CCP4PPS2_POSN                              0x2
#define _CCP4PPS_CCP4PPS2_POSITION                          0x2
#define _CCP4PPS_CCP4PPS2_SIZE                              0x1
#define _CCP4PPS_CCP4PPS2_LENGTH                            0x1
#define _CCP4PPS_CCP4PPS2_MASK                              0x4
#define _CCP4PPS_CCP4PPS3_POSN                              0x3
#define _CCP4PPS_CCP4PPS3_POSITION                          0x3
#define _CCP4PPS_CCP4PPS3_SIZE                              0x1
#define _CCP4PPS_CCP4PPS3_LENGTH                            0x1
#define _CCP4PPS_CCP4PPS3_MASK                              0x8
#define _CCP4PPS_CCP4PPS4_POSN                              0x4
#define _CCP4PPS_CCP4PPS4_POSITION                          0x4
#define _CCP4PPS_CCP4PPS4_SIZE                              0x1
#define _CCP4PPS_CCP4PPS4_LENGTH                            0x1
#define _CCP4PPS_CCP4PPS4_MASK                              0x10

// Register: CWG1PPS
extern volatile unsigned char           CWG1PPS             @ 0xE18;
#ifndef _LIB_BUILD
asm("CWG1PPS equ 0E18h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CWG1PPS                :5;
    };
    struct {
        unsigned CWG1PPS0               :1;
        unsigned CWG1PPS1               :1;
        unsigned CWG1PPS2               :1;
        unsigned CWG1PPS3               :1;
        unsigned CWG1PPS4               :1;
    };
} CWG1PPSbits_t;
extern volatile CWG1PPSbits_t CWG1PPSbits @ 0xE18;
// bitfield macros
#define _CWG1PPS_CWG1PPS_POSN                               0x0
#define _CWG1PPS_CWG1PPS_POSITION                           0x0
#define _CWG1PPS_CWG1PPS_SIZE                               0x5
#define _CWG1PPS_CWG1PPS_LENGTH                             0x5
#define _CWG1PPS_CWG1PPS_MASK                               0x1F
#define _CWG1PPS_CWG1PPS0_POSN                              0x0
#define _CWG1PPS_CWG1PPS0_POSITION                          0x0
#define _CWG1PPS_CWG1PPS0_SIZE                              0x1
#define _CWG1PPS_CWG1PPS0_LENGTH                            0x1
#define _CWG1PPS_CWG1PPS0_MASK                              0x1
#define _CWG1PPS_CWG1PPS1_POSN                              0x1
#define _CWG1PPS_CWG1PPS1_POSITION                          0x1
#define _CWG1PPS_CWG1PPS1_SIZE                              0x1
#define _CWG1PPS_CWG1PPS1_LENGTH                            0x1
#define _CWG1PPS_CWG1PPS1_MASK                              0x2
#define _CWG1PPS_CWG1PPS2_POSN                              0x2
#define _CWG1PPS_CWG1PPS2_POSITION                          0x2
#define _CWG1PPS_CWG1PPS2_SIZE                              0x1
#define _CWG1PPS_CWG1PPS2_LENGTH                            0x1
#define _CWG1PPS_CWG1PPS2_MASK                              0x4
#define _CWG1PPS_CWG1PPS3_POSN                              0x3
#define _CWG1PPS_CWG1PPS3_POSITION                          0x3
#define _CWG1PPS_CWG1PPS3_SIZE                              0x1
#define _CWG1PPS_CWG1PPS3_LENGTH                            0x1
#define _CWG1PPS_CWG1PPS3_MASK                              0x8
#define _CWG1PPS_CWG1PPS4_POSN                              0x4
#define _CWG1PPS_CWG1PPS4_POSITION                          0x4
#define _CWG1PPS_CWG1PPS4_SIZE                              0x1
#define _CWG1PPS_CWG1PPS4_LENGTH                            0x1
#define _CWG1PPS_CWG1PPS4_MASK                              0x10

// Register: CWG2PPS
extern volatile unsigned char           CWG2PPS             @ 0xE19;
#ifndef _LIB_BUILD
asm("CWG2PPS equ 0E19h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CWG2PPS                :5;
    };
    struct {
        unsigned CWG2PPS0               :1;
        unsigned CWG2PPS1               :1;
        unsigned CWG2PPS2               :1;
        unsigned CWG2PPS3               :1;
        unsigned CWG2PPS4               :1;
    };
} CWG2PPSbits_t;
extern volatile CWG2PPSbits_t CWG2PPSbits @ 0xE19;
// bitfield macros
#define _CWG2PPS_CWG2PPS_POSN                               0x0
#define _CWG2PPS_CWG2PPS_POSITION                           0x0
#define _CWG2PPS_CWG2PPS_SIZE                               0x5
#define _CWG2PPS_CWG2PPS_LENGTH                             0x5
#define _CWG2PPS_CWG2PPS_MASK                               0x1F
#define _CWG2PPS_CWG2PPS0_POSN                              0x0
#define _CWG2PPS_CWG2PPS0_POSITION                          0x0
#define _CWG2PPS_CWG2PPS0_SIZE                              0x1
#define _CWG2PPS_CWG2PPS0_LENGTH                            0x1
#define _CWG2PPS_CWG2PPS0_MASK                              0x1
#define _CWG2PPS_CWG2PPS1_POSN                              0x1
#define _CWG2PPS_CWG2PPS1_POSITION                          0x1
#define _CWG2PPS_CWG2PPS1_SIZE                              0x1
#define _CWG2PPS_CWG2PPS1_LENGTH                            0x1
#define _CWG2PPS_CWG2PPS1_MASK                              0x2
#define _CWG2PPS_CWG2PPS2_POSN                              0x2
#define _CWG2PPS_CWG2PPS2_POSITION                          0x2
#define _CWG2PPS_CWG2PPS2_SIZE                              0x1
#define _CWG2PPS_CWG2PPS2_LENGTH                            0x1
#define _CWG2PPS_CWG2PPS2_MASK                              0x4
#define _CWG2PPS_CWG2PPS3_POSN                              0x3
#define _CWG2PPS_CWG2PPS3_POSITION                          0x3
#define _CWG2PPS_CWG2PPS3_SIZE                              0x1
#define _CWG2PPS_CWG2PPS3_LENGTH                            0x1
#define _CWG2PPS_CWG2PPS3_MASK                              0x8
#define _CWG2PPS_CWG2PPS4_POSN                              0x4
#define _CWG2PPS_CWG2PPS4_POSITION                          0x4
#define _CWG2PPS_CWG2PPS4_SIZE                              0x1
#define _CWG2PPS_CWG2PPS4_LENGTH                            0x1
#define _CWG2PPS_CWG2PPS4_MASK                              0x10

// Register: MDCIN1PPS
extern volatile unsigned char           MDCIN1PPS           @ 0xE1A;
#ifndef _LIB_BUILD
asm("MDCIN1PPS equ 0E1Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MDCIN1PPS              :5;
    };
    struct {
        unsigned MDCIN1PPS0             :1;
        unsigned MDCIN1PPS1             :1;
        unsigned MDCIN1PPS2             :1;
        unsigned MDCIN1PPS3             :1;
        unsigned MDCIN1PPS4             :1;
    };
} MDCIN1PPSbits_t;
extern volatile MDCIN1PPSbits_t MDCIN1PPSbits @ 0xE1A;
// bitfield macros
#define _MDCIN1PPS_MDCIN1PPS_POSN                           0x0
#define _MDCIN1PPS_MDCIN1PPS_POSITION                       0x0
#define _MDCIN1PPS_MDCIN1PPS_SIZE                           0x5
#define _MDCIN1PPS_MDCIN1PPS_LENGTH                         0x5
#define _MDCIN1PPS_MDCIN1PPS_MASK                           0x1F
#define _MDCIN1PPS_MDCIN1PPS0_POSN                          0x0
#define _MDCIN1PPS_MDCIN1PPS0_POSITION                      0x0
#define _MDCIN1PPS_MDCIN1PPS0_SIZE                          0x1
#define _MDCIN1PPS_MDCIN1PPS0_LENGTH                        0x1
#define _MDCIN1PPS_MDCIN1PPS0_MASK                          0x1
#define _MDCIN1PPS_MDCIN1PPS1_POSN                          0x1
#define _MDCIN1PPS_MDCIN1PPS1_POSITION                      0x1
#define _MDCIN1PPS_MDCIN1PPS1_SIZE                          0x1
#define _MDCIN1PPS_MDCIN1PPS1_LENGTH                        0x1
#define _MDCIN1PPS_MDCIN1PPS1_MASK                          0x2
#define _MDCIN1PPS_MDCIN1PPS2_POSN                          0x2
#define _MDCIN1PPS_MDCIN1PPS2_POSITION                      0x2
#define _MDCIN1PPS_MDCIN1PPS2_SIZE                          0x1
#define _MDCIN1PPS_MDCIN1PPS2_LENGTH                        0x1
#define _MDCIN1PPS_MDCIN1PPS2_MASK                          0x4
#define _MDCIN1PPS_MDCIN1PPS3_POSN                          0x3
#define _MDCIN1PPS_MDCIN1PPS3_POSITION                      0x3
#define _MDCIN1PPS_MDCIN1PPS3_SIZE                          0x1
#define _MDCIN1PPS_MDCIN1PPS3_LENGTH                        0x1
#define _MDCIN1PPS_MDCIN1PPS3_MASK                          0x8
#define _MDCIN1PPS_MDCIN1PPS4_POSN                          0x4
#define _MDCIN1PPS_MDCIN1PPS4_POSITION                      0x4
#define _MDCIN1PPS_MDCIN1PPS4_SIZE                          0x1
#define _MDCIN1PPS_MDCIN1PPS4_LENGTH                        0x1
#define _MDCIN1PPS_MDCIN1PPS4_MASK                          0x10

// Register: MDCIN2PPS
extern volatile unsigned char           MDCIN2PPS           @ 0xE1B;
#ifndef _LIB_BUILD
asm("MDCIN2PPS equ 0E1Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MDCIN2PPS              :5;
    };
    struct {
        unsigned MDCIN2PPS0             :1;
        unsigned MDCIN2PPS1             :1;
        unsigned MDCIN2PPS2             :1;
        unsigned MDCIN2PPS3             :1;
        unsigned MDCIN2PPS4             :1;
    };
} MDCIN2PPSbits_t;
extern volatile MDCIN2PPSbits_t MDCIN2PPSbits @ 0xE1B;
// bitfield macros
#define _MDCIN2PPS_MDCIN2PPS_POSN                           0x0
#define _MDCIN2PPS_MDCIN2PPS_POSITION                       0x0
#define _MDCIN2PPS_MDCIN2PPS_SIZE                           0x5
#define _MDCIN2PPS_MDCIN2PPS_LENGTH                         0x5
#define _MDCIN2PPS_MDCIN2PPS_MASK                           0x1F
#define _MDCIN2PPS_MDCIN2PPS0_POSN                          0x0
#define _MDCIN2PPS_MDCIN2PPS0_POSITION                      0x0
#define _MDCIN2PPS_MDCIN2PPS0_SIZE                          0x1
#define _MDCIN2PPS_MDCIN2PPS0_LENGTH                        0x1
#define _MDCIN2PPS_MDCIN2PPS0_MASK                          0x1
#define _MDCIN2PPS_MDCIN2PPS1_POSN                          0x1
#define _MDCIN2PPS_MDCIN2PPS1_POSITION                      0x1
#define _MDCIN2PPS_MDCIN2PPS1_SIZE                          0x1
#define _MDCIN2PPS_MDCIN2PPS1_LENGTH                        0x1
#define _MDCIN2PPS_MDCIN2PPS1_MASK                          0x2
#define _MDCIN2PPS_MDCIN2PPS2_POSN                          0x2
#define _MDCIN2PPS_MDCIN2PPS2_POSITION                      0x2
#define _MDCIN2PPS_MDCIN2PPS2_SIZE                          0x1
#define _MDCIN2PPS_MDCIN2PPS2_LENGTH                        0x1
#define _MDCIN2PPS_MDCIN2PPS2_MASK                          0x4
#define _MDCIN2PPS_MDCIN2PPS3_POSN                          0x3
#define _MDCIN2PPS_MDCIN2PPS3_POSITION                      0x3
#define _MDCIN2PPS_MDCIN2PPS3_SIZE                          0x1
#define _MDCIN2PPS_MDCIN2PPS3_LENGTH                        0x1
#define _MDCIN2PPS_MDCIN2PPS3_MASK                          0x8
#define _MDCIN2PPS_MDCIN2PPS4_POSN                          0x4
#define _MDCIN2PPS_MDCIN2PPS4_POSITION                      0x4
#define _MDCIN2PPS_MDCIN2PPS4_SIZE                          0x1
#define _MDCIN2PPS_MDCIN2PPS4_LENGTH                        0x1
#define _MDCIN2PPS_MDCIN2PPS4_MASK                          0x10

// Register: MDMINPPS
extern volatile unsigned char           MDMINPPS            @ 0xE1C;
#ifndef _LIB_BUILD
asm("MDMINPPS equ 0E1Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MDMINPPS               :5;
    };
    struct {
        unsigned MDMINPPS0              :1;
        unsigned MDMINPPS1              :1;
        unsigned MDMINPPS2              :1;
        unsigned MDMINPPS3              :1;
        unsigned MDMINPPS4              :1;
    };
} MDMINPPSbits_t;
extern volatile MDMINPPSbits_t MDMINPPSbits @ 0xE1C;
// bitfield macros
#define _MDMINPPS_MDMINPPS_POSN                             0x0
#define _MDMINPPS_MDMINPPS_POSITION                         0x0
#define _MDMINPPS_MDMINPPS_SIZE                             0x5
#define _MDMINPPS_MDMINPPS_LENGTH                           0x5
#define _MDMINPPS_MDMINPPS_MASK                             0x1F
#define _MDMINPPS_MDMINPPS0_POSN                            0x0
#define _MDMINPPS_MDMINPPS0_POSITION                        0x0
#define _MDMINPPS_MDMINPPS0_SIZE                            0x1
#define _MDMINPPS_MDMINPPS0_LENGTH                          0x1
#define _MDMINPPS_MDMINPPS0_MASK                            0x1
#define _MDMINPPS_MDMINPPS1_POSN                            0x1
#define _MDMINPPS_MDMINPPS1_POSITION                        0x1
#define _MDMINPPS_MDMINPPS1_SIZE                            0x1
#define _MDMINPPS_MDMINPPS1_LENGTH                          0x1
#define _MDMINPPS_MDMINPPS1_MASK                            0x2
#define _MDMINPPS_MDMINPPS2_POSN                            0x2
#define _MDMINPPS_MDMINPPS2_POSITION                        0x2
#define _MDMINPPS_MDMINPPS2_SIZE                            0x1
#define _MDMINPPS_MDMINPPS2_LENGTH                          0x1
#define _MDMINPPS_MDMINPPS2_MASK                            0x4
#define _MDMINPPS_MDMINPPS3_POSN                            0x3
#define _MDMINPPS_MDMINPPS3_POSITION                        0x3
#define _MDMINPPS_MDMINPPS3_SIZE                            0x1
#define _MDMINPPS_MDMINPPS3_LENGTH                          0x1
#define _MDMINPPS_MDMINPPS3_MASK                            0x8
#define _MDMINPPS_MDMINPPS4_POSN                            0x4
#define _MDMINPPS_MDMINPPS4_POSITION                        0x4
#define _MDMINPPS_MDMINPPS4_SIZE                            0x1
#define _MDMINPPS_MDMINPPS4_LENGTH                          0x1
#define _MDMINPPS_MDMINPPS4_MASK                            0x10

// Register: SSP1CLKPPS
extern volatile unsigned char           SSP1CLKPPS          @ 0xE20;
#ifndef _LIB_BUILD
asm("SSP1CLKPPS equ 0E20h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSP1CLKPPS             :5;
    };
    struct {
        unsigned SSP1CLKPPS0            :1;
        unsigned SSP1CLKPPS1            :1;
        unsigned SSP1CLKPPS2            :1;
        unsigned SSP1CLKPPS3            :1;
        unsigned SSP1CLKPPS4            :1;
    };
} SSP1CLKPPSbits_t;
extern volatile SSP1CLKPPSbits_t SSP1CLKPPSbits @ 0xE20;
// bitfield macros
#define _SSP1CLKPPS_SSP1CLKPPS_POSN                         0x0
#define _SSP1CLKPPS_SSP1CLKPPS_POSITION                     0x0
#define _SSP1CLKPPS_SSP1CLKPPS_SIZE                         0x5
#define _SSP1CLKPPS_SSP1CLKPPS_LENGTH                       0x5
#define _SSP1CLKPPS_SSP1CLKPPS_MASK                         0x1F
#define _SSP1CLKPPS_SSP1CLKPPS0_POSN                        0x0
#define _SSP1CLKPPS_SSP1CLKPPS0_POSITION                    0x0
#define _SSP1CLKPPS_SSP1CLKPPS0_SIZE                        0x1
#define _SSP1CLKPPS_SSP1CLKPPS0_LENGTH                      0x1
#define _SSP1CLKPPS_SSP1CLKPPS0_MASK                        0x1
#define _SSP1CLKPPS_SSP1CLKPPS1_POSN                        0x1
#define _SSP1CLKPPS_SSP1CLKPPS1_POSITION                    0x1
#define _SSP1CLKPPS_SSP1CLKPPS1_SIZE                        0x1
#define _SSP1CLKPPS_SSP1CLKPPS1_LENGTH                      0x1
#define _SSP1CLKPPS_SSP1CLKPPS1_MASK                        0x2
#define _SSP1CLKPPS_SSP1CLKPPS2_POSN                        0x2
#define _SSP1CLKPPS_SSP1CLKPPS2_POSITION                    0x2
#define _SSP1CLKPPS_SSP1CLKPPS2_SIZE                        0x1
#define _SSP1CLKPPS_SSP1CLKPPS2_LENGTH                      0x1
#define _SSP1CLKPPS_SSP1CLKPPS2_MASK                        0x4
#define _SSP1CLKPPS_SSP1CLKPPS3_POSN                        0x3
#define _SSP1CLKPPS_SSP1CLKPPS3_POSITION                    0x3
#define _SSP1CLKPPS_SSP1CLKPPS3_SIZE                        0x1
#define _SSP1CLKPPS_SSP1CLKPPS3_LENGTH                      0x1
#define _SSP1CLKPPS_SSP1CLKPPS3_MASK                        0x8
#define _SSP1CLKPPS_SSP1CLKPPS4_POSN                        0x4
#define _SSP1CLKPPS_SSP1CLKPPS4_POSITION                    0x4
#define _SSP1CLKPPS_SSP1CLKPPS4_SIZE                        0x1
#define _SSP1CLKPPS_SSP1CLKPPS4_LENGTH                      0x1
#define _SSP1CLKPPS_SSP1CLKPPS4_MASK                        0x10

// Register: SSP1DATPPS
extern volatile unsigned char           SSP1DATPPS          @ 0xE21;
#ifndef _LIB_BUILD
asm("SSP1DATPPS equ 0E21h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSP1DATPPS             :5;
    };
    struct {
        unsigned SSP1DATPPS0            :1;
        unsigned SSP1DATPPS1            :1;
        unsigned SSP1DATPPS2            :1;
        unsigned SSP1DATPPS3            :1;
        unsigned SSP1DATPPS4            :1;
    };
} SSP1DATPPSbits_t;
extern volatile SSP1DATPPSbits_t SSP1DATPPSbits @ 0xE21;
// bitfield macros
#define _SSP1DATPPS_SSP1DATPPS_POSN                         0x0
#define _SSP1DATPPS_SSP1DATPPS_POSITION                     0x0
#define _SSP1DATPPS_SSP1DATPPS_SIZE                         0x5
#define _SSP1DATPPS_SSP1DATPPS_LENGTH                       0x5
#define _SSP1DATPPS_SSP1DATPPS_MASK                         0x1F
#define _SSP1DATPPS_SSP1DATPPS0_POSN                        0x0
#define _SSP1DATPPS_SSP1DATPPS0_POSITION                    0x0
#define _SSP1DATPPS_SSP1DATPPS0_SIZE                        0x1
#define _SSP1DATPPS_SSP1DATPPS0_LENGTH                      0x1
#define _SSP1DATPPS_SSP1DATPPS0_MASK                        0x1
#define _SSP1DATPPS_SSP1DATPPS1_POSN                        0x1
#define _SSP1DATPPS_SSP1DATPPS1_POSITION                    0x1
#define _SSP1DATPPS_SSP1DATPPS1_SIZE                        0x1
#define _SSP1DATPPS_SSP1DATPPS1_LENGTH                      0x1
#define _SSP1DATPPS_SSP1DATPPS1_MASK                        0x2
#define _SSP1DATPPS_SSP1DATPPS2_POSN                        0x2
#define _SSP1DATPPS_SSP1DATPPS2_POSITION                    0x2
#define _SSP1DATPPS_SSP1DATPPS2_SIZE                        0x1
#define _SSP1DATPPS_SSP1DATPPS2_LENGTH                      0x1
#define _SSP1DATPPS_SSP1DATPPS2_MASK                        0x4
#define _SSP1DATPPS_SSP1DATPPS3_POSN                        0x3
#define _SSP1DATPPS_SSP1DATPPS3_POSITION                    0x3
#define _SSP1DATPPS_SSP1DATPPS3_SIZE                        0x1
#define _SSP1DATPPS_SSP1DATPPS3_LENGTH                      0x1
#define _SSP1DATPPS_SSP1DATPPS3_MASK                        0x8
#define _SSP1DATPPS_SSP1DATPPS4_POSN                        0x4
#define _SSP1DATPPS_SSP1DATPPS4_POSITION                    0x4
#define _SSP1DATPPS_SSP1DATPPS4_SIZE                        0x1
#define _SSP1DATPPS_SSP1DATPPS4_LENGTH                      0x1
#define _SSP1DATPPS_SSP1DATPPS4_MASK                        0x10

// Register: SSP1SSPPS
extern volatile unsigned char           SSP1SSPPS           @ 0xE22;
#ifndef _LIB_BUILD
asm("SSP1SSPPS equ 0E22h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSP1SSPPS              :5;
    };
    struct {
        unsigned SSP1SSPPS0             :1;
        unsigned SSP1SSPPS1             :1;
        unsigned SSP1SSPPS2             :1;
        unsigned SSP1SSPPS3             :1;
        unsigned SSP1SSPPS4             :1;
    };
} SSP1SSPPSbits_t;
extern volatile SSP1SSPPSbits_t SSP1SSPPSbits @ 0xE22;
// bitfield macros
#define _SSP1SSPPS_SSP1SSPPS_POSN                           0x0
#define _SSP1SSPPS_SSP1SSPPS_POSITION                       0x0
#define _SSP1SSPPS_SSP1SSPPS_SIZE                           0x5
#define _SSP1SSPPS_SSP1SSPPS_LENGTH                         0x5
#define _SSP1SSPPS_SSP1SSPPS_MASK                           0x1F
#define _SSP1SSPPS_SSP1SSPPS0_POSN                          0x0
#define _SSP1SSPPS_SSP1SSPPS0_POSITION                      0x0
#define _SSP1SSPPS_SSP1SSPPS0_SIZE                          0x1
#define _SSP1SSPPS_SSP1SSPPS0_LENGTH                        0x1
#define _SSP1SSPPS_SSP1SSPPS0_MASK                          0x1
#define _SSP1SSPPS_SSP1SSPPS1_POSN                          0x1
#define _SSP1SSPPS_SSP1SSPPS1_POSITION                      0x1
#define _SSP1SSPPS_SSP1SSPPS1_SIZE                          0x1
#define _SSP1SSPPS_SSP1SSPPS1_LENGTH                        0x1
#define _SSP1SSPPS_SSP1SSPPS1_MASK                          0x2
#define _SSP1SSPPS_SSP1SSPPS2_POSN                          0x2
#define _SSP1SSPPS_SSP1SSPPS2_POSITION                      0x2
#define _SSP1SSPPS_SSP1SSPPS2_SIZE                          0x1
#define _SSP1SSPPS_SSP1SSPPS2_LENGTH                        0x1
#define _SSP1SSPPS_SSP1SSPPS2_MASK                          0x4
#define _SSP1SSPPS_SSP1SSPPS3_POSN                          0x3
#define _SSP1SSPPS_SSP1SSPPS3_POSITION                      0x3
#define _SSP1SSPPS_SSP1SSPPS3_SIZE                          0x1
#define _SSP1SSPPS_SSP1SSPPS3_LENGTH                        0x1
#define _SSP1SSPPS_SSP1SSPPS3_MASK                          0x8
#define _SSP1SSPPS_SSP1SSPPS4_POSN                          0x4
#define _SSP1SSPPS_SSP1SSPPS4_POSITION                      0x4
#define _SSP1SSPPS_SSP1SSPPS4_SIZE                          0x1
#define _SSP1SSPPS_SSP1SSPPS4_LENGTH                        0x1
#define _SSP1SSPPS_SSP1SSPPS4_MASK                          0x10

// Register: RXPPS
extern volatile unsigned char           RXPPS               @ 0xE24;
#ifndef _LIB_BUILD
asm("RXPPS equ 0E24h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RXPPS                  :5;
    };
    struct {
        unsigned RXDTPPS0               :1;
        unsigned RXDTPPS1               :1;
        unsigned RXDTPPS2               :1;
        unsigned RXDTPPS3               :1;
        unsigned RXDTPPS4               :1;
    };
} RXPPSbits_t;
extern volatile RXPPSbits_t RXPPSbits @ 0xE24;
// bitfield macros
#define _RXPPS_RXPPS_POSN                                   0x0
#define _RXPPS_RXPPS_POSITION                               0x0
#define _RXPPS_RXPPS_SIZE                                   0x5
#define _RXPPS_RXPPS_LENGTH                                 0x5
#define _RXPPS_RXPPS_MASK                                   0x1F
#define _RXPPS_RXDTPPS0_POSN                                0x0
#define _RXPPS_RXDTPPS0_POSITION                            0x0
#define _RXPPS_RXDTPPS0_SIZE                                0x1
#define _RXPPS_RXDTPPS0_LENGTH                              0x1
#define _RXPPS_RXDTPPS0_MASK                                0x1
#define _RXPPS_RXDTPPS1_POSN                                0x1
#define _RXPPS_RXDTPPS1_POSITION                            0x1
#define _RXPPS_RXDTPPS1_SIZE                                0x1
#define _RXPPS_RXDTPPS1_LENGTH                              0x1
#define _RXPPS_RXDTPPS1_MASK                                0x2
#define _RXPPS_RXDTPPS2_POSN                                0x2
#define _RXPPS_RXDTPPS2_POSITION                            0x2
#define _RXPPS_RXDTPPS2_SIZE                                0x1
#define _RXPPS_RXDTPPS2_LENGTH                              0x1
#define _RXPPS_RXDTPPS2_MASK                                0x4
#define _RXPPS_RXDTPPS3_POSN                                0x3
#define _RXPPS_RXDTPPS3_POSITION                            0x3
#define _RXPPS_RXDTPPS3_SIZE                                0x1
#define _RXPPS_RXDTPPS3_LENGTH                              0x1
#define _RXPPS_RXDTPPS3_MASK                                0x8
#define _RXPPS_RXDTPPS4_POSN                                0x4
#define _RXPPS_RXDTPPS4_POSITION                            0x4
#define _RXPPS_RXDTPPS4_SIZE                                0x1
#define _RXPPS_RXDTPPS4_LENGTH                              0x1
#define _RXPPS_RXDTPPS4_MASK                                0x10

// Register: TXPPS
extern volatile unsigned char           TXPPS               @ 0xE25;
#ifndef _LIB_BUILD
asm("TXPPS equ 0E25h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXPPS                  :5;
    };
    struct {
        unsigned TXCKPPS0               :1;
        unsigned TXCKPPS1               :1;
        unsigned TXCKPPS2               :1;
        unsigned TXCKPPS3               :1;
        unsigned TXCKPPS4               :1;
    };
} TXPPSbits_t;
extern volatile TXPPSbits_t TXPPSbits @ 0xE25;
// bitfield macros
#define _TXPPS_TXPPS_POSN                                   0x0
#define _TXPPS_TXPPS_POSITION                               0x0
#define _TXPPS_TXPPS_SIZE                                   0x5
#define _TXPPS_TXPPS_LENGTH                                 0x5
#define _TXPPS_TXPPS_MASK                                   0x1F
#define _TXPPS_TXCKPPS0_POSN                                0x0
#define _TXPPS_TXCKPPS0_POSITION                            0x0
#define _TXPPS_TXCKPPS0_SIZE                                0x1
#define _TXPPS_TXCKPPS0_LENGTH                              0x1
#define _TXPPS_TXCKPPS0_MASK                                0x1
#define _TXPPS_TXCKPPS1_POSN                                0x1
#define _TXPPS_TXCKPPS1_POSITION                            0x1
#define _TXPPS_TXCKPPS1_SIZE                                0x1
#define _TXPPS_TXCKPPS1_LENGTH                              0x1
#define _TXPPS_TXCKPPS1_MASK                                0x2
#define _TXPPS_TXCKPPS2_POSN                                0x2
#define _TXPPS_TXCKPPS2_POSITION                            0x2
#define _TXPPS_TXCKPPS2_SIZE                                0x1
#define _TXPPS_TXCKPPS2_LENGTH                              0x1
#define _TXPPS_TXCKPPS2_MASK                                0x4
#define _TXPPS_TXCKPPS3_POSN                                0x3
#define _TXPPS_TXCKPPS3_POSITION                            0x3
#define _TXPPS_TXCKPPS3_SIZE                                0x1
#define _TXPPS_TXCKPPS3_LENGTH                              0x1
#define _TXPPS_TXCKPPS3_MASK                                0x8
#define _TXPPS_TXCKPPS4_POSN                                0x4
#define _TXPPS_TXCKPPS4_POSITION                            0x4
#define _TXPPS_TXCKPPS4_SIZE                                0x1
#define _TXPPS_TXCKPPS4_LENGTH                              0x1
#define _TXPPS_TXCKPPS4_MASK                                0x10

// Register: CLCIN0PPS
extern volatile unsigned char           CLCIN0PPS           @ 0xE28;
#ifndef _LIB_BUILD
asm("CLCIN0PPS equ 0E28h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLCIN0PPS              :5;
    };
    struct {
        unsigned CLCIN0PPS0             :1;
        unsigned CLCIN0PPS1             :1;
        unsigned CLCIN0PPS2             :1;
        unsigned CLCIN0PPS3             :1;
        unsigned CLCIN0PPS4             :1;
    };
} CLCIN0PPSbits_t;
extern volatile CLCIN0PPSbits_t CLCIN0PPSbits @ 0xE28;
// bitfield macros
#define _CLCIN0PPS_CLCIN0PPS_POSN                           0x0
#define _CLCIN0PPS_CLCIN0PPS_POSITION                       0x0
#define _CLCIN0PPS_CLCIN0PPS_SIZE                           0x5
#define _CLCIN0PPS_CLCIN0PPS_LENGTH                         0x5
#define _CLCIN0PPS_CLCIN0PPS_MASK                           0x1F
#define _CLCIN0PPS_CLCIN0PPS0_POSN                          0x0
#define _CLCIN0PPS_CLCIN0PPS0_POSITION                      0x0
#define _CLCIN0PPS_CLCIN0PPS0_SIZE                          0x1
#define _CLCIN0PPS_CLCIN0PPS0_LENGTH                        0x1
#define _CLCIN0PPS_CLCIN0PPS0_MASK                          0x1
#define _CLCIN0PPS_CLCIN0PPS1_POSN                          0x1
#define _CLCIN0PPS_CLCIN0PPS1_POSITION                      0x1
#define _CLCIN0PPS_CLCIN0PPS1_SIZE                          0x1
#define _CLCIN0PPS_CLCIN0PPS1_LENGTH                        0x1
#define _CLCIN0PPS_CLCIN0PPS1_MASK                          0x2
#define _CLCIN0PPS_CLCIN0PPS2_POSN                          0x2
#define _CLCIN0PPS_CLCIN0PPS2_POSITION                      0x2
#define _CLCIN0PPS_CLCIN0PPS2_SIZE                          0x1
#define _CLCIN0PPS_CLCIN0PPS2_LENGTH                        0x1
#define _CLCIN0PPS_CLCIN0PPS2_MASK                          0x4
#define _CLCIN0PPS_CLCIN0PPS3_POSN                          0x3
#define _CLCIN0PPS_CLCIN0PPS3_POSITION                      0x3
#define _CLCIN0PPS_CLCIN0PPS3_SIZE                          0x1
#define _CLCIN0PPS_CLCIN0PPS3_LENGTH                        0x1
#define _CLCIN0PPS_CLCIN0PPS3_MASK                          0x8
#define _CLCIN0PPS_CLCIN0PPS4_POSN                          0x4
#define _CLCIN0PPS_CLCIN0PPS4_POSITION                      0x4
#define _CLCIN0PPS_CLCIN0PPS4_SIZE                          0x1
#define _CLCIN0PPS_CLCIN0PPS4_LENGTH                        0x1
#define _CLCIN0PPS_CLCIN0PPS4_MASK                          0x10

// Register: CLCIN1PPS
extern volatile unsigned char           CLCIN1PPS           @ 0xE29;
#ifndef _LIB_BUILD
asm("CLCIN1PPS equ 0E29h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLCIN1PPS              :5;
    };
    struct {
        unsigned CLCIN1PPS0             :1;
        unsigned CLCIN1PPS1             :1;
        unsigned CLCIN1PPS2             :1;
        unsigned CLCIN1PPS3             :1;
        unsigned CLCIN1PPS4             :1;
    };
} CLCIN1PPSbits_t;
extern volatile CLCIN1PPSbits_t CLCIN1PPSbits @ 0xE29;
// bitfield macros
#define _CLCIN1PPS_CLCIN1PPS_POSN                           0x0
#define _CLCIN1PPS_CLCIN1PPS_POSITION                       0x0
#define _CLCIN1PPS_CLCIN1PPS_SIZE                           0x5
#define _CLCIN1PPS_CLCIN1PPS_LENGTH                         0x5
#define _CLCIN1PPS_CLCIN1PPS_MASK                           0x1F
#define _CLCIN1PPS_CLCIN1PPS0_POSN                          0x0
#define _CLCIN1PPS_CLCIN1PPS0_POSITION                      0x0
#define _CLCIN1PPS_CLCIN1PPS0_SIZE                          0x1
#define _CLCIN1PPS_CLCIN1PPS0_LENGTH                        0x1
#define _CLCIN1PPS_CLCIN1PPS0_MASK                          0x1
#define _CLCIN1PPS_CLCIN1PPS1_POSN                          0x1
#define _CLCIN1PPS_CLCIN1PPS1_POSITION                      0x1
#define _CLCIN1PPS_CLCIN1PPS1_SIZE                          0x1
#define _CLCIN1PPS_CLCIN1PPS1_LENGTH                        0x1
#define _CLCIN1PPS_CLCIN1PPS1_MASK                          0x2
#define _CLCIN1PPS_CLCIN1PPS2_POSN                          0x2
#define _CLCIN1PPS_CLCIN1PPS2_POSITION                      0x2
#define _CLCIN1PPS_CLCIN1PPS2_SIZE                          0x1
#define _CLCIN1PPS_CLCIN1PPS2_LENGTH                        0x1
#define _CLCIN1PPS_CLCIN1PPS2_MASK                          0x4
#define _CLCIN1PPS_CLCIN1PPS3_POSN                          0x3
#define _CLCIN1PPS_CLCIN1PPS3_POSITION                      0x3
#define _CLCIN1PPS_CLCIN1PPS3_SIZE                          0x1
#define _CLCIN1PPS_CLCIN1PPS3_LENGTH                        0x1
#define _CLCIN1PPS_CLCIN1PPS3_MASK                          0x8
#define _CLCIN1PPS_CLCIN1PPS4_POSN                          0x4
#define _CLCIN1PPS_CLCIN1PPS4_POSITION                      0x4
#define _CLCIN1PPS_CLCIN1PPS4_SIZE                          0x1
#define _CLCIN1PPS_CLCIN1PPS4_LENGTH                        0x1
#define _CLCIN1PPS_CLCIN1PPS4_MASK                          0x10

// Register: CLCIN2PPS
extern volatile unsigned char           CLCIN2PPS           @ 0xE2A;
#ifndef _LIB_BUILD
asm("CLCIN2PPS equ 0E2Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLCIN2PPS              :5;
    };
    struct {
        unsigned CLCIN2PPS0             :1;
        unsigned CLCIN2PPS1             :1;
        unsigned CLCIN2PPS2             :1;
        unsigned CLCIN2PPS3             :1;
        unsigned CLCIN2PPS4             :1;
    };
} CLCIN2PPSbits_t;
extern volatile CLCIN2PPSbits_t CLCIN2PPSbits @ 0xE2A;
// bitfield macros
#define _CLCIN2PPS_CLCIN2PPS_POSN                           0x0
#define _CLCIN2PPS_CLCIN2PPS_POSITION                       0x0
#define _CLCIN2PPS_CLCIN2PPS_SIZE                           0x5
#define _CLCIN2PPS_CLCIN2PPS_LENGTH                         0x5
#define _CLCIN2PPS_CLCIN2PPS_MASK                           0x1F
#define _CLCIN2PPS_CLCIN2PPS0_POSN                          0x0
#define _CLCIN2PPS_CLCIN2PPS0_POSITION                      0x0
#define _CLCIN2PPS_CLCIN2PPS0_SIZE                          0x1
#define _CLCIN2PPS_CLCIN2PPS0_LENGTH                        0x1
#define _CLCIN2PPS_CLCIN2PPS0_MASK                          0x1
#define _CLCIN2PPS_CLCIN2PPS1_POSN                          0x1
#define _CLCIN2PPS_CLCIN2PPS1_POSITION                      0x1
#define _CLCIN2PPS_CLCIN2PPS1_SIZE                          0x1
#define _CLCIN2PPS_CLCIN2PPS1_LENGTH                        0x1
#define _CLCIN2PPS_CLCIN2PPS1_MASK                          0x2
#define _CLCIN2PPS_CLCIN2PPS2_POSN                          0x2
#define _CLCIN2PPS_CLCIN2PPS2_POSITION                      0x2
#define _CLCIN2PPS_CLCIN2PPS2_SIZE                          0x1
#define _CLCIN2PPS_CLCIN2PPS2_LENGTH                        0x1
#define _CLCIN2PPS_CLCIN2PPS2_MASK                          0x4
#define _CLCIN2PPS_CLCIN2PPS3_POSN                          0x3
#define _CLCIN2PPS_CLCIN2PPS3_POSITION                      0x3
#define _CLCIN2PPS_CLCIN2PPS3_SIZE                          0x1
#define _CLCIN2PPS_CLCIN2PPS3_LENGTH                        0x1
#define _CLCIN2PPS_CLCIN2PPS3_MASK                          0x8
#define _CLCIN2PPS_CLCIN2PPS4_POSN                          0x4
#define _CLCIN2PPS_CLCIN2PPS4_POSITION                      0x4
#define _CLCIN2PPS_CLCIN2PPS4_SIZE                          0x1
#define _CLCIN2PPS_CLCIN2PPS4_LENGTH                        0x1
#define _CLCIN2PPS_CLCIN2PPS4_MASK                          0x10

// Register: CLCIN3PPS
extern volatile unsigned char           CLCIN3PPS           @ 0xE2B;
#ifndef _LIB_BUILD
asm("CLCIN3PPS equ 0E2Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CLCIN3PPS              :5;
    };
    struct {
        unsigned CLCIN3PPS0             :1;
        unsigned CLCIN3PPS1             :1;
        unsigned CLCIN3PPS2             :1;
        unsigned CLCIN3PPS3             :1;
        unsigned CLCIN3PPS4             :1;
    };
} CLCIN3PPSbits_t;
extern volatile CLCIN3PPSbits_t CLCIN3PPSbits @ 0xE2B;
// bitfield macros
#define _CLCIN3PPS_CLCIN3PPS_POSN                           0x0
#define _CLCIN3PPS_CLCIN3PPS_POSITION                       0x0
#define _CLCIN3PPS_CLCIN3PPS_SIZE                           0x5
#define _CLCIN3PPS_CLCIN3PPS_LENGTH                         0x5
#define _CLCIN3PPS_CLCIN3PPS_MASK                           0x1F
#define _CLCIN3PPS_CLCIN3PPS0_POSN                          0x0
#define _CLCIN3PPS_CLCIN3PPS0_POSITION                      0x0
#define _CLCIN3PPS_CLCIN3PPS0_SIZE                          0x1
#define _CLCIN3PPS_CLCIN3PPS0_LENGTH                        0x1
#define _CLCIN3PPS_CLCIN3PPS0_MASK                          0x1
#define _CLCIN3PPS_CLCIN3PPS1_POSN                          0x1
#define _CLCIN3PPS_CLCIN3PPS1_POSITION                      0x1
#define _CLCIN3PPS_CLCIN3PPS1_SIZE                          0x1
#define _CLCIN3PPS_CLCIN3PPS1_LENGTH                        0x1
#define _CLCIN3PPS_CLCIN3PPS1_MASK                          0x2
#define _CLCIN3PPS_CLCIN3PPS2_POSN                          0x2
#define _CLCIN3PPS_CLCIN3PPS2_POSITION                      0x2
#define _CLCIN3PPS_CLCIN3PPS2_SIZE                          0x1
#define _CLCIN3PPS_CLCIN3PPS2_LENGTH                        0x1
#define _CLCIN3PPS_CLCIN3PPS2_MASK                          0x4
#define _CLCIN3PPS_CLCIN3PPS3_POSN                          0x3
#define _CLCIN3PPS_CLCIN3PPS3_POSITION                      0x3
#define _CLCIN3PPS_CLCIN3PPS3_SIZE                          0x1
#define _CLCIN3PPS_CLCIN3PPS3_LENGTH                        0x1
#define _CLCIN3PPS_CLCIN3PPS3_MASK                          0x8
#define _CLCIN3PPS_CLCIN3PPS4_POSN                          0x4
#define _CLCIN3PPS_CLCIN3PPS4_POSITION                      0x4
#define _CLCIN3PPS_CLCIN3PPS4_SIZE                          0x1
#define _CLCIN3PPS_CLCIN3PPS4_LENGTH                        0x1
#define _CLCIN3PPS_CLCIN3PPS4_MASK                          0x10

// Register: T3CKIPPS
extern volatile unsigned char           T3CKIPPS            @ 0xE2C;
#ifndef _LIB_BUILD
asm("T3CKIPPS equ 0E2Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T3CKIPPS               :5;
    };
} T3CKIPPSbits_t;
extern volatile T3CKIPPSbits_t T3CKIPPSbits @ 0xE2C;
// bitfield macros
#define _T3CKIPPS_T3CKIPPS_POSN                             0x0
#define _T3CKIPPS_T3CKIPPS_POSITION                         0x0
#define _T3CKIPPS_T3CKIPPS_SIZE                             0x5
#define _T3CKIPPS_T3CKIPPS_LENGTH                           0x5
#define _T3CKIPPS_T3CKIPPS_MASK                             0x1F

// Register: T3GPPS
extern volatile unsigned char           T3GPPS              @ 0xE2D;
#ifndef _LIB_BUILD
asm("T3GPPS equ 0E2Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T3GPPS                 :5;
    };
} T3GPPSbits_t;
extern volatile T3GPPSbits_t T3GPPSbits @ 0xE2D;
// bitfield macros
#define _T3GPPS_T3GPPS_POSN                                 0x0
#define _T3GPPS_T3GPPS_POSITION                             0x0
#define _T3GPPS_T3GPPS_SIZE                                 0x5
#define _T3GPPS_T3GPPS_LENGTH                               0x5
#define _T3GPPS_T3GPPS_MASK                                 0x1F

// Register: T5CKIPPS
extern volatile unsigned char           T5CKIPPS            @ 0xE2E;
#ifndef _LIB_BUILD
asm("T5CKIPPS equ 0E2Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T5CKIPPS               :5;
    };
} T5CKIPPSbits_t;
extern volatile T5CKIPPSbits_t T5CKIPPSbits @ 0xE2E;
// bitfield macros
#define _T5CKIPPS_T5CKIPPS_POSN                             0x0
#define _T5CKIPPS_T5CKIPPS_POSITION                         0x0
#define _T5CKIPPS_T5CKIPPS_SIZE                             0x5
#define _T5CKIPPS_T5CKIPPS_LENGTH                           0x5
#define _T5CKIPPS_T5CKIPPS_MASK                             0x1F

// Register: T5GPPS
extern volatile unsigned char           T5GPPS              @ 0xE2F;
#ifndef _LIB_BUILD
asm("T5GPPS equ 0E2Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T5GPPS                 :5;
    };
} T5GPPSbits_t;
extern volatile T5GPPSbits_t T5GPPSbits @ 0xE2F;
// bitfield macros
#define _T5GPPS_T5GPPS_POSN                                 0x0
#define _T5GPPS_T5GPPS_POSITION                             0x0
#define _T5GPPS_T5GPPS_SIZE                                 0x5
#define _T5GPPS_T5GPPS_LENGTH                               0x5
#define _T5GPPS_T5GPPS_MASK                                 0x1F

// Register: RA0PPS
extern volatile unsigned char           RA0PPS              @ 0xE90;
#ifndef _LIB_BUILD
asm("RA0PPS equ 0E90h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA0PPS                 :5;
    };
    struct {
        unsigned RA0PPS0                :1;
        unsigned RA0PPS1                :1;
        unsigned RA0PPS2                :1;
        unsigned RA0PPS3                :1;
        unsigned RA0PPS4                :1;
    };
} RA0PPSbits_t;
extern volatile RA0PPSbits_t RA0PPSbits @ 0xE90;
// bitfield macros
#define _RA0PPS_RA0PPS_POSN                                 0x0
#define _RA0PPS_RA0PPS_POSITION                             0x0
#define _RA0PPS_RA0PPS_SIZE                                 0x5
#define _RA0PPS_RA0PPS_LENGTH                               0x5
#define _RA0PPS_RA0PPS_MASK                                 0x1F
#define _RA0PPS_RA0PPS0_POSN                                0x0
#define _RA0PPS_RA0PPS0_POSITION                            0x0
#define _RA0PPS_RA0PPS0_SIZE                                0x1
#define _RA0PPS_RA0PPS0_LENGTH                              0x1
#define _RA0PPS_RA0PPS0_MASK                                0x1
#define _RA0PPS_RA0PPS1_POSN                                0x1
#define _RA0PPS_RA0PPS1_POSITION                            0x1
#define _RA0PPS_RA0PPS1_SIZE                                0x1
#define _RA0PPS_RA0PPS1_LENGTH                              0x1
#define _RA0PPS_RA0PPS1_MASK                                0x2
#define _RA0PPS_RA0PPS2_POSN                                0x2
#define _RA0PPS_RA0PPS2_POSITION                            0x2
#define _RA0PPS_RA0PPS2_SIZE                                0x1
#define _RA0PPS_RA0PPS2_LENGTH                              0x1
#define _RA0PPS_RA0PPS2_MASK                                0x4
#define _RA0PPS_RA0PPS3_POSN                                0x3
#define _RA0PPS_RA0PPS3_POSITION                            0x3
#define _RA0PPS_RA0PPS3_SIZE                                0x1
#define _RA0PPS_RA0PPS3_LENGTH                              0x1
#define _RA0PPS_RA0PPS3_MASK                                0x8
#define _RA0PPS_RA0PPS4_POSN                                0x4
#define _RA0PPS_RA0PPS4_POSITION                            0x4
#define _RA0PPS_RA0PPS4_SIZE                                0x1
#define _RA0PPS_RA0PPS4_LENGTH                              0x1
#define _RA0PPS_RA0PPS4_MASK                                0x10

// Register: RA1PPS
extern volatile unsigned char           RA1PPS              @ 0xE91;
#ifndef _LIB_BUILD
asm("RA1PPS equ 0E91h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA1PPS                 :5;
    };
    struct {
        unsigned RA1PPS0                :1;
        unsigned RA1PPS1                :1;
        unsigned RA1PPS2                :1;
        unsigned RA1PPS3                :1;
        unsigned RA1PPS4                :1;
    };
} RA1PPSbits_t;
extern volatile RA1PPSbits_t RA1PPSbits @ 0xE91;
// bitfield macros
#define _RA1PPS_RA1PPS_POSN                                 0x0
#define _RA1PPS_RA1PPS_POSITION                             0x0
#define _RA1PPS_RA1PPS_SIZE                                 0x5
#define _RA1PPS_RA1PPS_LENGTH                               0x5
#define _RA1PPS_RA1PPS_MASK                                 0x1F
#define _RA1PPS_RA1PPS0_POSN                                0x0
#define _RA1PPS_RA1PPS0_POSITION                            0x0
#define _RA1PPS_RA1PPS0_SIZE                                0x1
#define _RA1PPS_RA1PPS0_LENGTH                              0x1
#define _RA1PPS_RA1PPS0_MASK                                0x1
#define _RA1PPS_RA1PPS1_POSN                                0x1
#define _RA1PPS_RA1PPS1_POSITION                            0x1
#define _RA1PPS_RA1PPS1_SIZE                                0x1
#define _RA1PPS_RA1PPS1_LENGTH                              0x1
#define _RA1PPS_RA1PPS1_MASK                                0x2
#define _RA1PPS_RA1PPS2_POSN                                0x2
#define _RA1PPS_RA1PPS2_POSITION                            0x2
#define _RA1PPS_RA1PPS2_SIZE                                0x1
#define _RA1PPS_RA1PPS2_LENGTH                              0x1
#define _RA1PPS_RA1PPS2_MASK                                0x4
#define _RA1PPS_RA1PPS3_POSN                                0x3
#define _RA1PPS_RA1PPS3_POSITION                            0x3
#define _RA1PPS_RA1PPS3_SIZE                                0x1
#define _RA1PPS_RA1PPS3_LENGTH                              0x1
#define _RA1PPS_RA1PPS3_MASK                                0x8
#define _RA1PPS_RA1PPS4_POSN                                0x4
#define _RA1PPS_RA1PPS4_POSITION                            0x4
#define _RA1PPS_RA1PPS4_SIZE                                0x1
#define _RA1PPS_RA1PPS4_LENGTH                              0x1
#define _RA1PPS_RA1PPS4_MASK                                0x10

// Register: RA2PPS
extern volatile unsigned char           RA2PPS              @ 0xE92;
#ifndef _LIB_BUILD
asm("RA2PPS equ 0E92h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA2PPS                 :5;
    };
    struct {
        unsigned RA2PPS0                :1;
        unsigned RA2PPS1                :1;
        unsigned RA2PPS2                :1;
        unsigned RA2PPS3                :1;
        unsigned RA2PPS4                :1;
    };
} RA2PPSbits_t;
extern volatile RA2PPSbits_t RA2PPSbits @ 0xE92;
// bitfield macros
#define _RA2PPS_RA2PPS_POSN                                 0x0
#define _RA2PPS_RA2PPS_POSITION                             0x0
#define _RA2PPS_RA2PPS_SIZE                                 0x5
#define _RA2PPS_RA2PPS_LENGTH                               0x5
#define _RA2PPS_RA2PPS_MASK                                 0x1F
#define _RA2PPS_RA2PPS0_POSN                                0x0
#define _RA2PPS_RA2PPS0_POSITION                            0x0
#define _RA2PPS_RA2PPS0_SIZE                                0x1
#define _RA2PPS_RA2PPS0_LENGTH                              0x1
#define _RA2PPS_RA2PPS0_MASK                                0x1
#define _RA2PPS_RA2PPS1_POSN                                0x1
#define _RA2PPS_RA2PPS1_POSITION                            0x1
#define _RA2PPS_RA2PPS1_SIZE                                0x1
#define _RA2PPS_RA2PPS1_LENGTH                              0x1
#define _RA2PPS_RA2PPS1_MASK                                0x2
#define _RA2PPS_RA2PPS2_POSN                                0x2
#define _RA2PPS_RA2PPS2_POSITION                            0x2
#define _RA2PPS_RA2PPS2_SIZE                                0x1
#define _RA2PPS_RA2PPS2_LENGTH                              0x1
#define _RA2PPS_RA2PPS2_MASK                                0x4
#define _RA2PPS_RA2PPS3_POSN                                0x3
#define _RA2PPS_RA2PPS3_POSITION                            0x3
#define _RA2PPS_RA2PPS3_SIZE                                0x1
#define _RA2PPS_RA2PPS3_LENGTH                              0x1
#define _RA2PPS_RA2PPS3_MASK                                0x8
#define _RA2PPS_RA2PPS4_POSN                                0x4
#define _RA2PPS_RA2PPS4_POSITION                            0x4
#define _RA2PPS_RA2PPS4_SIZE                                0x1
#define _RA2PPS_RA2PPS4_LENGTH                              0x1
#define _RA2PPS_RA2PPS4_MASK                                0x10

// Register: RA4PPS
extern volatile unsigned char           RA4PPS              @ 0xE94;
#ifndef _LIB_BUILD
asm("RA4PPS equ 0E94h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA4PPS                 :5;
    };
    struct {
        unsigned RA4PPS0                :1;
        unsigned RA4PPS1                :1;
        unsigned RA4PPS2                :1;
        unsigned RA4PPS3                :1;
        unsigned RA4PPS4                :1;
    };
} RA4PPSbits_t;
extern volatile RA4PPSbits_t RA4PPSbits @ 0xE94;
// bitfield macros
#define _RA4PPS_RA4PPS_POSN                                 0x0
#define _RA4PPS_RA4PPS_POSITION                             0x0
#define _RA4PPS_RA4PPS_SIZE                                 0x5
#define _RA4PPS_RA4PPS_LENGTH                               0x5
#define _RA4PPS_RA4PPS_MASK                                 0x1F
#define _RA4PPS_RA4PPS0_POSN                                0x0
#define _RA4PPS_RA4PPS0_POSITION                            0x0
#define _RA4PPS_RA4PPS0_SIZE                                0x1
#define _RA4PPS_RA4PPS0_LENGTH                              0x1
#define _RA4PPS_RA4PPS0_MASK                                0x1
#define _RA4PPS_RA4PPS1_POSN                                0x1
#define _RA4PPS_RA4PPS1_POSITION                            0x1
#define _RA4PPS_RA4PPS1_SIZE                                0x1
#define _RA4PPS_RA4PPS1_LENGTH                              0x1
#define _RA4PPS_RA4PPS1_MASK                                0x2
#define _RA4PPS_RA4PPS2_POSN                                0x2
#define _RA4PPS_RA4PPS2_POSITION                            0x2
#define _RA4PPS_RA4PPS2_SIZE                                0x1
#define _RA4PPS_RA4PPS2_LENGTH                              0x1
#define _RA4PPS_RA4PPS2_MASK                                0x4
#define _RA4PPS_RA4PPS3_POSN                                0x3
#define _RA4PPS_RA4PPS3_POSITION                            0x3
#define _RA4PPS_RA4PPS3_SIZE                                0x1
#define _RA4PPS_RA4PPS3_LENGTH                              0x1
#define _RA4PPS_RA4PPS3_MASK                                0x8
#define _RA4PPS_RA4PPS4_POSN                                0x4
#define _RA4PPS_RA4PPS4_POSITION                            0x4
#define _RA4PPS_RA4PPS4_SIZE                                0x1
#define _RA4PPS_RA4PPS4_LENGTH                              0x1
#define _RA4PPS_RA4PPS4_MASK                                0x10

// Register: RA5PPS
extern volatile unsigned char           RA5PPS              @ 0xE95;
#ifndef _LIB_BUILD
asm("RA5PPS equ 0E95h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA5PPS                 :5;
    };
    struct {
        unsigned RA5PPS0                :1;
        unsigned RA5PPS1                :1;
        unsigned RA5PPS2                :1;
        unsigned RA5PPS3                :1;
        unsigned RA5PPS4                :1;
    };
} RA5PPSbits_t;
extern volatile RA5PPSbits_t RA5PPSbits @ 0xE95;
// bitfield macros
#define _RA5PPS_RA5PPS_POSN                                 0x0
#define _RA5PPS_RA5PPS_POSITION                             0x0
#define _RA5PPS_RA5PPS_SIZE                                 0x5
#define _RA5PPS_RA5PPS_LENGTH                               0x5
#define _RA5PPS_RA5PPS_MASK                                 0x1F
#define _RA5PPS_RA5PPS0_POSN                                0x0
#define _RA5PPS_RA5PPS0_POSITION                            0x0
#define _RA5PPS_RA5PPS0_SIZE                                0x1
#define _RA5PPS_RA5PPS0_LENGTH                              0x1
#define _RA5PPS_RA5PPS0_MASK                                0x1
#define _RA5PPS_RA5PPS1_POSN                                0x1
#define _RA5PPS_RA5PPS1_POSITION                            0x1
#define _RA5PPS_RA5PPS1_SIZE                                0x1
#define _RA5PPS_RA5PPS1_LENGTH                              0x1
#define _RA5PPS_RA5PPS1_MASK                                0x2
#define _RA5PPS_RA5PPS2_POSN                                0x2
#define _RA5PPS_RA5PPS2_POSITION                            0x2
#define _RA5PPS_RA5PPS2_SIZE                                0x1
#define _RA5PPS_RA5PPS2_LENGTH                              0x1
#define _RA5PPS_RA5PPS2_MASK                                0x4
#define _RA5PPS_RA5PPS3_POSN                                0x3
#define _RA5PPS_RA5PPS3_POSITION                            0x3
#define _RA5PPS_RA5PPS3_SIZE                                0x1
#define _RA5PPS_RA5PPS3_LENGTH                              0x1
#define _RA5PPS_RA5PPS3_MASK                                0x8
#define _RA5PPS_RA5PPS4_POSN                                0x4
#define _RA5PPS_RA5PPS4_POSITION                            0x4
#define _RA5PPS_RA5PPS4_SIZE                                0x1
#define _RA5PPS_RA5PPS4_LENGTH                              0x1
#define _RA5PPS_RA5PPS4_MASK                                0x10

// Register: RC0PPS
extern volatile unsigned char           RC0PPS              @ 0xEA0;
#ifndef _LIB_BUILD
asm("RC0PPS equ 0EA0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC0PPS                 :5;
    };
    struct {
        unsigned RC0PPS0                :1;
        unsigned RC0PPS1                :1;
        unsigned RC0PPS2                :1;
        unsigned RC0PPS3                :1;
        unsigned RC0PPS4                :1;
    };
} RC0PPSbits_t;
extern volatile RC0PPSbits_t RC0PPSbits @ 0xEA0;
// bitfield macros
#define _RC0PPS_RC0PPS_POSN                                 0x0
#define _RC0PPS_RC0PPS_POSITION                             0x0
#define _RC0PPS_RC0PPS_SIZE                                 0x5
#define _RC0PPS_RC0PPS_LENGTH                               0x5
#define _RC0PPS_RC0PPS_MASK                                 0x1F
#define _RC0PPS_RC0PPS0_POSN                                0x0
#define _RC0PPS_RC0PPS0_POSITION                            0x0
#define _RC0PPS_RC0PPS0_SIZE                                0x1
#define _RC0PPS_RC0PPS0_LENGTH                              0x1
#define _RC0PPS_RC0PPS0_MASK                                0x1
#define _RC0PPS_RC0PPS1_POSN                                0x1
#define _RC0PPS_RC0PPS1_POSITION                            0x1
#define _RC0PPS_RC0PPS1_SIZE                                0x1
#define _RC0PPS_RC0PPS1_LENGTH                              0x1
#define _RC0PPS_RC0PPS1_MASK                                0x2
#define _RC0PPS_RC0PPS2_POSN                                0x2
#define _RC0PPS_RC0PPS2_POSITION                            0x2
#define _RC0PPS_RC0PPS2_SIZE                                0x1
#define _RC0PPS_RC0PPS2_LENGTH                              0x1
#define _RC0PPS_RC0PPS2_MASK                                0x4
#define _RC0PPS_RC0PPS3_POSN                                0x3
#define _RC0PPS_RC0PPS3_POSITION                            0x3
#define _RC0PPS_RC0PPS3_SIZE                                0x1
#define _RC0PPS_RC0PPS3_LENGTH                              0x1
#define _RC0PPS_RC0PPS3_MASK                                0x8
#define _RC0PPS_RC0PPS4_POSN                                0x4
#define _RC0PPS_RC0PPS4_POSITION                            0x4
#define _RC0PPS_RC0PPS4_SIZE                                0x1
#define _RC0PPS_RC0PPS4_LENGTH                              0x1
#define _RC0PPS_RC0PPS4_MASK                                0x10

// Register: RC1PPS
extern volatile unsigned char           RC1PPS              @ 0xEA1;
#ifndef _LIB_BUILD
asm("RC1PPS equ 0EA1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC1PPS                 :5;
    };
    struct {
        unsigned RC1PPS0                :1;
        unsigned RC1PPS1                :1;
        unsigned RC1PPS2                :1;
        unsigned RC1PPS3                :1;
        unsigned RC1PPS4                :1;
    };
} RC1PPSbits_t;
extern volatile RC1PPSbits_t RC1PPSbits @ 0xEA1;
// bitfield macros
#define _RC1PPS_RC1PPS_POSN                                 0x0
#define _RC1PPS_RC1PPS_POSITION                             0x0
#define _RC1PPS_RC1PPS_SIZE                                 0x5
#define _RC1PPS_RC1PPS_LENGTH                               0x5
#define _RC1PPS_RC1PPS_MASK                                 0x1F
#define _RC1PPS_RC1PPS0_POSN                                0x0
#define _RC1PPS_RC1PPS0_POSITION                            0x0
#define _RC1PPS_RC1PPS0_SIZE                                0x1
#define _RC1PPS_RC1PPS0_LENGTH                              0x1
#define _RC1PPS_RC1PPS0_MASK                                0x1
#define _RC1PPS_RC1PPS1_POSN                                0x1
#define _RC1PPS_RC1PPS1_POSITION                            0x1
#define _RC1PPS_RC1PPS1_SIZE                                0x1
#define _RC1PPS_RC1PPS1_LENGTH                              0x1
#define _RC1PPS_RC1PPS1_MASK                                0x2
#define _RC1PPS_RC1PPS2_POSN                                0x2
#define _RC1PPS_RC1PPS2_POSITION                            0x2
#define _RC1PPS_RC1PPS2_SIZE                                0x1
#define _RC1PPS_RC1PPS2_LENGTH                              0x1
#define _RC1PPS_RC1PPS2_MASK                                0x4
#define _RC1PPS_RC1PPS3_POSN                                0x3
#define _RC1PPS_RC1PPS3_POSITION                            0x3
#define _RC1PPS_RC1PPS3_SIZE                                0x1
#define _RC1PPS_RC1PPS3_LENGTH                              0x1
#define _RC1PPS_RC1PPS3_MASK                                0x8
#define _RC1PPS_RC1PPS4_POSN                                0x4
#define _RC1PPS_RC1PPS4_POSITION                            0x4
#define _RC1PPS_RC1PPS4_SIZE                                0x1
#define _RC1PPS_RC1PPS4_LENGTH                              0x1
#define _RC1PPS_RC1PPS4_MASK                                0x10

// Register: RC2PPS
extern volatile unsigned char           RC2PPS              @ 0xEA2;
#ifndef _LIB_BUILD
asm("RC2PPS equ 0EA2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC2PPS                 :5;
    };
    struct {
        unsigned RC2PPS0                :1;
        unsigned RC2PPS1                :1;
        unsigned RC2PPS2                :1;
        unsigned RC2PPS3                :1;
        unsigned RC2PPS4                :1;
    };
} RC2PPSbits_t;
extern volatile RC2PPSbits_t RC2PPSbits @ 0xEA2;
// bitfield macros
#define _RC2PPS_RC2PPS_POSN                                 0x0
#define _RC2PPS_RC2PPS_POSITION                             0x0
#define _RC2PPS_RC2PPS_SIZE                                 0x5
#define _RC2PPS_RC2PPS_LENGTH                               0x5
#define _RC2PPS_RC2PPS_MASK                                 0x1F
#define _RC2PPS_RC2PPS0_POSN                                0x0
#define _RC2PPS_RC2PPS0_POSITION                            0x0
#define _RC2PPS_RC2PPS0_SIZE                                0x1
#define _RC2PPS_RC2PPS0_LENGTH                              0x1
#define _RC2PPS_RC2PPS0_MASK                                0x1
#define _RC2PPS_RC2PPS1_POSN                                0x1
#define _RC2PPS_RC2PPS1_POSITION                            0x1
#define _RC2PPS_RC2PPS1_SIZE                                0x1
#define _RC2PPS_RC2PPS1_LENGTH                              0x1
#define _RC2PPS_RC2PPS1_MASK                                0x2
#define _RC2PPS_RC2PPS2_POSN                                0x2
#define _RC2PPS_RC2PPS2_POSITION                            0x2
#define _RC2PPS_RC2PPS2_SIZE                                0x1
#define _RC2PPS_RC2PPS2_LENGTH                              0x1
#define _RC2PPS_RC2PPS2_MASK                                0x4
#define _RC2PPS_RC2PPS3_POSN                                0x3
#define _RC2PPS_RC2PPS3_POSITION                            0x3
#define _RC2PPS_RC2PPS3_SIZE                                0x1
#define _RC2PPS_RC2PPS3_LENGTH                              0x1
#define _RC2PPS_RC2PPS3_MASK                                0x8
#define _RC2PPS_RC2PPS4_POSN                                0x4
#define _RC2PPS_RC2PPS4_POSITION                            0x4
#define _RC2PPS_RC2PPS4_SIZE                                0x1
#define _RC2PPS_RC2PPS4_LENGTH                              0x1
#define _RC2PPS_RC2PPS4_MASK                                0x10

// Register: RC3PPS
extern volatile unsigned char           RC3PPS              @ 0xEA3;
#ifndef _LIB_BUILD
asm("RC3PPS equ 0EA3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC3PPS                 :5;
    };
    struct {
        unsigned RC3PPS0                :1;
        unsigned RC3PPS1                :1;
        unsigned RC3PPS2                :1;
        unsigned RC3PPS3                :1;
        unsigned RC3PPS4                :1;
    };
} RC3PPSbits_t;
extern volatile RC3PPSbits_t RC3PPSbits @ 0xEA3;
// bitfield macros
#define _RC3PPS_RC3PPS_POSN                                 0x0
#define _RC3PPS_RC3PPS_POSITION                             0x0
#define _RC3PPS_RC3PPS_SIZE                                 0x5
#define _RC3PPS_RC3PPS_LENGTH                               0x5
#define _RC3PPS_RC3PPS_MASK                                 0x1F
#define _RC3PPS_RC3PPS0_POSN                                0x0
#define _RC3PPS_RC3PPS0_POSITION                            0x0
#define _RC3PPS_RC3PPS0_SIZE                                0x1
#define _RC3PPS_RC3PPS0_LENGTH                              0x1
#define _RC3PPS_RC3PPS0_MASK                                0x1
#define _RC3PPS_RC3PPS1_POSN                                0x1
#define _RC3PPS_RC3PPS1_POSITION                            0x1
#define _RC3PPS_RC3PPS1_SIZE                                0x1
#define _RC3PPS_RC3PPS1_LENGTH                              0x1
#define _RC3PPS_RC3PPS1_MASK                                0x2
#define _RC3PPS_RC3PPS2_POSN                                0x2
#define _RC3PPS_RC3PPS2_POSITION                            0x2
#define _RC3PPS_RC3PPS2_SIZE                                0x1
#define _RC3PPS_RC3PPS2_LENGTH                              0x1
#define _RC3PPS_RC3PPS2_MASK                                0x4
#define _RC3PPS_RC3PPS3_POSN                                0x3
#define _RC3PPS_RC3PPS3_POSITION                            0x3
#define _RC3PPS_RC3PPS3_SIZE                                0x1
#define _RC3PPS_RC3PPS3_LENGTH                              0x1
#define _RC3PPS_RC3PPS3_MASK                                0x8
#define _RC3PPS_RC3PPS4_POSN                                0x4
#define _RC3PPS_RC3PPS4_POSITION                            0x4
#define _RC3PPS_RC3PPS4_SIZE                                0x1
#define _RC3PPS_RC3PPS4_LENGTH                              0x1
#define _RC3PPS_RC3PPS4_MASK                                0x10

// Register: RC4PPS
extern volatile unsigned char           RC4PPS              @ 0xEA4;
#ifndef _LIB_BUILD
asm("RC4PPS equ 0EA4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC4PPS                 :5;
    };
    struct {
        unsigned RC4PPS0                :1;
        unsigned RC4PPS1                :1;
        unsigned RC4PPS2                :1;
        unsigned RC4PPS3                :1;
        unsigned RC4PPS4                :1;
    };
} RC4PPSbits_t;
extern volatile RC4PPSbits_t RC4PPSbits @ 0xEA4;
// bitfield macros
#define _RC4PPS_RC4PPS_POSN                                 0x0
#define _RC4PPS_RC4PPS_POSITION                             0x0
#define _RC4PPS_RC4PPS_SIZE                                 0x5
#define _RC4PPS_RC4PPS_LENGTH                               0x5
#define _RC4PPS_RC4PPS_MASK                                 0x1F
#define _RC4PPS_RC4PPS0_POSN                                0x0
#define _RC4PPS_RC4PPS0_POSITION                            0x0
#define _RC4PPS_RC4PPS0_SIZE                                0x1
#define _RC4PPS_RC4PPS0_LENGTH                              0x1
#define _RC4PPS_RC4PPS0_MASK                                0x1
#define _RC4PPS_RC4PPS1_POSN                                0x1
#define _RC4PPS_RC4PPS1_POSITION                            0x1
#define _RC4PPS_RC4PPS1_SIZE                                0x1
#define _RC4PPS_RC4PPS1_LENGTH                              0x1
#define _RC4PPS_RC4PPS1_MASK                                0x2
#define _RC4PPS_RC4PPS2_POSN                                0x2
#define _RC4PPS_RC4PPS2_POSITION                            0x2
#define _RC4PPS_RC4PPS2_SIZE                                0x1
#define _RC4PPS_RC4PPS2_LENGTH                              0x1
#define _RC4PPS_RC4PPS2_MASK                                0x4
#define _RC4PPS_RC4PPS3_POSN                                0x3
#define _RC4PPS_RC4PPS3_POSITION                            0x3
#define _RC4PPS_RC4PPS3_SIZE                                0x1
#define _RC4PPS_RC4PPS3_LENGTH                              0x1
#define _RC4PPS_RC4PPS3_MASK                                0x8
#define _RC4PPS_RC4PPS4_POSN                                0x4
#define _RC4PPS_RC4PPS4_POSITION                            0x4
#define _RC4PPS_RC4PPS4_SIZE                                0x1
#define _RC4PPS_RC4PPS4_LENGTH                              0x1
#define _RC4PPS_RC4PPS4_MASK                                0x10

// Register: RC5PPS
extern volatile unsigned char           RC5PPS              @ 0xEA5;
#ifndef _LIB_BUILD
asm("RC5PPS equ 0EA5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC5PPS                 :5;
    };
    struct {
        unsigned RC5PPS0                :1;
        unsigned RC5PPS1                :1;
        unsigned RC5PPS2                :1;
        unsigned RC5PPS3                :1;
        unsigned RC5PPS4                :1;
    };
} RC5PPSbits_t;
extern volatile RC5PPSbits_t RC5PPSbits @ 0xEA5;
// bitfield macros
#define _RC5PPS_RC5PPS_POSN                                 0x0
#define _RC5PPS_RC5PPS_POSITION                             0x0
#define _RC5PPS_RC5PPS_SIZE                                 0x5
#define _RC5PPS_RC5PPS_LENGTH                               0x5
#define _RC5PPS_RC5PPS_MASK                                 0x1F
#define _RC5PPS_RC5PPS0_POSN                                0x0
#define _RC5PPS_RC5PPS0_POSITION                            0x0
#define _RC5PPS_RC5PPS0_SIZE                                0x1
#define _RC5PPS_RC5PPS0_LENGTH                              0x1
#define _RC5PPS_RC5PPS0_MASK                                0x1
#define _RC5PPS_RC5PPS1_POSN                                0x1
#define _RC5PPS_RC5PPS1_POSITION                            0x1
#define _RC5PPS_RC5PPS1_SIZE                                0x1
#define _RC5PPS_RC5PPS1_LENGTH                              0x1
#define _RC5PPS_RC5PPS1_MASK                                0x2
#define _RC5PPS_RC5PPS2_POSN                                0x2
#define _RC5PPS_RC5PPS2_POSITION                            0x2
#define _RC5PPS_RC5PPS2_SIZE                                0x1
#define _RC5PPS_RC5PPS2_LENGTH                              0x1
#define _RC5PPS_RC5PPS2_MASK                                0x4
#define _RC5PPS_RC5PPS3_POSN                                0x3
#define _RC5PPS_RC5PPS3_POSITION                            0x3
#define _RC5PPS_RC5PPS3_SIZE                                0x1
#define _RC5PPS_RC5PPS3_LENGTH                              0x1
#define _RC5PPS_RC5PPS3_MASK                                0x8
#define _RC5PPS_RC5PPS4_POSN                                0x4
#define _RC5PPS_RC5PPS4_POSITION                            0x4
#define _RC5PPS_RC5PPS4_SIZE                                0x1
#define _RC5PPS_RC5PPS4_LENGTH                              0x1
#define _RC5PPS_RC5PPS4_MASK                                0x10

// Register: CLCDATA
extern volatile unsigned char           CLCDATA             @ 0xF0F;
#ifndef _LIB_BUILD
asm("CLCDATA equ 0F0Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MLC1OUT                :1;
        unsigned MLC2OUT                :1;
        unsigned MLC3OUT                :1;
        unsigned MLC4OUT                :1;
    };
} CLCDATAbits_t;
extern volatile CLCDATAbits_t CLCDATAbits @ 0xF0F;
// bitfield macros
#define _CLCDATA_MLC1OUT_POSN                               0x0
#define _CLCDATA_MLC1OUT_POSITION                           0x0
#define _CLCDATA_MLC1OUT_SIZE                               0x1
#define _CLCDATA_MLC1OUT_LENGTH                             0x1
#define _CLCDATA_MLC1OUT_MASK                               0x1
#define _CLCDATA_MLC2OUT_POSN                               0x1
#define _CLCDATA_MLC2OUT_POSITION                           0x1
#define _CLCDATA_MLC2OUT_SIZE                               0x1
#define _CLCDATA_MLC2OUT_LENGTH                             0x1
#define _CLCDATA_MLC2OUT_MASK                               0x2
#define _CLCDATA_MLC3OUT_POSN                               0x2
#define _CLCDATA_MLC3OUT_POSITION                           0x2
#define _CLCDATA_MLC3OUT_SIZE                               0x1
#define _CLCDATA_MLC3OUT_LENGTH                             0x1
#define _CLCDATA_MLC3OUT_MASK                               0x4
#define _CLCDATA_MLC4OUT_POSN                               0x3
#define _CLCDATA_MLC4OUT_POSITION                           0x3
#define _CLCDATA_MLC4OUT_SIZE                               0x1
#define _CLCDATA_MLC4OUT_LENGTH                             0x1
#define _CLCDATA_MLC4OUT_MASK                               0x8

// Register: CLC1CON
extern volatile unsigned char           CLC1CON             @ 0xF10;
#ifndef _LIB_BUILD
asm("CLC1CON equ 0F10h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1MODE                :3;
        unsigned LC1INTN                :1;
        unsigned LC1INTP                :1;
        unsigned LC1OUT                 :1;
        unsigned                        :1;
        unsigned LC1EN                  :1;
    };
    struct {
        unsigned LC1MODE0               :1;
        unsigned LC1MODE1               :1;
        unsigned LC1MODE2               :1;
    };
    struct {
        unsigned MODE                   :3;
        unsigned INTN                   :1;
        unsigned INTP                   :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
    };
} CLC1CONbits_t;
extern volatile CLC1CONbits_t CLC1CONbits @ 0xF10;
// bitfield macros
#define _CLC1CON_LC1MODE_POSN                               0x0
#define _CLC1CON_LC1MODE_POSITION                           0x0
#define _CLC1CON_LC1MODE_SIZE                               0x3
#define _CLC1CON_LC1MODE_LENGTH                             0x3
#define _CLC1CON_LC1MODE_MASK                               0x7
#define _CLC1CON_LC1INTN_POSN                               0x3
#define _CLC1CON_LC1INTN_POSITION                           0x3
#define _CLC1CON_LC1INTN_SIZE                               0x1
#define _CLC1CON_LC1INTN_LENGTH                             0x1
#define _CLC1CON_LC1INTN_MASK                               0x8
#define _CLC1CON_LC1INTP_POSN                               0x4
#define _CLC1CON_LC1INTP_POSITION                           0x4
#define _CLC1CON_LC1INTP_SIZE                               0x1
#define _CLC1CON_LC1INTP_LENGTH                             0x1
#define _CLC1CON_LC1INTP_MASK                               0x10
#define _CLC1CON_LC1OUT_POSN                                0x5
#define _CLC1CON_LC1OUT_POSITION                            0x5
#define _CLC1CON_LC1OUT_SIZE                                0x1
#define _CLC1CON_LC1OUT_LENGTH                              0x1
#define _CLC1CON_LC1OUT_MASK                                0x20
#define _CLC1CON_LC1EN_POSN                                 0x7
#define _CLC1CON_LC1EN_POSITION                             0x7
#define _CLC1CON_LC1EN_SIZE                                 0x1
#define _CLC1CON_LC1EN_LENGTH                               0x1
#define _CLC1CON_LC1EN_MASK                                 0x80
#define _CLC1CON_LC1MODE0_POSN                              0x0
#define _CLC1CON_LC1MODE0_POSITION                          0x0
#define _CLC1CON_LC1MODE0_SIZE                              0x1
#define _CLC1CON_LC1MODE0_LENGTH                            0x1
#define _CLC1CON_LC1MODE0_MASK                              0x1
#define _CLC1CON_LC1MODE1_POSN                              0x1
#define _CLC1CON_LC1MODE1_POSITION                          0x1
#define _CLC1CON_LC1MODE1_SIZE                              0x1
#define _CLC1CON_LC1MODE1_LENGTH                            0x1
#define _CLC1CON_LC1MODE1_MASK                              0x2
#define _CLC1CON_LC1MODE2_POSN                              0x2
#define _CLC1CON_LC1MODE2_POSITION                          0x2
#define _CLC1CON_LC1MODE2_SIZE                              0x1
#define _CLC1CON_LC1MODE2_LENGTH                            0x1
#define _CLC1CON_LC1MODE2_MASK                              0x4
#define _CLC1CON_MODE_POSN                                  0x0
#define _CLC1CON_MODE_POSITION                              0x0
#define _CLC1CON_MODE_SIZE                                  0x3
#define _CLC1CON_MODE_LENGTH                                0x3
#define _CLC1CON_MODE_MASK                                  0x7
#define _CLC1CON_INTN_POSN                                  0x3
#define _CLC1CON_INTN_POSITION                              0x3
#define _CLC1CON_INTN_SIZE                                  0x1
#define _CLC1CON_INTN_LENGTH                                0x1
#define _CLC1CON_INTN_MASK                                  0x8
#define _CLC1CON_INTP_POSN                                  0x4
#define _CLC1CON_INTP_POSITION                              0x4
#define _CLC1CON_INTP_SIZE                                  0x1
#define _CLC1CON_INTP_LENGTH                                0x1
#define _CLC1CON_INTP_MASK                                  0x10
#define _CLC1CON_OUT_POSN                                   0x5
#define _CLC1CON_OUT_POSITION                               0x5
#define _CLC1CON_OUT_SIZE                                   0x1
#define _CLC1CON_OUT_LENGTH                                 0x1
#define _CLC1CON_OUT_MASK                                   0x20
#define _CLC1CON_EN_POSN                                    0x7
#define _CLC1CON_EN_POSITION                                0x7
#define _CLC1CON_EN_SIZE                                    0x1
#define _CLC1CON_EN_LENGTH                                  0x1
#define _CLC1CON_EN_MASK                                    0x80
#define _CLC1CON_MODE0_POSN                                 0x0
#define _CLC1CON_MODE0_POSITION                             0x0
#define _CLC1CON_MODE0_SIZE                                 0x1
#define _CLC1CON_MODE0_LENGTH                               0x1
#define _CLC1CON_MODE0_MASK                                 0x1
#define _CLC1CON_MODE1_POSN                                 0x1
#define _CLC1CON_MODE1_POSITION                             0x1
#define _CLC1CON_MODE1_SIZE                                 0x1
#define _CLC1CON_MODE1_LENGTH                               0x1
#define _CLC1CON_MODE1_MASK                                 0x2
#define _CLC1CON_MODE2_POSN                                 0x2
#define _CLC1CON_MODE2_POSITION                             0x2
#define _CLC1CON_MODE2_SIZE                                 0x1
#define _CLC1CON_MODE2_LENGTH                               0x1
#define _CLC1CON_MODE2_MASK                                 0x4

// Register: CLC1POL
extern volatile unsigned char           CLC1POL             @ 0xF11;
#ifndef _LIB_BUILD
asm("CLC1POL equ 0F11h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1G1POL               :1;
        unsigned LC1G2POL               :1;
        unsigned LC1G3POL               :1;
        unsigned LC1G4POL               :1;
        unsigned                        :3;
        unsigned LC1POL                 :1;
    };
    struct {
        unsigned G1POL                  :1;
        unsigned G2POL                  :1;
        unsigned G3POL                  :1;
        unsigned G4POL                  :1;
        unsigned                        :3;
        unsigned POL                    :1;
    };
} CLC1POLbits_t;
extern volatile CLC1POLbits_t CLC1POLbits @ 0xF11;
// bitfield macros
#define _CLC1POL_LC1G1POL_POSN                              0x0
#define _CLC1POL_LC1G1POL_POSITION                          0x0
#define _CLC1POL_LC1G1POL_SIZE                              0x1
#define _CLC1POL_LC1G1POL_LENGTH                            0x1
#define _CLC1POL_LC1G1POL_MASK                              0x1
#define _CLC1POL_LC1G2POL_POSN                              0x1
#define _CLC1POL_LC1G2POL_POSITION                          0x1
#define _CLC1POL_LC1G2POL_SIZE                              0x1
#define _CLC1POL_LC1G2POL_LENGTH                            0x1
#define _CLC1POL_LC1G2POL_MASK                              0x2
#define _CLC1POL_LC1G3POL_POSN                              0x2
#define _CLC1POL_LC1G3POL_POSITION                          0x2
#define _CLC1POL_LC1G3POL_SIZE                              0x1
#define _CLC1POL_LC1G3POL_LENGTH                            0x1
#define _CLC1POL_LC1G3POL_MASK                              0x4
#define _CLC1POL_LC1G4POL_POSN                              0x3
#define _CLC1POL_LC1G4POL_POSITION                          0x3
#define _CLC1POL_LC1G4POL_SIZE                              0x1
#define _CLC1POL_LC1G4POL_LENGTH                            0x1
#define _CLC1POL_LC1G4POL_MASK                              0x8
#define _CLC1POL_LC1POL_POSN                                0x7
#define _CLC1POL_LC1POL_POSITION                            0x7
#define _CLC1POL_LC1POL_SIZE                                0x1
#define _CLC1POL_LC1POL_LENGTH                              0x1
#define _CLC1POL_LC1POL_MASK                                0x80
#define _CLC1POL_G1POL_POSN                                 0x0
#define _CLC1POL_G1POL_POSITION                             0x0
#define _CLC1POL_G1POL_SIZE                                 0x1
#define _CLC1POL_G1POL_LENGTH                               0x1
#define _CLC1POL_G1POL_MASK                                 0x1
#define _CLC1POL_G2POL_POSN                                 0x1
#define _CLC1POL_G2POL_POSITION                             0x1
#define _CLC1POL_G2POL_SIZE                                 0x1
#define _CLC1POL_G2POL_LENGTH                               0x1
#define _CLC1POL_G2POL_MASK                                 0x2
#define _CLC1POL_G3POL_POSN                                 0x2
#define _CLC1POL_G3POL_POSITION                             0x2
#define _CLC1POL_G3POL_SIZE                                 0x1
#define _CLC1POL_G3POL_LENGTH                               0x1
#define _CLC1POL_G3POL_MASK                                 0x4
#define _CLC1POL_G4POL_POSN                                 0x3
#define _CLC1POL_G4POL_POSITION                             0x3
#define _CLC1POL_G4POL_SIZE                                 0x1
#define _CLC1POL_G4POL_LENGTH                               0x1
#define _CLC1POL_G4POL_MASK                                 0x8
#define _CLC1POL_POL_POSN                                   0x7
#define _CLC1POL_POL_POSITION                               0x7
#define _CLC1POL_POL_SIZE                                   0x1
#define _CLC1POL_POL_LENGTH                                 0x1
#define _CLC1POL_POL_MASK                                   0x80

// Register: CLC1SEL0
extern volatile unsigned char           CLC1SEL0            @ 0xF12;
#ifndef _LIB_BUILD
asm("CLC1SEL0 equ 0F12h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1D1S0                :1;
        unsigned LC1D1S1                :1;
        unsigned LC1D1S2                :1;
        unsigned LC1D1S3                :1;
        unsigned LC1D1S4                :1;
        unsigned LC1D1S5                :1;
    };
    struct {
        unsigned LC1D1S                 :8;
    };
    struct {
        unsigned D1S                    :8;
    };
    struct {
        unsigned D1S0                   :1;
        unsigned D1S1                   :1;
        unsigned D1S2                   :1;
        unsigned D1S3                   :1;
        unsigned D1S4                   :1;
        unsigned D1S5                   :1;
    };
} CLC1SEL0bits_t;
extern volatile CLC1SEL0bits_t CLC1SEL0bits @ 0xF12;
// bitfield macros
#define _CLC1SEL0_LC1D1S0_POSN                              0x0
#define _CLC1SEL0_LC1D1S0_POSITION                          0x0
#define _CLC1SEL0_LC1D1S0_SIZE                              0x1
#define _CLC1SEL0_LC1D1S0_LENGTH                            0x1
#define _CLC1SEL0_LC1D1S0_MASK                              0x1
#define _CLC1SEL0_LC1D1S1_POSN                              0x1
#define _CLC1SEL0_LC1D1S1_POSITION                          0x1
#define _CLC1SEL0_LC1D1S1_SIZE                              0x1
#define _CLC1SEL0_LC1D1S1_LENGTH                            0x1
#define _CLC1SEL0_LC1D1S1_MASK                              0x2
#define _CLC1SEL0_LC1D1S2_POSN                              0x2
#define _CLC1SEL0_LC1D1S2_POSITION                          0x2
#define _CLC1SEL0_LC1D1S2_SIZE                              0x1
#define _CLC1SEL0_LC1D1S2_LENGTH                            0x1
#define _CLC1SEL0_LC1D1S2_MASK                              0x4
#define _CLC1SEL0_LC1D1S3_POSN                              0x3
#define _CLC1SEL0_LC1D1S3_POSITION                          0x3
#define _CLC1SEL0_LC1D1S3_SIZE                              0x1
#define _CLC1SEL0_LC1D1S3_LENGTH                            0x1
#define _CLC1SEL0_LC1D1S3_MASK                              0x8
#define _CLC1SEL0_LC1D1S4_POSN                              0x4
#define _CLC1SEL0_LC1D1S4_POSITION                          0x4
#define _CLC1SEL0_LC1D1S4_SIZE                              0x1
#define _CLC1SEL0_LC1D1S4_LENGTH                            0x1
#define _CLC1SEL0_LC1D1S4_MASK                              0x10
#define _CLC1SEL0_LC1D1S5_POSN                              0x5
#define _CLC1SEL0_LC1D1S5_POSITION                          0x5
#define _CLC1SEL0_LC1D1S5_SIZE                              0x1
#define _CLC1SEL0_LC1D1S5_LENGTH                            0x1
#define _CLC1SEL0_LC1D1S5_MASK                              0x20
#define _CLC1SEL0_LC1D1S_POSN                               0x0
#define _CLC1SEL0_LC1D1S_POSITION                           0x0
#define _CLC1SEL0_LC1D1S_SIZE                               0x8
#define _CLC1SEL0_LC1D1S_LENGTH                             0x8
#define _CLC1SEL0_LC1D1S_MASK                               0xFF
#define _CLC1SEL0_D1S_POSN                                  0x0
#define _CLC1SEL0_D1S_POSITION                              0x0
#define _CLC1SEL0_D1S_SIZE                                  0x8
#define _CLC1SEL0_D1S_LENGTH                                0x8
#define _CLC1SEL0_D1S_MASK                                  0xFF
#define _CLC1SEL0_D1S0_POSN                                 0x0
#define _CLC1SEL0_D1S0_POSITION                             0x0
#define _CLC1SEL0_D1S0_SIZE                                 0x1
#define _CLC1SEL0_D1S0_LENGTH                               0x1
#define _CLC1SEL0_D1S0_MASK                                 0x1
#define _CLC1SEL0_D1S1_POSN                                 0x1
#define _CLC1SEL0_D1S1_POSITION                             0x1
#define _CLC1SEL0_D1S1_SIZE                                 0x1
#define _CLC1SEL0_D1S1_LENGTH                               0x1
#define _CLC1SEL0_D1S1_MASK                                 0x2
#define _CLC1SEL0_D1S2_POSN                                 0x2
#define _CLC1SEL0_D1S2_POSITION                             0x2
#define _CLC1SEL0_D1S2_SIZE                                 0x1
#define _CLC1SEL0_D1S2_LENGTH                               0x1
#define _CLC1SEL0_D1S2_MASK                                 0x4
#define _CLC1SEL0_D1S3_POSN                                 0x3
#define _CLC1SEL0_D1S3_POSITION                             0x3
#define _CLC1SEL0_D1S3_SIZE                                 0x1
#define _CLC1SEL0_D1S3_LENGTH                               0x1
#define _CLC1SEL0_D1S3_MASK                                 0x8
#define _CLC1SEL0_D1S4_POSN                                 0x4
#define _CLC1SEL0_D1S4_POSITION                             0x4
#define _CLC1SEL0_D1S4_SIZE                                 0x1
#define _CLC1SEL0_D1S4_LENGTH                               0x1
#define _CLC1SEL0_D1S4_MASK                                 0x10
#define _CLC1SEL0_D1S5_POSN                                 0x5
#define _CLC1SEL0_D1S5_POSITION                             0x5
#define _CLC1SEL0_D1S5_SIZE                                 0x1
#define _CLC1SEL0_D1S5_LENGTH                               0x1
#define _CLC1SEL0_D1S5_MASK                                 0x20

// Register: CLC1SEL1
extern volatile unsigned char           CLC1SEL1            @ 0xF13;
#ifndef _LIB_BUILD
asm("CLC1SEL1 equ 0F13h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1D2S0                :1;
        unsigned LC1D2S1                :1;
        unsigned LC1D2S2                :1;
        unsigned LC1D2S3                :1;
        unsigned LC1D2S4                :1;
        unsigned LC1D2S5                :1;
    };
    struct {
        unsigned LC1D2S                 :8;
    };
    struct {
        unsigned D2S                    :8;
    };
    struct {
        unsigned D2S0                   :1;
        unsigned D2S1                   :1;
        unsigned D2S2                   :1;
        unsigned D2S3                   :1;
        unsigned D2S4                   :1;
        unsigned D2S5                   :1;
    };
} CLC1SEL1bits_t;
extern volatile CLC1SEL1bits_t CLC1SEL1bits @ 0xF13;
// bitfield macros
#define _CLC1SEL1_LC1D2S0_POSN                              0x0
#define _CLC1SEL1_LC1D2S0_POSITION                          0x0
#define _CLC1SEL1_LC1D2S0_SIZE                              0x1
#define _CLC1SEL1_LC1D2S0_LENGTH                            0x1
#define _CLC1SEL1_LC1D2S0_MASK                              0x1
#define _CLC1SEL1_LC1D2S1_POSN                              0x1
#define _CLC1SEL1_LC1D2S1_POSITION                          0x1
#define _CLC1SEL1_LC1D2S1_SIZE                              0x1
#define _CLC1SEL1_LC1D2S1_LENGTH                            0x1
#define _CLC1SEL1_LC1D2S1_MASK                              0x2
#define _CLC1SEL1_LC1D2S2_POSN                              0x2
#define _CLC1SEL1_LC1D2S2_POSITION                          0x2
#define _CLC1SEL1_LC1D2S2_SIZE                              0x1
#define _CLC1SEL1_LC1D2S2_LENGTH                            0x1
#define _CLC1SEL1_LC1D2S2_MASK                              0x4
#define _CLC1SEL1_LC1D2S3_POSN                              0x3
#define _CLC1SEL1_LC1D2S3_POSITION                          0x3
#define _CLC1SEL1_LC1D2S3_SIZE                              0x1
#define _CLC1SEL1_LC1D2S3_LENGTH                            0x1
#define _CLC1SEL1_LC1D2S3_MASK                              0x8
#define _CLC1SEL1_LC1D2S4_POSN                              0x4
#define _CLC1SEL1_LC1D2S4_POSITION                          0x4
#define _CLC1SEL1_LC1D2S4_SIZE                              0x1
#define _CLC1SEL1_LC1D2S4_LENGTH                            0x1
#define _CLC1SEL1_LC1D2S4_MASK                              0x10
#define _CLC1SEL1_LC1D2S5_POSN                              0x5
#define _CLC1SEL1_LC1D2S5_POSITION                          0x5
#define _CLC1SEL1_LC1D2S5_SIZE                              0x1
#define _CLC1SEL1_LC1D2S5_LENGTH                            0x1
#define _CLC1SEL1_LC1D2S5_MASK                              0x20
#define _CLC1SEL1_LC1D2S_POSN                               0x0
#define _CLC1SEL1_LC1D2S_POSITION                           0x0
#define _CLC1SEL1_LC1D2S_SIZE                               0x8
#define _CLC1SEL1_LC1D2S_LENGTH                             0x8
#define _CLC1SEL1_LC1D2S_MASK                               0xFF
#define _CLC1SEL1_D2S_POSN                                  0x0
#define _CLC1SEL1_D2S_POSITION                              0x0
#define _CLC1SEL1_D2S_SIZE                                  0x8
#define _CLC1SEL1_D2S_LENGTH                                0x8
#define _CLC1SEL1_D2S_MASK                                  0xFF
#define _CLC1SEL1_D2S0_POSN                                 0x0
#define _CLC1SEL1_D2S0_POSITION                             0x0
#define _CLC1SEL1_D2S0_SIZE                                 0x1
#define _CLC1SEL1_D2S0_LENGTH                               0x1
#define _CLC1SEL1_D2S0_MASK                                 0x1
#define _CLC1SEL1_D2S1_POSN                                 0x1
#define _CLC1SEL1_D2S1_POSITION                             0x1
#define _CLC1SEL1_D2S1_SIZE                                 0x1
#define _CLC1SEL1_D2S1_LENGTH                               0x1
#define _CLC1SEL1_D2S1_MASK                                 0x2
#define _CLC1SEL1_D2S2_POSN                                 0x2
#define _CLC1SEL1_D2S2_POSITION                             0x2
#define _CLC1SEL1_D2S2_SIZE                                 0x1
#define _CLC1SEL1_D2S2_LENGTH                               0x1
#define _CLC1SEL1_D2S2_MASK                                 0x4
#define _CLC1SEL1_D2S3_POSN                                 0x3
#define _CLC1SEL1_D2S3_POSITION                             0x3
#define _CLC1SEL1_D2S3_SIZE                                 0x1
#define _CLC1SEL1_D2S3_LENGTH                               0x1
#define _CLC1SEL1_D2S3_MASK                                 0x8
#define _CLC1SEL1_D2S4_POSN                                 0x4
#define _CLC1SEL1_D2S4_POSITION                             0x4
#define _CLC1SEL1_D2S4_SIZE                                 0x1
#define _CLC1SEL1_D2S4_LENGTH                               0x1
#define _CLC1SEL1_D2S4_MASK                                 0x10
#define _CLC1SEL1_D2S5_POSN                                 0x5
#define _CLC1SEL1_D2S5_POSITION                             0x5
#define _CLC1SEL1_D2S5_SIZE                                 0x1
#define _CLC1SEL1_D2S5_LENGTH                               0x1
#define _CLC1SEL1_D2S5_MASK                                 0x20

// Register: CLC1SEL2
extern volatile unsigned char           CLC1SEL2            @ 0xF14;
#ifndef _LIB_BUILD
asm("CLC1SEL2 equ 0F14h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1D3S0                :1;
        unsigned LC1D3S1                :1;
        unsigned LC1D3S2                :1;
        unsigned LC1D3S3                :1;
        unsigned LC1D3S4                :1;
        unsigned LC1D3S5                :1;
    };
    struct {
        unsigned LC1D3S                 :8;
    };
    struct {
        unsigned D3S                    :8;
    };
    struct {
        unsigned D3S0                   :1;
        unsigned D3S1                   :1;
        unsigned D3S2                   :1;
        unsigned D3S3                   :1;
        unsigned D3S4                   :1;
        unsigned D3S5                   :1;
    };
} CLC1SEL2bits_t;
extern volatile CLC1SEL2bits_t CLC1SEL2bits @ 0xF14;
// bitfield macros
#define _CLC1SEL2_LC1D3S0_POSN                              0x0
#define _CLC1SEL2_LC1D3S0_POSITION                          0x0
#define _CLC1SEL2_LC1D3S0_SIZE                              0x1
#define _CLC1SEL2_LC1D3S0_LENGTH                            0x1
#define _CLC1SEL2_LC1D3S0_MASK                              0x1
#define _CLC1SEL2_LC1D3S1_POSN                              0x1
#define _CLC1SEL2_LC1D3S1_POSITION                          0x1
#define _CLC1SEL2_LC1D3S1_SIZE                              0x1
#define _CLC1SEL2_LC1D3S1_LENGTH                            0x1
#define _CLC1SEL2_LC1D3S1_MASK                              0x2
#define _CLC1SEL2_LC1D3S2_POSN                              0x2
#define _CLC1SEL2_LC1D3S2_POSITION                          0x2
#define _CLC1SEL2_LC1D3S2_SIZE                              0x1
#define _CLC1SEL2_LC1D3S2_LENGTH                            0x1
#define _CLC1SEL2_LC1D3S2_MASK                              0x4
#define _CLC1SEL2_LC1D3S3_POSN                              0x3
#define _CLC1SEL2_LC1D3S3_POSITION                          0x3
#define _CLC1SEL2_LC1D3S3_SIZE                              0x1
#define _CLC1SEL2_LC1D3S3_LENGTH                            0x1
#define _CLC1SEL2_LC1D3S3_MASK                              0x8
#define _CLC1SEL2_LC1D3S4_POSN                              0x4
#define _CLC1SEL2_LC1D3S4_POSITION                          0x4
#define _CLC1SEL2_LC1D3S4_SIZE                              0x1
#define _CLC1SEL2_LC1D3S4_LENGTH                            0x1
#define _CLC1SEL2_LC1D3S4_MASK                              0x10
#define _CLC1SEL2_LC1D3S5_POSN                              0x5
#define _CLC1SEL2_LC1D3S5_POSITION                          0x5
#define _CLC1SEL2_LC1D3S5_SIZE                              0x1
#define _CLC1SEL2_LC1D3S5_LENGTH                            0x1
#define _CLC1SEL2_LC1D3S5_MASK                              0x20
#define _CLC1SEL2_LC1D3S_POSN                               0x0
#define _CLC1SEL2_LC1D3S_POSITION                           0x0
#define _CLC1SEL2_LC1D3S_SIZE                               0x8
#define _CLC1SEL2_LC1D3S_LENGTH                             0x8
#define _CLC1SEL2_LC1D3S_MASK                               0xFF
#define _CLC1SEL2_D3S_POSN                                  0x0
#define _CLC1SEL2_D3S_POSITION                              0x0
#define _CLC1SEL2_D3S_SIZE                                  0x8
#define _CLC1SEL2_D3S_LENGTH                                0x8
#define _CLC1SEL2_D3S_MASK                                  0xFF
#define _CLC1SEL2_D3S0_POSN                                 0x0
#define _CLC1SEL2_D3S0_POSITION                             0x0
#define _CLC1SEL2_D3S0_SIZE                                 0x1
#define _CLC1SEL2_D3S0_LENGTH                               0x1
#define _CLC1SEL2_D3S0_MASK                                 0x1
#define _CLC1SEL2_D3S1_POSN                                 0x1
#define _CLC1SEL2_D3S1_POSITION                             0x1
#define _CLC1SEL2_D3S1_SIZE                                 0x1
#define _CLC1SEL2_D3S1_LENGTH                               0x1
#define _CLC1SEL2_D3S1_MASK                                 0x2
#define _CLC1SEL2_D3S2_POSN                                 0x2
#define _CLC1SEL2_D3S2_POSITION                             0x2
#define _CLC1SEL2_D3S2_SIZE                                 0x1
#define _CLC1SEL2_D3S2_LENGTH                               0x1
#define _CLC1SEL2_D3S2_MASK                                 0x4
#define _CLC1SEL2_D3S3_POSN                                 0x3
#define _CLC1SEL2_D3S3_POSITION                             0x3
#define _CLC1SEL2_D3S3_SIZE                                 0x1
#define _CLC1SEL2_D3S3_LENGTH                               0x1
#define _CLC1SEL2_D3S3_MASK                                 0x8
#define _CLC1SEL2_D3S4_POSN                                 0x4
#define _CLC1SEL2_D3S4_POSITION                             0x4
#define _CLC1SEL2_D3S4_SIZE                                 0x1
#define _CLC1SEL2_D3S4_LENGTH                               0x1
#define _CLC1SEL2_D3S4_MASK                                 0x10
#define _CLC1SEL2_D3S5_POSN                                 0x5
#define _CLC1SEL2_D3S5_POSITION                             0x5
#define _CLC1SEL2_D3S5_SIZE                                 0x1
#define _CLC1SEL2_D3S5_LENGTH                               0x1
#define _CLC1SEL2_D3S5_MASK                                 0x20

// Register: CLC1SEL3
extern volatile unsigned char           CLC1SEL3            @ 0xF15;
#ifndef _LIB_BUILD
asm("CLC1SEL3 equ 0F15h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1D4S0                :1;
        unsigned LC1D4S1                :1;
        unsigned LC1D4S2                :1;
        unsigned LC1D4S3                :1;
        unsigned LC1D4S4                :1;
        unsigned LC1D4S5                :1;
    };
    struct {
        unsigned LC1D4S                 :8;
    };
    struct {
        unsigned D4S                    :8;
    };
    struct {
        unsigned D4S0                   :1;
        unsigned D4S1                   :1;
        unsigned D4S2                   :1;
        unsigned D4S3                   :1;
        unsigned D4S4                   :1;
        unsigned D4S5                   :1;
    };
} CLC1SEL3bits_t;
extern volatile CLC1SEL3bits_t CLC1SEL3bits @ 0xF15;
// bitfield macros
#define _CLC1SEL3_LC1D4S0_POSN                              0x0
#define _CLC1SEL3_LC1D4S0_POSITION                          0x0
#define _CLC1SEL3_LC1D4S0_SIZE                              0x1
#define _CLC1SEL3_LC1D4S0_LENGTH                            0x1
#define _CLC1SEL3_LC1D4S0_MASK                              0x1
#define _CLC1SEL3_LC1D4S1_POSN                              0x1
#define _CLC1SEL3_LC1D4S1_POSITION                          0x1
#define _CLC1SEL3_LC1D4S1_SIZE                              0x1
#define _CLC1SEL3_LC1D4S1_LENGTH                            0x1
#define _CLC1SEL3_LC1D4S1_MASK                              0x2
#define _CLC1SEL3_LC1D4S2_POSN                              0x2
#define _CLC1SEL3_LC1D4S2_POSITION                          0x2
#define _CLC1SEL3_LC1D4S2_SIZE                              0x1
#define _CLC1SEL3_LC1D4S2_LENGTH                            0x1
#define _CLC1SEL3_LC1D4S2_MASK                              0x4
#define _CLC1SEL3_LC1D4S3_POSN                              0x3
#define _CLC1SEL3_LC1D4S3_POSITION                          0x3
#define _CLC1SEL3_LC1D4S3_SIZE                              0x1
#define _CLC1SEL3_LC1D4S3_LENGTH                            0x1
#define _CLC1SEL3_LC1D4S3_MASK                              0x8
#define _CLC1SEL3_LC1D4S4_POSN                              0x4
#define _CLC1SEL3_LC1D4S4_POSITION                          0x4
#define _CLC1SEL3_LC1D4S4_SIZE                              0x1
#define _CLC1SEL3_LC1D4S4_LENGTH                            0x1
#define _CLC1SEL3_LC1D4S4_MASK                              0x10
#define _CLC1SEL3_LC1D4S5_POSN                              0x5
#define _CLC1SEL3_LC1D4S5_POSITION                          0x5
#define _CLC1SEL3_LC1D4S5_SIZE                              0x1
#define _CLC1SEL3_LC1D4S5_LENGTH                            0x1
#define _CLC1SEL3_LC1D4S5_MASK                              0x20
#define _CLC1SEL3_LC1D4S_POSN                               0x0
#define _CLC1SEL3_LC1D4S_POSITION                           0x0
#define _CLC1SEL3_LC1D4S_SIZE                               0x8
#define _CLC1SEL3_LC1D4S_LENGTH                             0x8
#define _CLC1SEL3_LC1D4S_MASK                               0xFF
#define _CLC1SEL3_D4S_POSN                                  0x0
#define _CLC1SEL3_D4S_POSITION                              0x0
#define _CLC1SEL3_D4S_SIZE                                  0x8
#define _CLC1SEL3_D4S_LENGTH                                0x8
#define _CLC1SEL3_D4S_MASK                                  0xFF
#define _CLC1SEL3_D4S0_POSN                                 0x0
#define _CLC1SEL3_D4S0_POSITION                             0x0
#define _CLC1SEL3_D4S0_SIZE                                 0x1
#define _CLC1SEL3_D4S0_LENGTH                               0x1
#define _CLC1SEL3_D4S0_MASK                                 0x1
#define _CLC1SEL3_D4S1_POSN                                 0x1
#define _CLC1SEL3_D4S1_POSITION                             0x1
#define _CLC1SEL3_D4S1_SIZE                                 0x1
#define _CLC1SEL3_D4S1_LENGTH                               0x1
#define _CLC1SEL3_D4S1_MASK                                 0x2
#define _CLC1SEL3_D4S2_POSN                                 0x2
#define _CLC1SEL3_D4S2_POSITION                             0x2
#define _CLC1SEL3_D4S2_SIZE                                 0x1
#define _CLC1SEL3_D4S2_LENGTH                               0x1
#define _CLC1SEL3_D4S2_MASK                                 0x4
#define _CLC1SEL3_D4S3_POSN                                 0x3
#define _CLC1SEL3_D4S3_POSITION                             0x3
#define _CLC1SEL3_D4S3_SIZE                                 0x1
#define _CLC1SEL3_D4S3_LENGTH                               0x1
#define _CLC1SEL3_D4S3_MASK                                 0x8
#define _CLC1SEL3_D4S4_POSN                                 0x4
#define _CLC1SEL3_D4S4_POSITION                             0x4
#define _CLC1SEL3_D4S4_SIZE                                 0x1
#define _CLC1SEL3_D4S4_LENGTH                               0x1
#define _CLC1SEL3_D4S4_MASK                                 0x10
#define _CLC1SEL3_D4S5_POSN                                 0x5
#define _CLC1SEL3_D4S5_POSITION                             0x5
#define _CLC1SEL3_D4S5_SIZE                                 0x1
#define _CLC1SEL3_D4S5_LENGTH                               0x1
#define _CLC1SEL3_D4S5_MASK                                 0x20

// Register: CLC1GLS0
extern volatile unsigned char           CLC1GLS0            @ 0xF16;
#ifndef _LIB_BUILD
asm("CLC1GLS0 equ 0F16h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1G1D1N               :1;
        unsigned LC1G1D1T               :1;
        unsigned LC1G1D2N               :1;
        unsigned LC1G1D2T               :1;
        unsigned LC1G1D3N               :1;
        unsigned LC1G1D3T               :1;
        unsigned LC1G1D4N               :1;
        unsigned LC1G1D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC1GLS0bits_t;
extern volatile CLC1GLS0bits_t CLC1GLS0bits @ 0xF16;
// bitfield macros
#define _CLC1GLS0_LC1G1D1N_POSN                             0x0
#define _CLC1GLS0_LC1G1D1N_POSITION                         0x0
#define _CLC1GLS0_LC1G1D1N_SIZE                             0x1
#define _CLC1GLS0_LC1G1D1N_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D1N_MASK                             0x1
#define _CLC1GLS0_LC1G1D1T_POSN                             0x1
#define _CLC1GLS0_LC1G1D1T_POSITION                         0x1
#define _CLC1GLS0_LC1G1D1T_SIZE                             0x1
#define _CLC1GLS0_LC1G1D1T_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D1T_MASK                             0x2
#define _CLC1GLS0_LC1G1D2N_POSN                             0x2
#define _CLC1GLS0_LC1G1D2N_POSITION                         0x2
#define _CLC1GLS0_LC1G1D2N_SIZE                             0x1
#define _CLC1GLS0_LC1G1D2N_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D2N_MASK                             0x4
#define _CLC1GLS0_LC1G1D2T_POSN                             0x3
#define _CLC1GLS0_LC1G1D2T_POSITION                         0x3
#define _CLC1GLS0_LC1G1D2T_SIZE                             0x1
#define _CLC1GLS0_LC1G1D2T_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D2T_MASK                             0x8
#define _CLC1GLS0_LC1G1D3N_POSN                             0x4
#define _CLC1GLS0_LC1G1D3N_POSITION                         0x4
#define _CLC1GLS0_LC1G1D3N_SIZE                             0x1
#define _CLC1GLS0_LC1G1D3N_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D3N_MASK                             0x10
#define _CLC1GLS0_LC1G1D3T_POSN                             0x5
#define _CLC1GLS0_LC1G1D3T_POSITION                         0x5
#define _CLC1GLS0_LC1G1D3T_SIZE                             0x1
#define _CLC1GLS0_LC1G1D3T_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D3T_MASK                             0x20
#define _CLC1GLS0_LC1G1D4N_POSN                             0x6
#define _CLC1GLS0_LC1G1D4N_POSITION                         0x6
#define _CLC1GLS0_LC1G1D4N_SIZE                             0x1
#define _CLC1GLS0_LC1G1D4N_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D4N_MASK                             0x40
#define _CLC1GLS0_LC1G1D4T_POSN                             0x7
#define _CLC1GLS0_LC1G1D4T_POSITION                         0x7
#define _CLC1GLS0_LC1G1D4T_SIZE                             0x1
#define _CLC1GLS0_LC1G1D4T_LENGTH                           0x1
#define _CLC1GLS0_LC1G1D4T_MASK                             0x80
#define _CLC1GLS0_D1N_POSN                                  0x0
#define _CLC1GLS0_D1N_POSITION                              0x0
#define _CLC1GLS0_D1N_SIZE                                  0x1
#define _CLC1GLS0_D1N_LENGTH                                0x1
#define _CLC1GLS0_D1N_MASK                                  0x1
#define _CLC1GLS0_D1T_POSN                                  0x1
#define _CLC1GLS0_D1T_POSITION                              0x1
#define _CLC1GLS0_D1T_SIZE                                  0x1
#define _CLC1GLS0_D1T_LENGTH                                0x1
#define _CLC1GLS0_D1T_MASK                                  0x2
#define _CLC1GLS0_D2N_POSN                                  0x2
#define _CLC1GLS0_D2N_POSITION                              0x2
#define _CLC1GLS0_D2N_SIZE                                  0x1
#define _CLC1GLS0_D2N_LENGTH                                0x1
#define _CLC1GLS0_D2N_MASK                                  0x4
#define _CLC1GLS0_D2T_POSN                                  0x3
#define _CLC1GLS0_D2T_POSITION                              0x3
#define _CLC1GLS0_D2T_SIZE                                  0x1
#define _CLC1GLS0_D2T_LENGTH                                0x1
#define _CLC1GLS0_D2T_MASK                                  0x8
#define _CLC1GLS0_D3N_POSN                                  0x4
#define _CLC1GLS0_D3N_POSITION                              0x4
#define _CLC1GLS0_D3N_SIZE                                  0x1
#define _CLC1GLS0_D3N_LENGTH                                0x1
#define _CLC1GLS0_D3N_MASK                                  0x10
#define _CLC1GLS0_D3T_POSN                                  0x5
#define _CLC1GLS0_D3T_POSITION                              0x5
#define _CLC1GLS0_D3T_SIZE                                  0x1
#define _CLC1GLS0_D3T_LENGTH                                0x1
#define _CLC1GLS0_D3T_MASK                                  0x20
#define _CLC1GLS0_D4N_POSN                                  0x6
#define _CLC1GLS0_D4N_POSITION                              0x6
#define _CLC1GLS0_D4N_SIZE                                  0x1
#define _CLC1GLS0_D4N_LENGTH                                0x1
#define _CLC1GLS0_D4N_MASK                                  0x40
#define _CLC1GLS0_D4T_POSN                                  0x7
#define _CLC1GLS0_D4T_POSITION                              0x7
#define _CLC1GLS0_D4T_SIZE                                  0x1
#define _CLC1GLS0_D4T_LENGTH                                0x1
#define _CLC1GLS0_D4T_MASK                                  0x80

// Register: CLC1GLS1
extern volatile unsigned char           CLC1GLS1            @ 0xF17;
#ifndef _LIB_BUILD
asm("CLC1GLS1 equ 0F17h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1G2D1N               :1;
        unsigned LC1G2D1T               :1;
        unsigned LC1G2D2N               :1;
        unsigned LC1G2D2T               :1;
        unsigned LC1G2D3N               :1;
        unsigned LC1G2D3T               :1;
        unsigned LC1G2D4N               :1;
        unsigned LC1G2D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC1GLS1bits_t;
extern volatile CLC1GLS1bits_t CLC1GLS1bits @ 0xF17;
// bitfield macros
#define _CLC1GLS1_LC1G2D1N_POSN                             0x0
#define _CLC1GLS1_LC1G2D1N_POSITION                         0x0
#define _CLC1GLS1_LC1G2D1N_SIZE                             0x1
#define _CLC1GLS1_LC1G2D1N_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D1N_MASK                             0x1
#define _CLC1GLS1_LC1G2D1T_POSN                             0x1
#define _CLC1GLS1_LC1G2D1T_POSITION                         0x1
#define _CLC1GLS1_LC1G2D1T_SIZE                             0x1
#define _CLC1GLS1_LC1G2D1T_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D1T_MASK                             0x2
#define _CLC1GLS1_LC1G2D2N_POSN                             0x2
#define _CLC1GLS1_LC1G2D2N_POSITION                         0x2
#define _CLC1GLS1_LC1G2D2N_SIZE                             0x1
#define _CLC1GLS1_LC1G2D2N_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D2N_MASK                             0x4
#define _CLC1GLS1_LC1G2D2T_POSN                             0x3
#define _CLC1GLS1_LC1G2D2T_POSITION                         0x3
#define _CLC1GLS1_LC1G2D2T_SIZE                             0x1
#define _CLC1GLS1_LC1G2D2T_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D2T_MASK                             0x8
#define _CLC1GLS1_LC1G2D3N_POSN                             0x4
#define _CLC1GLS1_LC1G2D3N_POSITION                         0x4
#define _CLC1GLS1_LC1G2D3N_SIZE                             0x1
#define _CLC1GLS1_LC1G2D3N_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D3N_MASK                             0x10
#define _CLC1GLS1_LC1G2D3T_POSN                             0x5
#define _CLC1GLS1_LC1G2D3T_POSITION                         0x5
#define _CLC1GLS1_LC1G2D3T_SIZE                             0x1
#define _CLC1GLS1_LC1G2D3T_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D3T_MASK                             0x20
#define _CLC1GLS1_LC1G2D4N_POSN                             0x6
#define _CLC1GLS1_LC1G2D4N_POSITION                         0x6
#define _CLC1GLS1_LC1G2D4N_SIZE                             0x1
#define _CLC1GLS1_LC1G2D4N_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D4N_MASK                             0x40
#define _CLC1GLS1_LC1G2D4T_POSN                             0x7
#define _CLC1GLS1_LC1G2D4T_POSITION                         0x7
#define _CLC1GLS1_LC1G2D4T_SIZE                             0x1
#define _CLC1GLS1_LC1G2D4T_LENGTH                           0x1
#define _CLC1GLS1_LC1G2D4T_MASK                             0x80
#define _CLC1GLS1_D1N_POSN                                  0x0
#define _CLC1GLS1_D1N_POSITION                              0x0
#define _CLC1GLS1_D1N_SIZE                                  0x1
#define _CLC1GLS1_D1N_LENGTH                                0x1
#define _CLC1GLS1_D1N_MASK                                  0x1
#define _CLC1GLS1_D1T_POSN                                  0x1
#define _CLC1GLS1_D1T_POSITION                              0x1
#define _CLC1GLS1_D1T_SIZE                                  0x1
#define _CLC1GLS1_D1T_LENGTH                                0x1
#define _CLC1GLS1_D1T_MASK                                  0x2
#define _CLC1GLS1_D2N_POSN                                  0x2
#define _CLC1GLS1_D2N_POSITION                              0x2
#define _CLC1GLS1_D2N_SIZE                                  0x1
#define _CLC1GLS1_D2N_LENGTH                                0x1
#define _CLC1GLS1_D2N_MASK                                  0x4
#define _CLC1GLS1_D2T_POSN                                  0x3
#define _CLC1GLS1_D2T_POSITION                              0x3
#define _CLC1GLS1_D2T_SIZE                                  0x1
#define _CLC1GLS1_D2T_LENGTH                                0x1
#define _CLC1GLS1_D2T_MASK                                  0x8
#define _CLC1GLS1_D3N_POSN                                  0x4
#define _CLC1GLS1_D3N_POSITION                              0x4
#define _CLC1GLS1_D3N_SIZE                                  0x1
#define _CLC1GLS1_D3N_LENGTH                                0x1
#define _CLC1GLS1_D3N_MASK                                  0x10
#define _CLC1GLS1_D3T_POSN                                  0x5
#define _CLC1GLS1_D3T_POSITION                              0x5
#define _CLC1GLS1_D3T_SIZE                                  0x1
#define _CLC1GLS1_D3T_LENGTH                                0x1
#define _CLC1GLS1_D3T_MASK                                  0x20
#define _CLC1GLS1_D4N_POSN                                  0x6
#define _CLC1GLS1_D4N_POSITION                              0x6
#define _CLC1GLS1_D4N_SIZE                                  0x1
#define _CLC1GLS1_D4N_LENGTH                                0x1
#define _CLC1GLS1_D4N_MASK                                  0x40
#define _CLC1GLS1_D4T_POSN                                  0x7
#define _CLC1GLS1_D4T_POSITION                              0x7
#define _CLC1GLS1_D4T_SIZE                                  0x1
#define _CLC1GLS1_D4T_LENGTH                                0x1
#define _CLC1GLS1_D4T_MASK                                  0x80

// Register: CLC1GLS2
extern volatile unsigned char           CLC1GLS2            @ 0xF18;
#ifndef _LIB_BUILD
asm("CLC1GLS2 equ 0F18h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1G3D1N               :1;
        unsigned LC1G3D1T               :1;
        unsigned LC1G3D2N               :1;
        unsigned LC1G3D2T               :1;
        unsigned LC1G3D3N               :1;
        unsigned LC1G3D3T               :1;
        unsigned LC1G3D4N               :1;
        unsigned LC1G3D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC1GLS2bits_t;
extern volatile CLC1GLS2bits_t CLC1GLS2bits @ 0xF18;
// bitfield macros
#define _CLC1GLS2_LC1G3D1N_POSN                             0x0
#define _CLC1GLS2_LC1G3D1N_POSITION                         0x0
#define _CLC1GLS2_LC1G3D1N_SIZE                             0x1
#define _CLC1GLS2_LC1G3D1N_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D1N_MASK                             0x1
#define _CLC1GLS2_LC1G3D1T_POSN                             0x1
#define _CLC1GLS2_LC1G3D1T_POSITION                         0x1
#define _CLC1GLS2_LC1G3D1T_SIZE                             0x1
#define _CLC1GLS2_LC1G3D1T_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D1T_MASK                             0x2
#define _CLC1GLS2_LC1G3D2N_POSN                             0x2
#define _CLC1GLS2_LC1G3D2N_POSITION                         0x2
#define _CLC1GLS2_LC1G3D2N_SIZE                             0x1
#define _CLC1GLS2_LC1G3D2N_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D2N_MASK                             0x4
#define _CLC1GLS2_LC1G3D2T_POSN                             0x3
#define _CLC1GLS2_LC1G3D2T_POSITION                         0x3
#define _CLC1GLS2_LC1G3D2T_SIZE                             0x1
#define _CLC1GLS2_LC1G3D2T_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D2T_MASK                             0x8
#define _CLC1GLS2_LC1G3D3N_POSN                             0x4
#define _CLC1GLS2_LC1G3D3N_POSITION                         0x4
#define _CLC1GLS2_LC1G3D3N_SIZE                             0x1
#define _CLC1GLS2_LC1G3D3N_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D3N_MASK                             0x10
#define _CLC1GLS2_LC1G3D3T_POSN                             0x5
#define _CLC1GLS2_LC1G3D3T_POSITION                         0x5
#define _CLC1GLS2_LC1G3D3T_SIZE                             0x1
#define _CLC1GLS2_LC1G3D3T_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D3T_MASK                             0x20
#define _CLC1GLS2_LC1G3D4N_POSN                             0x6
#define _CLC1GLS2_LC1G3D4N_POSITION                         0x6
#define _CLC1GLS2_LC1G3D4N_SIZE                             0x1
#define _CLC1GLS2_LC1G3D4N_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D4N_MASK                             0x40
#define _CLC1GLS2_LC1G3D4T_POSN                             0x7
#define _CLC1GLS2_LC1G3D4T_POSITION                         0x7
#define _CLC1GLS2_LC1G3D4T_SIZE                             0x1
#define _CLC1GLS2_LC1G3D4T_LENGTH                           0x1
#define _CLC1GLS2_LC1G3D4T_MASK                             0x80
#define _CLC1GLS2_D1N_POSN                                  0x0
#define _CLC1GLS2_D1N_POSITION                              0x0
#define _CLC1GLS2_D1N_SIZE                                  0x1
#define _CLC1GLS2_D1N_LENGTH                                0x1
#define _CLC1GLS2_D1N_MASK                                  0x1
#define _CLC1GLS2_D1T_POSN                                  0x1
#define _CLC1GLS2_D1T_POSITION                              0x1
#define _CLC1GLS2_D1T_SIZE                                  0x1
#define _CLC1GLS2_D1T_LENGTH                                0x1
#define _CLC1GLS2_D1T_MASK                                  0x2
#define _CLC1GLS2_D2N_POSN                                  0x2
#define _CLC1GLS2_D2N_POSITION                              0x2
#define _CLC1GLS2_D2N_SIZE                                  0x1
#define _CLC1GLS2_D2N_LENGTH                                0x1
#define _CLC1GLS2_D2N_MASK                                  0x4
#define _CLC1GLS2_D2T_POSN                                  0x3
#define _CLC1GLS2_D2T_POSITION                              0x3
#define _CLC1GLS2_D2T_SIZE                                  0x1
#define _CLC1GLS2_D2T_LENGTH                                0x1
#define _CLC1GLS2_D2T_MASK                                  0x8
#define _CLC1GLS2_D3N_POSN                                  0x4
#define _CLC1GLS2_D3N_POSITION                              0x4
#define _CLC1GLS2_D3N_SIZE                                  0x1
#define _CLC1GLS2_D3N_LENGTH                                0x1
#define _CLC1GLS2_D3N_MASK                                  0x10
#define _CLC1GLS2_D3T_POSN                                  0x5
#define _CLC1GLS2_D3T_POSITION                              0x5
#define _CLC1GLS2_D3T_SIZE                                  0x1
#define _CLC1GLS2_D3T_LENGTH                                0x1
#define _CLC1GLS2_D3T_MASK                                  0x20
#define _CLC1GLS2_D4N_POSN                                  0x6
#define _CLC1GLS2_D4N_POSITION                              0x6
#define _CLC1GLS2_D4N_SIZE                                  0x1
#define _CLC1GLS2_D4N_LENGTH                                0x1
#define _CLC1GLS2_D4N_MASK                                  0x40
#define _CLC1GLS2_D4T_POSN                                  0x7
#define _CLC1GLS2_D4T_POSITION                              0x7
#define _CLC1GLS2_D4T_SIZE                                  0x1
#define _CLC1GLS2_D4T_LENGTH                                0x1
#define _CLC1GLS2_D4T_MASK                                  0x80

// Register: CLC1GLS3
extern volatile unsigned char           CLC1GLS3            @ 0xF19;
#ifndef _LIB_BUILD
asm("CLC1GLS3 equ 0F19h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC1G4D1N               :1;
        unsigned LC1G4D1T               :1;
        unsigned LC1G4D2N               :1;
        unsigned LC1G4D2T               :1;
        unsigned LC1G4D3N               :1;
        unsigned LC1G4D3T               :1;
        unsigned LC1G4D4N               :1;
        unsigned LC1G4D4T               :1;
    };
    struct {
        unsigned G4D1N                  :1;
        unsigned G4D1T                  :1;
        unsigned G4D2N                  :1;
        unsigned G4D2T                  :1;
        unsigned G4D3N                  :1;
        unsigned G4D3T                  :1;
        unsigned G4D4N                  :1;
        unsigned G4D4T                  :1;
    };
} CLC1GLS3bits_t;
extern volatile CLC1GLS3bits_t CLC1GLS3bits @ 0xF19;
// bitfield macros
#define _CLC1GLS3_LC1G4D1N_POSN                             0x0
#define _CLC1GLS3_LC1G4D1N_POSITION                         0x0
#define _CLC1GLS3_LC1G4D1N_SIZE                             0x1
#define _CLC1GLS3_LC1G4D1N_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D1N_MASK                             0x1
#define _CLC1GLS3_LC1G4D1T_POSN                             0x1
#define _CLC1GLS3_LC1G4D1T_POSITION                         0x1
#define _CLC1GLS3_LC1G4D1T_SIZE                             0x1
#define _CLC1GLS3_LC1G4D1T_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D1T_MASK                             0x2
#define _CLC1GLS3_LC1G4D2N_POSN                             0x2
#define _CLC1GLS3_LC1G4D2N_POSITION                         0x2
#define _CLC1GLS3_LC1G4D2N_SIZE                             0x1
#define _CLC1GLS3_LC1G4D2N_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D2N_MASK                             0x4
#define _CLC1GLS3_LC1G4D2T_POSN                             0x3
#define _CLC1GLS3_LC1G4D2T_POSITION                         0x3
#define _CLC1GLS3_LC1G4D2T_SIZE                             0x1
#define _CLC1GLS3_LC1G4D2T_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D2T_MASK                             0x8
#define _CLC1GLS3_LC1G4D3N_POSN                             0x4
#define _CLC1GLS3_LC1G4D3N_POSITION                         0x4
#define _CLC1GLS3_LC1G4D3N_SIZE                             0x1
#define _CLC1GLS3_LC1G4D3N_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D3N_MASK                             0x10
#define _CLC1GLS3_LC1G4D3T_POSN                             0x5
#define _CLC1GLS3_LC1G4D3T_POSITION                         0x5
#define _CLC1GLS3_LC1G4D3T_SIZE                             0x1
#define _CLC1GLS3_LC1G4D3T_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D3T_MASK                             0x20
#define _CLC1GLS3_LC1G4D4N_POSN                             0x6
#define _CLC1GLS3_LC1G4D4N_POSITION                         0x6
#define _CLC1GLS3_LC1G4D4N_SIZE                             0x1
#define _CLC1GLS3_LC1G4D4N_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D4N_MASK                             0x40
#define _CLC1GLS3_LC1G4D4T_POSN                             0x7
#define _CLC1GLS3_LC1G4D4T_POSITION                         0x7
#define _CLC1GLS3_LC1G4D4T_SIZE                             0x1
#define _CLC1GLS3_LC1G4D4T_LENGTH                           0x1
#define _CLC1GLS3_LC1G4D4T_MASK                             0x80
#define _CLC1GLS3_G4D1N_POSN                                0x0
#define _CLC1GLS3_G4D1N_POSITION                            0x0
#define _CLC1GLS3_G4D1N_SIZE                                0x1
#define _CLC1GLS3_G4D1N_LENGTH                              0x1
#define _CLC1GLS3_G4D1N_MASK                                0x1
#define _CLC1GLS3_G4D1T_POSN                                0x1
#define _CLC1GLS3_G4D1T_POSITION                            0x1
#define _CLC1GLS3_G4D1T_SIZE                                0x1
#define _CLC1GLS3_G4D1T_LENGTH                              0x1
#define _CLC1GLS3_G4D1T_MASK                                0x2
#define _CLC1GLS3_G4D2N_POSN                                0x2
#define _CLC1GLS3_G4D2N_POSITION                            0x2
#define _CLC1GLS3_G4D2N_SIZE                                0x1
#define _CLC1GLS3_G4D2N_LENGTH                              0x1
#define _CLC1GLS3_G4D2N_MASK                                0x4
#define _CLC1GLS3_G4D2T_POSN                                0x3
#define _CLC1GLS3_G4D2T_POSITION                            0x3
#define _CLC1GLS3_G4D2T_SIZE                                0x1
#define _CLC1GLS3_G4D2T_LENGTH                              0x1
#define _CLC1GLS3_G4D2T_MASK                                0x8
#define _CLC1GLS3_G4D3N_POSN                                0x4
#define _CLC1GLS3_G4D3N_POSITION                            0x4
#define _CLC1GLS3_G4D3N_SIZE                                0x1
#define _CLC1GLS3_G4D3N_LENGTH                              0x1
#define _CLC1GLS3_G4D3N_MASK                                0x10
#define _CLC1GLS3_G4D3T_POSN                                0x5
#define _CLC1GLS3_G4D3T_POSITION                            0x5
#define _CLC1GLS3_G4D3T_SIZE                                0x1
#define _CLC1GLS3_G4D3T_LENGTH                              0x1
#define _CLC1GLS3_G4D3T_MASK                                0x20
#define _CLC1GLS3_G4D4N_POSN                                0x6
#define _CLC1GLS3_G4D4N_POSITION                            0x6
#define _CLC1GLS3_G4D4N_SIZE                                0x1
#define _CLC1GLS3_G4D4N_LENGTH                              0x1
#define _CLC1GLS3_G4D4N_MASK                                0x40
#define _CLC1GLS3_G4D4T_POSN                                0x7
#define _CLC1GLS3_G4D4T_POSITION                            0x7
#define _CLC1GLS3_G4D4T_SIZE                                0x1
#define _CLC1GLS3_G4D4T_LENGTH                              0x1
#define _CLC1GLS3_G4D4T_MASK                                0x80

// Register: CLC2CON
extern volatile unsigned char           CLC2CON             @ 0xF1A;
#ifndef _LIB_BUILD
asm("CLC2CON equ 0F1Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2MODE                :3;
        unsigned LC2INTN                :1;
        unsigned LC2INTP                :1;
        unsigned LC2OUT                 :1;
        unsigned                        :1;
        unsigned LC2EN                  :1;
    };
    struct {
        unsigned LC2MODE0               :1;
        unsigned LC2MODE1               :1;
        unsigned LC2MODE2               :1;
    };
    struct {
        unsigned MODE                   :3;
        unsigned INTN                   :1;
        unsigned INTP                   :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
    };
} CLC2CONbits_t;
extern volatile CLC2CONbits_t CLC2CONbits @ 0xF1A;
// bitfield macros
#define _CLC2CON_LC2MODE_POSN                               0x0
#define _CLC2CON_LC2MODE_POSITION                           0x0
#define _CLC2CON_LC2MODE_SIZE                               0x3
#define _CLC2CON_LC2MODE_LENGTH                             0x3
#define _CLC2CON_LC2MODE_MASK                               0x7
#define _CLC2CON_LC2INTN_POSN                               0x3
#define _CLC2CON_LC2INTN_POSITION                           0x3
#define _CLC2CON_LC2INTN_SIZE                               0x1
#define _CLC2CON_LC2INTN_LENGTH                             0x1
#define _CLC2CON_LC2INTN_MASK                               0x8
#define _CLC2CON_LC2INTP_POSN                               0x4
#define _CLC2CON_LC2INTP_POSITION                           0x4
#define _CLC2CON_LC2INTP_SIZE                               0x1
#define _CLC2CON_LC2INTP_LENGTH                             0x1
#define _CLC2CON_LC2INTP_MASK                               0x10
#define _CLC2CON_LC2OUT_POSN                                0x5
#define _CLC2CON_LC2OUT_POSITION                            0x5
#define _CLC2CON_LC2OUT_SIZE                                0x1
#define _CLC2CON_LC2OUT_LENGTH                              0x1
#define _CLC2CON_LC2OUT_MASK                                0x20
#define _CLC2CON_LC2EN_POSN                                 0x7
#define _CLC2CON_LC2EN_POSITION                             0x7
#define _CLC2CON_LC2EN_SIZE                                 0x1
#define _CLC2CON_LC2EN_LENGTH                               0x1
#define _CLC2CON_LC2EN_MASK                                 0x80
#define _CLC2CON_LC2MODE0_POSN                              0x0
#define _CLC2CON_LC2MODE0_POSITION                          0x0
#define _CLC2CON_LC2MODE0_SIZE                              0x1
#define _CLC2CON_LC2MODE0_LENGTH                            0x1
#define _CLC2CON_LC2MODE0_MASK                              0x1
#define _CLC2CON_LC2MODE1_POSN                              0x1
#define _CLC2CON_LC2MODE1_POSITION                          0x1
#define _CLC2CON_LC2MODE1_SIZE                              0x1
#define _CLC2CON_LC2MODE1_LENGTH                            0x1
#define _CLC2CON_LC2MODE1_MASK                              0x2
#define _CLC2CON_LC2MODE2_POSN                              0x2
#define _CLC2CON_LC2MODE2_POSITION                          0x2
#define _CLC2CON_LC2MODE2_SIZE                              0x1
#define _CLC2CON_LC2MODE2_LENGTH                            0x1
#define _CLC2CON_LC2MODE2_MASK                              0x4
#define _CLC2CON_MODE_POSN                                  0x0
#define _CLC2CON_MODE_POSITION                              0x0
#define _CLC2CON_MODE_SIZE                                  0x3
#define _CLC2CON_MODE_LENGTH                                0x3
#define _CLC2CON_MODE_MASK                                  0x7
#define _CLC2CON_INTN_POSN                                  0x3
#define _CLC2CON_INTN_POSITION                              0x3
#define _CLC2CON_INTN_SIZE                                  0x1
#define _CLC2CON_INTN_LENGTH                                0x1
#define _CLC2CON_INTN_MASK                                  0x8
#define _CLC2CON_INTP_POSN                                  0x4
#define _CLC2CON_INTP_POSITION                              0x4
#define _CLC2CON_INTP_SIZE                                  0x1
#define _CLC2CON_INTP_LENGTH                                0x1
#define _CLC2CON_INTP_MASK                                  0x10
#define _CLC2CON_OUT_POSN                                   0x5
#define _CLC2CON_OUT_POSITION                               0x5
#define _CLC2CON_OUT_SIZE                                   0x1
#define _CLC2CON_OUT_LENGTH                                 0x1
#define _CLC2CON_OUT_MASK                                   0x20
#define _CLC2CON_EN_POSN                                    0x7
#define _CLC2CON_EN_POSITION                                0x7
#define _CLC2CON_EN_SIZE                                    0x1
#define _CLC2CON_EN_LENGTH                                  0x1
#define _CLC2CON_EN_MASK                                    0x80
#define _CLC2CON_MODE0_POSN                                 0x0
#define _CLC2CON_MODE0_POSITION                             0x0
#define _CLC2CON_MODE0_SIZE                                 0x1
#define _CLC2CON_MODE0_LENGTH                               0x1
#define _CLC2CON_MODE0_MASK                                 0x1
#define _CLC2CON_MODE1_POSN                                 0x1
#define _CLC2CON_MODE1_POSITION                             0x1
#define _CLC2CON_MODE1_SIZE                                 0x1
#define _CLC2CON_MODE1_LENGTH                               0x1
#define _CLC2CON_MODE1_MASK                                 0x2
#define _CLC2CON_MODE2_POSN                                 0x2
#define _CLC2CON_MODE2_POSITION                             0x2
#define _CLC2CON_MODE2_SIZE                                 0x1
#define _CLC2CON_MODE2_LENGTH                               0x1
#define _CLC2CON_MODE2_MASK                                 0x4

// Register: CLC2POL
extern volatile unsigned char           CLC2POL             @ 0xF1B;
#ifndef _LIB_BUILD
asm("CLC2POL equ 0F1Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2G1POL               :1;
        unsigned LC2G2POL               :1;
        unsigned LC2G3POL               :1;
        unsigned LC2G4POL               :1;
        unsigned                        :3;
        unsigned LC2POL                 :1;
    };
    struct {
        unsigned G1POL                  :1;
        unsigned G2POL                  :1;
        unsigned G3POL                  :1;
        unsigned G4POL                  :1;
        unsigned                        :3;
        unsigned POL                    :1;
    };
} CLC2POLbits_t;
extern volatile CLC2POLbits_t CLC2POLbits @ 0xF1B;
// bitfield macros
#define _CLC2POL_LC2G1POL_POSN                              0x0
#define _CLC2POL_LC2G1POL_POSITION                          0x0
#define _CLC2POL_LC2G1POL_SIZE                              0x1
#define _CLC2POL_LC2G1POL_LENGTH                            0x1
#define _CLC2POL_LC2G1POL_MASK                              0x1
#define _CLC2POL_LC2G2POL_POSN                              0x1
#define _CLC2POL_LC2G2POL_POSITION                          0x1
#define _CLC2POL_LC2G2POL_SIZE                              0x1
#define _CLC2POL_LC2G2POL_LENGTH                            0x1
#define _CLC2POL_LC2G2POL_MASK                              0x2
#define _CLC2POL_LC2G3POL_POSN                              0x2
#define _CLC2POL_LC2G3POL_POSITION                          0x2
#define _CLC2POL_LC2G3POL_SIZE                              0x1
#define _CLC2POL_LC2G3POL_LENGTH                            0x1
#define _CLC2POL_LC2G3POL_MASK                              0x4
#define _CLC2POL_LC2G4POL_POSN                              0x3
#define _CLC2POL_LC2G4POL_POSITION                          0x3
#define _CLC2POL_LC2G4POL_SIZE                              0x1
#define _CLC2POL_LC2G4POL_LENGTH                            0x1
#define _CLC2POL_LC2G4POL_MASK                              0x8
#define _CLC2POL_LC2POL_POSN                                0x7
#define _CLC2POL_LC2POL_POSITION                            0x7
#define _CLC2POL_LC2POL_SIZE                                0x1
#define _CLC2POL_LC2POL_LENGTH                              0x1
#define _CLC2POL_LC2POL_MASK                                0x80
#define _CLC2POL_G1POL_POSN                                 0x0
#define _CLC2POL_G1POL_POSITION                             0x0
#define _CLC2POL_G1POL_SIZE                                 0x1
#define _CLC2POL_G1POL_LENGTH                               0x1
#define _CLC2POL_G1POL_MASK                                 0x1
#define _CLC2POL_G2POL_POSN                                 0x1
#define _CLC2POL_G2POL_POSITION                             0x1
#define _CLC2POL_G2POL_SIZE                                 0x1
#define _CLC2POL_G2POL_LENGTH                               0x1
#define _CLC2POL_G2POL_MASK                                 0x2
#define _CLC2POL_G3POL_POSN                                 0x2
#define _CLC2POL_G3POL_POSITION                             0x2
#define _CLC2POL_G3POL_SIZE                                 0x1
#define _CLC2POL_G3POL_LENGTH                               0x1
#define _CLC2POL_G3POL_MASK                                 0x4
#define _CLC2POL_G4POL_POSN                                 0x3
#define _CLC2POL_G4POL_POSITION                             0x3
#define _CLC2POL_G4POL_SIZE                                 0x1
#define _CLC2POL_G4POL_LENGTH                               0x1
#define _CLC2POL_G4POL_MASK                                 0x8
#define _CLC2POL_POL_POSN                                   0x7
#define _CLC2POL_POL_POSITION                               0x7
#define _CLC2POL_POL_SIZE                                   0x1
#define _CLC2POL_POL_LENGTH                                 0x1
#define _CLC2POL_POL_MASK                                   0x80

// Register: CLC2SEL0
extern volatile unsigned char           CLC2SEL0            @ 0xF1C;
#ifndef _LIB_BUILD
asm("CLC2SEL0 equ 0F1Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2D1S0                :1;
        unsigned LC2D1S1                :1;
        unsigned LC2D1S2                :1;
        unsigned LC2D1S3                :1;
        unsigned LC2D1S4                :1;
        unsigned LC2D1S5                :1;
    };
    struct {
        unsigned LC2D1S                 :8;
    };
    struct {
        unsigned D1S                    :8;
    };
    struct {
        unsigned D1S0                   :1;
        unsigned D1S1                   :1;
        unsigned D1S2                   :1;
        unsigned D1S3                   :1;
        unsigned D1S4                   :1;
        unsigned D1S5                   :1;
    };
} CLC2SEL0bits_t;
extern volatile CLC2SEL0bits_t CLC2SEL0bits @ 0xF1C;
// bitfield macros
#define _CLC2SEL0_LC2D1S0_POSN                              0x0
#define _CLC2SEL0_LC2D1S0_POSITION                          0x0
#define _CLC2SEL0_LC2D1S0_SIZE                              0x1
#define _CLC2SEL0_LC2D1S0_LENGTH                            0x1
#define _CLC2SEL0_LC2D1S0_MASK                              0x1
#define _CLC2SEL0_LC2D1S1_POSN                              0x1
#define _CLC2SEL0_LC2D1S1_POSITION                          0x1
#define _CLC2SEL0_LC2D1S1_SIZE                              0x1
#define _CLC2SEL0_LC2D1S1_LENGTH                            0x1
#define _CLC2SEL0_LC2D1S1_MASK                              0x2
#define _CLC2SEL0_LC2D1S2_POSN                              0x2
#define _CLC2SEL0_LC2D1S2_POSITION                          0x2
#define _CLC2SEL0_LC2D1S2_SIZE                              0x1
#define _CLC2SEL0_LC2D1S2_LENGTH                            0x1
#define _CLC2SEL0_LC2D1S2_MASK                              0x4
#define _CLC2SEL0_LC2D1S3_POSN                              0x3
#define _CLC2SEL0_LC2D1S3_POSITION                          0x3
#define _CLC2SEL0_LC2D1S3_SIZE                              0x1
#define _CLC2SEL0_LC2D1S3_LENGTH                            0x1
#define _CLC2SEL0_LC2D1S3_MASK                              0x8
#define _CLC2SEL0_LC2D1S4_POSN                              0x4
#define _CLC2SEL0_LC2D1S4_POSITION                          0x4
#define _CLC2SEL0_LC2D1S4_SIZE                              0x1
#define _CLC2SEL0_LC2D1S4_LENGTH                            0x1
#define _CLC2SEL0_LC2D1S4_MASK                              0x10
#define _CLC2SEL0_LC2D1S5_POSN                              0x5
#define _CLC2SEL0_LC2D1S5_POSITION                          0x5
#define _CLC2SEL0_LC2D1S5_SIZE                              0x1
#define _CLC2SEL0_LC2D1S5_LENGTH                            0x1
#define _CLC2SEL0_LC2D1S5_MASK                              0x20
#define _CLC2SEL0_LC2D1S_POSN                               0x0
#define _CLC2SEL0_LC2D1S_POSITION                           0x0
#define _CLC2SEL0_LC2D1S_SIZE                               0x8
#define _CLC2SEL0_LC2D1S_LENGTH                             0x8
#define _CLC2SEL0_LC2D1S_MASK                               0xFF
#define _CLC2SEL0_D1S_POSN                                  0x0
#define _CLC2SEL0_D1S_POSITION                              0x0
#define _CLC2SEL0_D1S_SIZE                                  0x8
#define _CLC2SEL0_D1S_LENGTH                                0x8
#define _CLC2SEL0_D1S_MASK                                  0xFF
#define _CLC2SEL0_D1S0_POSN                                 0x0
#define _CLC2SEL0_D1S0_POSITION                             0x0
#define _CLC2SEL0_D1S0_SIZE                                 0x1
#define _CLC2SEL0_D1S0_LENGTH                               0x1
#define _CLC2SEL0_D1S0_MASK                                 0x1
#define _CLC2SEL0_D1S1_POSN                                 0x1
#define _CLC2SEL0_D1S1_POSITION                             0x1
#define _CLC2SEL0_D1S1_SIZE                                 0x1
#define _CLC2SEL0_D1S1_LENGTH                               0x1
#define _CLC2SEL0_D1S1_MASK                                 0x2
#define _CLC2SEL0_D1S2_POSN                                 0x2
#define _CLC2SEL0_D1S2_POSITION                             0x2
#define _CLC2SEL0_D1S2_SIZE                                 0x1
#define _CLC2SEL0_D1S2_LENGTH                               0x1
#define _CLC2SEL0_D1S2_MASK                                 0x4
#define _CLC2SEL0_D1S3_POSN                                 0x3
#define _CLC2SEL0_D1S3_POSITION                             0x3
#define _CLC2SEL0_D1S3_SIZE                                 0x1
#define _CLC2SEL0_D1S3_LENGTH                               0x1
#define _CLC2SEL0_D1S3_MASK                                 0x8
#define _CLC2SEL0_D1S4_POSN                                 0x4
#define _CLC2SEL0_D1S4_POSITION                             0x4
#define _CLC2SEL0_D1S4_SIZE                                 0x1
#define _CLC2SEL0_D1S4_LENGTH                               0x1
#define _CLC2SEL0_D1S4_MASK                                 0x10
#define _CLC2SEL0_D1S5_POSN                                 0x5
#define _CLC2SEL0_D1S5_POSITION                             0x5
#define _CLC2SEL0_D1S5_SIZE                                 0x1
#define _CLC2SEL0_D1S5_LENGTH                               0x1
#define _CLC2SEL0_D1S5_MASK                                 0x20

// Register: CLC2SEL1
extern volatile unsigned char           CLC2SEL1            @ 0xF1D;
#ifndef _LIB_BUILD
asm("CLC2SEL1 equ 0F1Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2D2S0                :1;
        unsigned LC2D2S1                :1;
        unsigned LC2D2S2                :1;
        unsigned LC2D2S3                :1;
        unsigned LC2D2S4                :1;
        unsigned LC2D2S5                :1;
    };
    struct {
        unsigned LC2D2S                 :8;
    };
    struct {
        unsigned D2S                    :8;
    };
    struct {
        unsigned D2S0                   :1;
        unsigned D2S1                   :1;
        unsigned D2S2                   :1;
        unsigned D2S3                   :1;
        unsigned D2S4                   :1;
        unsigned D2S5                   :1;
    };
} CLC2SEL1bits_t;
extern volatile CLC2SEL1bits_t CLC2SEL1bits @ 0xF1D;
// bitfield macros
#define _CLC2SEL1_LC2D2S0_POSN                              0x0
#define _CLC2SEL1_LC2D2S0_POSITION                          0x0
#define _CLC2SEL1_LC2D2S0_SIZE                              0x1
#define _CLC2SEL1_LC2D2S0_LENGTH                            0x1
#define _CLC2SEL1_LC2D2S0_MASK                              0x1
#define _CLC2SEL1_LC2D2S1_POSN                              0x1
#define _CLC2SEL1_LC2D2S1_POSITION                          0x1
#define _CLC2SEL1_LC2D2S1_SIZE                              0x1
#define _CLC2SEL1_LC2D2S1_LENGTH                            0x1
#define _CLC2SEL1_LC2D2S1_MASK                              0x2
#define _CLC2SEL1_LC2D2S2_POSN                              0x2
#define _CLC2SEL1_LC2D2S2_POSITION                          0x2
#define _CLC2SEL1_LC2D2S2_SIZE                              0x1
#define _CLC2SEL1_LC2D2S2_LENGTH                            0x1
#define _CLC2SEL1_LC2D2S2_MASK                              0x4
#define _CLC2SEL1_LC2D2S3_POSN                              0x3
#define _CLC2SEL1_LC2D2S3_POSITION                          0x3
#define _CLC2SEL1_LC2D2S3_SIZE                              0x1
#define _CLC2SEL1_LC2D2S3_LENGTH                            0x1
#define _CLC2SEL1_LC2D2S3_MASK                              0x8
#define _CLC2SEL1_LC2D2S4_POSN                              0x4
#define _CLC2SEL1_LC2D2S4_POSITION                          0x4
#define _CLC2SEL1_LC2D2S4_SIZE                              0x1
#define _CLC2SEL1_LC2D2S4_LENGTH                            0x1
#define _CLC2SEL1_LC2D2S4_MASK                              0x10
#define _CLC2SEL1_LC2D2S5_POSN                              0x5
#define _CLC2SEL1_LC2D2S5_POSITION                          0x5
#define _CLC2SEL1_LC2D2S5_SIZE                              0x1
#define _CLC2SEL1_LC2D2S5_LENGTH                            0x1
#define _CLC2SEL1_LC2D2S5_MASK                              0x20
#define _CLC2SEL1_LC2D2S_POSN                               0x0
#define _CLC2SEL1_LC2D2S_POSITION                           0x0
#define _CLC2SEL1_LC2D2S_SIZE                               0x8
#define _CLC2SEL1_LC2D2S_LENGTH                             0x8
#define _CLC2SEL1_LC2D2S_MASK                               0xFF
#define _CLC2SEL1_D2S_POSN                                  0x0
#define _CLC2SEL1_D2S_POSITION                              0x0
#define _CLC2SEL1_D2S_SIZE                                  0x8
#define _CLC2SEL1_D2S_LENGTH                                0x8
#define _CLC2SEL1_D2S_MASK                                  0xFF
#define _CLC2SEL1_D2S0_POSN                                 0x0
#define _CLC2SEL1_D2S0_POSITION                             0x0
#define _CLC2SEL1_D2S0_SIZE                                 0x1
#define _CLC2SEL1_D2S0_LENGTH                               0x1
#define _CLC2SEL1_D2S0_MASK                                 0x1
#define _CLC2SEL1_D2S1_POSN                                 0x1
#define _CLC2SEL1_D2S1_POSITION                             0x1
#define _CLC2SEL1_D2S1_SIZE                                 0x1
#define _CLC2SEL1_D2S1_LENGTH                               0x1
#define _CLC2SEL1_D2S1_MASK                                 0x2
#define _CLC2SEL1_D2S2_POSN                                 0x2
#define _CLC2SEL1_D2S2_POSITION                             0x2
#define _CLC2SEL1_D2S2_SIZE                                 0x1
#define _CLC2SEL1_D2S2_LENGTH                               0x1
#define _CLC2SEL1_D2S2_MASK                                 0x4
#define _CLC2SEL1_D2S3_POSN                                 0x3
#define _CLC2SEL1_D2S3_POSITION                             0x3
#define _CLC2SEL1_D2S3_SIZE                                 0x1
#define _CLC2SEL1_D2S3_LENGTH                               0x1
#define _CLC2SEL1_D2S3_MASK                                 0x8
#define _CLC2SEL1_D2S4_POSN                                 0x4
#define _CLC2SEL1_D2S4_POSITION                             0x4
#define _CLC2SEL1_D2S4_SIZE                                 0x1
#define _CLC2SEL1_D2S4_LENGTH                               0x1
#define _CLC2SEL1_D2S4_MASK                                 0x10
#define _CLC2SEL1_D2S5_POSN                                 0x5
#define _CLC2SEL1_D2S5_POSITION                             0x5
#define _CLC2SEL1_D2S5_SIZE                                 0x1
#define _CLC2SEL1_D2S5_LENGTH                               0x1
#define _CLC2SEL1_D2S5_MASK                                 0x20

// Register: CLC2SEL2
extern volatile unsigned char           CLC2SEL2            @ 0xF1E;
#ifndef _LIB_BUILD
asm("CLC2SEL2 equ 0F1Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2D3S0                :1;
        unsigned LC2D3S1                :1;
        unsigned LC2D3S2                :1;
        unsigned LC2D3S3                :1;
        unsigned LC2D3S4                :1;
        unsigned LC2D3S5                :1;
    };
    struct {
        unsigned LC2D3S                 :8;
    };
    struct {
        unsigned D3S                    :8;
    };
    struct {
        unsigned D3S0                   :1;
        unsigned D3S1                   :1;
        unsigned D3S2                   :1;
        unsigned D3S3                   :1;
        unsigned D3S4                   :1;
        unsigned D3S5                   :1;
    };
} CLC2SEL2bits_t;
extern volatile CLC2SEL2bits_t CLC2SEL2bits @ 0xF1E;
// bitfield macros
#define _CLC2SEL2_LC2D3S0_POSN                              0x0
#define _CLC2SEL2_LC2D3S0_POSITION                          0x0
#define _CLC2SEL2_LC2D3S0_SIZE                              0x1
#define _CLC2SEL2_LC2D3S0_LENGTH                            0x1
#define _CLC2SEL2_LC2D3S0_MASK                              0x1
#define _CLC2SEL2_LC2D3S1_POSN                              0x1
#define _CLC2SEL2_LC2D3S1_POSITION                          0x1
#define _CLC2SEL2_LC2D3S1_SIZE                              0x1
#define _CLC2SEL2_LC2D3S1_LENGTH                            0x1
#define _CLC2SEL2_LC2D3S1_MASK                              0x2
#define _CLC2SEL2_LC2D3S2_POSN                              0x2
#define _CLC2SEL2_LC2D3S2_POSITION                          0x2
#define _CLC2SEL2_LC2D3S2_SIZE                              0x1
#define _CLC2SEL2_LC2D3S2_LENGTH                            0x1
#define _CLC2SEL2_LC2D3S2_MASK                              0x4
#define _CLC2SEL2_LC2D3S3_POSN                              0x3
#define _CLC2SEL2_LC2D3S3_POSITION                          0x3
#define _CLC2SEL2_LC2D3S3_SIZE                              0x1
#define _CLC2SEL2_LC2D3S3_LENGTH                            0x1
#define _CLC2SEL2_LC2D3S3_MASK                              0x8
#define _CLC2SEL2_LC2D3S4_POSN                              0x4
#define _CLC2SEL2_LC2D3S4_POSITION                          0x4
#define _CLC2SEL2_LC2D3S4_SIZE                              0x1
#define _CLC2SEL2_LC2D3S4_LENGTH                            0x1
#define _CLC2SEL2_LC2D3S4_MASK                              0x10
#define _CLC2SEL2_LC2D3S5_POSN                              0x5
#define _CLC2SEL2_LC2D3S5_POSITION                          0x5
#define _CLC2SEL2_LC2D3S5_SIZE                              0x1
#define _CLC2SEL2_LC2D3S5_LENGTH                            0x1
#define _CLC2SEL2_LC2D3S5_MASK                              0x20
#define _CLC2SEL2_LC2D3S_POSN                               0x0
#define _CLC2SEL2_LC2D3S_POSITION                           0x0
#define _CLC2SEL2_LC2D3S_SIZE                               0x8
#define _CLC2SEL2_LC2D3S_LENGTH                             0x8
#define _CLC2SEL2_LC2D3S_MASK                               0xFF
#define _CLC2SEL2_D3S_POSN                                  0x0
#define _CLC2SEL2_D3S_POSITION                              0x0
#define _CLC2SEL2_D3S_SIZE                                  0x8
#define _CLC2SEL2_D3S_LENGTH                                0x8
#define _CLC2SEL2_D3S_MASK                                  0xFF
#define _CLC2SEL2_D3S0_POSN                                 0x0
#define _CLC2SEL2_D3S0_POSITION                             0x0
#define _CLC2SEL2_D3S0_SIZE                                 0x1
#define _CLC2SEL2_D3S0_LENGTH                               0x1
#define _CLC2SEL2_D3S0_MASK                                 0x1
#define _CLC2SEL2_D3S1_POSN                                 0x1
#define _CLC2SEL2_D3S1_POSITION                             0x1
#define _CLC2SEL2_D3S1_SIZE                                 0x1
#define _CLC2SEL2_D3S1_LENGTH                               0x1
#define _CLC2SEL2_D3S1_MASK                                 0x2
#define _CLC2SEL2_D3S2_POSN                                 0x2
#define _CLC2SEL2_D3S2_POSITION                             0x2
#define _CLC2SEL2_D3S2_SIZE                                 0x1
#define _CLC2SEL2_D3S2_LENGTH                               0x1
#define _CLC2SEL2_D3S2_MASK                                 0x4
#define _CLC2SEL2_D3S3_POSN                                 0x3
#define _CLC2SEL2_D3S3_POSITION                             0x3
#define _CLC2SEL2_D3S3_SIZE                                 0x1
#define _CLC2SEL2_D3S3_LENGTH                               0x1
#define _CLC2SEL2_D3S3_MASK                                 0x8
#define _CLC2SEL2_D3S4_POSN                                 0x4
#define _CLC2SEL2_D3S4_POSITION                             0x4
#define _CLC2SEL2_D3S4_SIZE                                 0x1
#define _CLC2SEL2_D3S4_LENGTH                               0x1
#define _CLC2SEL2_D3S4_MASK                                 0x10
#define _CLC2SEL2_D3S5_POSN                                 0x5
#define _CLC2SEL2_D3S5_POSITION                             0x5
#define _CLC2SEL2_D3S5_SIZE                                 0x1
#define _CLC2SEL2_D3S5_LENGTH                               0x1
#define _CLC2SEL2_D3S5_MASK                                 0x20

// Register: CLC2SEL3
extern volatile unsigned char           CLC2SEL3            @ 0xF1F;
#ifndef _LIB_BUILD
asm("CLC2SEL3 equ 0F1Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2D4S0                :1;
        unsigned LC2D4S1                :1;
        unsigned LC2D4S2                :1;
        unsigned LC2D4S3                :1;
        unsigned LC2D4S4                :1;
        unsigned LC2D4S5                :1;
    };
    struct {
        unsigned LC2D4S                 :8;
    };
    struct {
        unsigned D4S                    :8;
    };
    struct {
        unsigned D4S0                   :1;
        unsigned D4S1                   :1;
        unsigned D4S2                   :1;
        unsigned D4S3                   :1;
        unsigned D4S4                   :1;
        unsigned D4S5                   :1;
    };
} CLC2SEL3bits_t;
extern volatile CLC2SEL3bits_t CLC2SEL3bits @ 0xF1F;
// bitfield macros
#define _CLC2SEL3_LC2D4S0_POSN                              0x0
#define _CLC2SEL3_LC2D4S0_POSITION                          0x0
#define _CLC2SEL3_LC2D4S0_SIZE                              0x1
#define _CLC2SEL3_LC2D4S0_LENGTH                            0x1
#define _CLC2SEL3_LC2D4S0_MASK                              0x1
#define _CLC2SEL3_LC2D4S1_POSN                              0x1
#define _CLC2SEL3_LC2D4S1_POSITION                          0x1
#define _CLC2SEL3_LC2D4S1_SIZE                              0x1
#define _CLC2SEL3_LC2D4S1_LENGTH                            0x1
#define _CLC2SEL3_LC2D4S1_MASK                              0x2
#define _CLC2SEL3_LC2D4S2_POSN                              0x2
#define _CLC2SEL3_LC2D4S2_POSITION                          0x2
#define _CLC2SEL3_LC2D4S2_SIZE                              0x1
#define _CLC2SEL3_LC2D4S2_LENGTH                            0x1
#define _CLC2SEL3_LC2D4S2_MASK                              0x4
#define _CLC2SEL3_LC2D4S3_POSN                              0x3
#define _CLC2SEL3_LC2D4S3_POSITION                          0x3
#define _CLC2SEL3_LC2D4S3_SIZE                              0x1
#define _CLC2SEL3_LC2D4S3_LENGTH                            0x1
#define _CLC2SEL3_LC2D4S3_MASK                              0x8
#define _CLC2SEL3_LC2D4S4_POSN                              0x4
#define _CLC2SEL3_LC2D4S4_POSITION                          0x4
#define _CLC2SEL3_LC2D4S4_SIZE                              0x1
#define _CLC2SEL3_LC2D4S4_LENGTH                            0x1
#define _CLC2SEL3_LC2D4S4_MASK                              0x10
#define _CLC2SEL3_LC2D4S5_POSN                              0x5
#define _CLC2SEL3_LC2D4S5_POSITION                          0x5
#define _CLC2SEL3_LC2D4S5_SIZE                              0x1
#define _CLC2SEL3_LC2D4S5_LENGTH                            0x1
#define _CLC2SEL3_LC2D4S5_MASK                              0x20
#define _CLC2SEL3_LC2D4S_POSN                               0x0
#define _CLC2SEL3_LC2D4S_POSITION                           0x0
#define _CLC2SEL3_LC2D4S_SIZE                               0x8
#define _CLC2SEL3_LC2D4S_LENGTH                             0x8
#define _CLC2SEL3_LC2D4S_MASK                               0xFF
#define _CLC2SEL3_D4S_POSN                                  0x0
#define _CLC2SEL3_D4S_POSITION                              0x0
#define _CLC2SEL3_D4S_SIZE                                  0x8
#define _CLC2SEL3_D4S_LENGTH                                0x8
#define _CLC2SEL3_D4S_MASK                                  0xFF
#define _CLC2SEL3_D4S0_POSN                                 0x0
#define _CLC2SEL3_D4S0_POSITION                             0x0
#define _CLC2SEL3_D4S0_SIZE                                 0x1
#define _CLC2SEL3_D4S0_LENGTH                               0x1
#define _CLC2SEL3_D4S0_MASK                                 0x1
#define _CLC2SEL3_D4S1_POSN                                 0x1
#define _CLC2SEL3_D4S1_POSITION                             0x1
#define _CLC2SEL3_D4S1_SIZE                                 0x1
#define _CLC2SEL3_D4S1_LENGTH                               0x1
#define _CLC2SEL3_D4S1_MASK                                 0x2
#define _CLC2SEL3_D4S2_POSN                                 0x2
#define _CLC2SEL3_D4S2_POSITION                             0x2
#define _CLC2SEL3_D4S2_SIZE                                 0x1
#define _CLC2SEL3_D4S2_LENGTH                               0x1
#define _CLC2SEL3_D4S2_MASK                                 0x4
#define _CLC2SEL3_D4S3_POSN                                 0x3
#define _CLC2SEL3_D4S3_POSITION                             0x3
#define _CLC2SEL3_D4S3_SIZE                                 0x1
#define _CLC2SEL3_D4S3_LENGTH                               0x1
#define _CLC2SEL3_D4S3_MASK                                 0x8
#define _CLC2SEL3_D4S4_POSN                                 0x4
#define _CLC2SEL3_D4S4_POSITION                             0x4
#define _CLC2SEL3_D4S4_SIZE                                 0x1
#define _CLC2SEL3_D4S4_LENGTH                               0x1
#define _CLC2SEL3_D4S4_MASK                                 0x10
#define _CLC2SEL3_D4S5_POSN                                 0x5
#define _CLC2SEL3_D4S5_POSITION                             0x5
#define _CLC2SEL3_D4S5_SIZE                                 0x1
#define _CLC2SEL3_D4S5_LENGTH                               0x1
#define _CLC2SEL3_D4S5_MASK                                 0x20

// Register: CLC2GLS0
extern volatile unsigned char           CLC2GLS0            @ 0xF20;
#ifndef _LIB_BUILD
asm("CLC2GLS0 equ 0F20h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2G1D1N               :1;
        unsigned LC2G1D1T               :1;
        unsigned LC2G1D2N               :1;
        unsigned LC2G1D2T               :1;
        unsigned LC2G1D3N               :1;
        unsigned LC2G1D3T               :1;
        unsigned LC2G1D4N               :1;
        unsigned LC2G1D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC2GLS0bits_t;
extern volatile CLC2GLS0bits_t CLC2GLS0bits @ 0xF20;
// bitfield macros
#define _CLC2GLS0_LC2G1D1N_POSN                             0x0
#define _CLC2GLS0_LC2G1D1N_POSITION                         0x0
#define _CLC2GLS0_LC2G1D1N_SIZE                             0x1
#define _CLC2GLS0_LC2G1D1N_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D1N_MASK                             0x1
#define _CLC2GLS0_LC2G1D1T_POSN                             0x1
#define _CLC2GLS0_LC2G1D1T_POSITION                         0x1
#define _CLC2GLS0_LC2G1D1T_SIZE                             0x1
#define _CLC2GLS0_LC2G1D1T_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D1T_MASK                             0x2
#define _CLC2GLS0_LC2G1D2N_POSN                             0x2
#define _CLC2GLS0_LC2G1D2N_POSITION                         0x2
#define _CLC2GLS0_LC2G1D2N_SIZE                             0x1
#define _CLC2GLS0_LC2G1D2N_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D2N_MASK                             0x4
#define _CLC2GLS0_LC2G1D2T_POSN                             0x3
#define _CLC2GLS0_LC2G1D2T_POSITION                         0x3
#define _CLC2GLS0_LC2G1D2T_SIZE                             0x1
#define _CLC2GLS0_LC2G1D2T_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D2T_MASK                             0x8
#define _CLC2GLS0_LC2G1D3N_POSN                             0x4
#define _CLC2GLS0_LC2G1D3N_POSITION                         0x4
#define _CLC2GLS0_LC2G1D3N_SIZE                             0x1
#define _CLC2GLS0_LC2G1D3N_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D3N_MASK                             0x10
#define _CLC2GLS0_LC2G1D3T_POSN                             0x5
#define _CLC2GLS0_LC2G1D3T_POSITION                         0x5
#define _CLC2GLS0_LC2G1D3T_SIZE                             0x1
#define _CLC2GLS0_LC2G1D3T_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D3T_MASK                             0x20
#define _CLC2GLS0_LC2G1D4N_POSN                             0x6
#define _CLC2GLS0_LC2G1D4N_POSITION                         0x6
#define _CLC2GLS0_LC2G1D4N_SIZE                             0x1
#define _CLC2GLS0_LC2G1D4N_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D4N_MASK                             0x40
#define _CLC2GLS0_LC2G1D4T_POSN                             0x7
#define _CLC2GLS0_LC2G1D4T_POSITION                         0x7
#define _CLC2GLS0_LC2G1D4T_SIZE                             0x1
#define _CLC2GLS0_LC2G1D4T_LENGTH                           0x1
#define _CLC2GLS0_LC2G1D4T_MASK                             0x80
#define _CLC2GLS0_D1N_POSN                                  0x0
#define _CLC2GLS0_D1N_POSITION                              0x0
#define _CLC2GLS0_D1N_SIZE                                  0x1
#define _CLC2GLS0_D1N_LENGTH                                0x1
#define _CLC2GLS0_D1N_MASK                                  0x1
#define _CLC2GLS0_D1T_POSN                                  0x1
#define _CLC2GLS0_D1T_POSITION                              0x1
#define _CLC2GLS0_D1T_SIZE                                  0x1
#define _CLC2GLS0_D1T_LENGTH                                0x1
#define _CLC2GLS0_D1T_MASK                                  0x2
#define _CLC2GLS0_D2N_POSN                                  0x2
#define _CLC2GLS0_D2N_POSITION                              0x2
#define _CLC2GLS0_D2N_SIZE                                  0x1
#define _CLC2GLS0_D2N_LENGTH                                0x1
#define _CLC2GLS0_D2N_MASK                                  0x4
#define _CLC2GLS0_D2T_POSN                                  0x3
#define _CLC2GLS0_D2T_POSITION                              0x3
#define _CLC2GLS0_D2T_SIZE                                  0x1
#define _CLC2GLS0_D2T_LENGTH                                0x1
#define _CLC2GLS0_D2T_MASK                                  0x8
#define _CLC2GLS0_D3N_POSN                                  0x4
#define _CLC2GLS0_D3N_POSITION                              0x4
#define _CLC2GLS0_D3N_SIZE                                  0x1
#define _CLC2GLS0_D3N_LENGTH                                0x1
#define _CLC2GLS0_D3N_MASK                                  0x10
#define _CLC2GLS0_D3T_POSN                                  0x5
#define _CLC2GLS0_D3T_POSITION                              0x5
#define _CLC2GLS0_D3T_SIZE                                  0x1
#define _CLC2GLS0_D3T_LENGTH                                0x1
#define _CLC2GLS0_D3T_MASK                                  0x20
#define _CLC2GLS0_D4N_POSN                                  0x6
#define _CLC2GLS0_D4N_POSITION                              0x6
#define _CLC2GLS0_D4N_SIZE                                  0x1
#define _CLC2GLS0_D4N_LENGTH                                0x1
#define _CLC2GLS0_D4N_MASK                                  0x40
#define _CLC2GLS0_D4T_POSN                                  0x7
#define _CLC2GLS0_D4T_POSITION                              0x7
#define _CLC2GLS0_D4T_SIZE                                  0x1
#define _CLC2GLS0_D4T_LENGTH                                0x1
#define _CLC2GLS0_D4T_MASK                                  0x80

// Register: CLC2GLS1
extern volatile unsigned char           CLC2GLS1            @ 0xF21;
#ifndef _LIB_BUILD
asm("CLC2GLS1 equ 0F21h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2G2D1N               :1;
        unsigned LC2G2D1T               :1;
        unsigned LC2G2D2N               :1;
        unsigned LC2G2D2T               :1;
        unsigned LC2G2D3N               :1;
        unsigned LC2G2D3T               :1;
        unsigned LC2G2D4N               :1;
        unsigned LC2G2D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC2GLS1bits_t;
extern volatile CLC2GLS1bits_t CLC2GLS1bits @ 0xF21;
// bitfield macros
#define _CLC2GLS1_LC2G2D1N_POSN                             0x0
#define _CLC2GLS1_LC2G2D1N_POSITION                         0x0
#define _CLC2GLS1_LC2G2D1N_SIZE                             0x1
#define _CLC2GLS1_LC2G2D1N_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D1N_MASK                             0x1
#define _CLC2GLS1_LC2G2D1T_POSN                             0x1
#define _CLC2GLS1_LC2G2D1T_POSITION                         0x1
#define _CLC2GLS1_LC2G2D1T_SIZE                             0x1
#define _CLC2GLS1_LC2G2D1T_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D1T_MASK                             0x2
#define _CLC2GLS1_LC2G2D2N_POSN                             0x2
#define _CLC2GLS1_LC2G2D2N_POSITION                         0x2
#define _CLC2GLS1_LC2G2D2N_SIZE                             0x1
#define _CLC2GLS1_LC2G2D2N_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D2N_MASK                             0x4
#define _CLC2GLS1_LC2G2D2T_POSN                             0x3
#define _CLC2GLS1_LC2G2D2T_POSITION                         0x3
#define _CLC2GLS1_LC2G2D2T_SIZE                             0x1
#define _CLC2GLS1_LC2G2D2T_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D2T_MASK                             0x8
#define _CLC2GLS1_LC2G2D3N_POSN                             0x4
#define _CLC2GLS1_LC2G2D3N_POSITION                         0x4
#define _CLC2GLS1_LC2G2D3N_SIZE                             0x1
#define _CLC2GLS1_LC2G2D3N_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D3N_MASK                             0x10
#define _CLC2GLS1_LC2G2D3T_POSN                             0x5
#define _CLC2GLS1_LC2G2D3T_POSITION                         0x5
#define _CLC2GLS1_LC2G2D3T_SIZE                             0x1
#define _CLC2GLS1_LC2G2D3T_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D3T_MASK                             0x20
#define _CLC2GLS1_LC2G2D4N_POSN                             0x6
#define _CLC2GLS1_LC2G2D4N_POSITION                         0x6
#define _CLC2GLS1_LC2G2D4N_SIZE                             0x1
#define _CLC2GLS1_LC2G2D4N_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D4N_MASK                             0x40
#define _CLC2GLS1_LC2G2D4T_POSN                             0x7
#define _CLC2GLS1_LC2G2D4T_POSITION                         0x7
#define _CLC2GLS1_LC2G2D4T_SIZE                             0x1
#define _CLC2GLS1_LC2G2D4T_LENGTH                           0x1
#define _CLC2GLS1_LC2G2D4T_MASK                             0x80
#define _CLC2GLS1_D1N_POSN                                  0x0
#define _CLC2GLS1_D1N_POSITION                              0x0
#define _CLC2GLS1_D1N_SIZE                                  0x1
#define _CLC2GLS1_D1N_LENGTH                                0x1
#define _CLC2GLS1_D1N_MASK                                  0x1
#define _CLC2GLS1_D1T_POSN                                  0x1
#define _CLC2GLS1_D1T_POSITION                              0x1
#define _CLC2GLS1_D1T_SIZE                                  0x1
#define _CLC2GLS1_D1T_LENGTH                                0x1
#define _CLC2GLS1_D1T_MASK                                  0x2
#define _CLC2GLS1_D2N_POSN                                  0x2
#define _CLC2GLS1_D2N_POSITION                              0x2
#define _CLC2GLS1_D2N_SIZE                                  0x1
#define _CLC2GLS1_D2N_LENGTH                                0x1
#define _CLC2GLS1_D2N_MASK                                  0x4
#define _CLC2GLS1_D2T_POSN                                  0x3
#define _CLC2GLS1_D2T_POSITION                              0x3
#define _CLC2GLS1_D2T_SIZE                                  0x1
#define _CLC2GLS1_D2T_LENGTH                                0x1
#define _CLC2GLS1_D2T_MASK                                  0x8
#define _CLC2GLS1_D3N_POSN                                  0x4
#define _CLC2GLS1_D3N_POSITION                              0x4
#define _CLC2GLS1_D3N_SIZE                                  0x1
#define _CLC2GLS1_D3N_LENGTH                                0x1
#define _CLC2GLS1_D3N_MASK                                  0x10
#define _CLC2GLS1_D3T_POSN                                  0x5
#define _CLC2GLS1_D3T_POSITION                              0x5
#define _CLC2GLS1_D3T_SIZE                                  0x1
#define _CLC2GLS1_D3T_LENGTH                                0x1
#define _CLC2GLS1_D3T_MASK                                  0x20
#define _CLC2GLS1_D4N_POSN                                  0x6
#define _CLC2GLS1_D4N_POSITION                              0x6
#define _CLC2GLS1_D4N_SIZE                                  0x1
#define _CLC2GLS1_D4N_LENGTH                                0x1
#define _CLC2GLS1_D4N_MASK                                  0x40
#define _CLC2GLS1_D4T_POSN                                  0x7
#define _CLC2GLS1_D4T_POSITION                              0x7
#define _CLC2GLS1_D4T_SIZE                                  0x1
#define _CLC2GLS1_D4T_LENGTH                                0x1
#define _CLC2GLS1_D4T_MASK                                  0x80

// Register: CLC2GLS2
extern volatile unsigned char           CLC2GLS2            @ 0xF22;
#ifndef _LIB_BUILD
asm("CLC2GLS2 equ 0F22h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2G3D1N               :1;
        unsigned LC2G3D1T               :1;
        unsigned LC2G3D2N               :1;
        unsigned LC2G3D2T               :1;
        unsigned LC2G3D3N               :1;
        unsigned LC2G3D3T               :1;
        unsigned LC2G3D4N               :1;
        unsigned LC2G3D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC2GLS2bits_t;
extern volatile CLC2GLS2bits_t CLC2GLS2bits @ 0xF22;
// bitfield macros
#define _CLC2GLS2_LC2G3D1N_POSN                             0x0
#define _CLC2GLS2_LC2G3D1N_POSITION                         0x0
#define _CLC2GLS2_LC2G3D1N_SIZE                             0x1
#define _CLC2GLS2_LC2G3D1N_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D1N_MASK                             0x1
#define _CLC2GLS2_LC2G3D1T_POSN                             0x1
#define _CLC2GLS2_LC2G3D1T_POSITION                         0x1
#define _CLC2GLS2_LC2G3D1T_SIZE                             0x1
#define _CLC2GLS2_LC2G3D1T_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D1T_MASK                             0x2
#define _CLC2GLS2_LC2G3D2N_POSN                             0x2
#define _CLC2GLS2_LC2G3D2N_POSITION                         0x2
#define _CLC2GLS2_LC2G3D2N_SIZE                             0x1
#define _CLC2GLS2_LC2G3D2N_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D2N_MASK                             0x4
#define _CLC2GLS2_LC2G3D2T_POSN                             0x3
#define _CLC2GLS2_LC2G3D2T_POSITION                         0x3
#define _CLC2GLS2_LC2G3D2T_SIZE                             0x1
#define _CLC2GLS2_LC2G3D2T_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D2T_MASK                             0x8
#define _CLC2GLS2_LC2G3D3N_POSN                             0x4
#define _CLC2GLS2_LC2G3D3N_POSITION                         0x4
#define _CLC2GLS2_LC2G3D3N_SIZE                             0x1
#define _CLC2GLS2_LC2G3D3N_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D3N_MASK                             0x10
#define _CLC2GLS2_LC2G3D3T_POSN                             0x5
#define _CLC2GLS2_LC2G3D3T_POSITION                         0x5
#define _CLC2GLS2_LC2G3D3T_SIZE                             0x1
#define _CLC2GLS2_LC2G3D3T_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D3T_MASK                             0x20
#define _CLC2GLS2_LC2G3D4N_POSN                             0x6
#define _CLC2GLS2_LC2G3D4N_POSITION                         0x6
#define _CLC2GLS2_LC2G3D4N_SIZE                             0x1
#define _CLC2GLS2_LC2G3D4N_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D4N_MASK                             0x40
#define _CLC2GLS2_LC2G3D4T_POSN                             0x7
#define _CLC2GLS2_LC2G3D4T_POSITION                         0x7
#define _CLC2GLS2_LC2G3D4T_SIZE                             0x1
#define _CLC2GLS2_LC2G3D4T_LENGTH                           0x1
#define _CLC2GLS2_LC2G3D4T_MASK                             0x80
#define _CLC2GLS2_D1N_POSN                                  0x0
#define _CLC2GLS2_D1N_POSITION                              0x0
#define _CLC2GLS2_D1N_SIZE                                  0x1
#define _CLC2GLS2_D1N_LENGTH                                0x1
#define _CLC2GLS2_D1N_MASK                                  0x1
#define _CLC2GLS2_D1T_POSN                                  0x1
#define _CLC2GLS2_D1T_POSITION                              0x1
#define _CLC2GLS2_D1T_SIZE                                  0x1
#define _CLC2GLS2_D1T_LENGTH                                0x1
#define _CLC2GLS2_D1T_MASK                                  0x2
#define _CLC2GLS2_D2N_POSN                                  0x2
#define _CLC2GLS2_D2N_POSITION                              0x2
#define _CLC2GLS2_D2N_SIZE                                  0x1
#define _CLC2GLS2_D2N_LENGTH                                0x1
#define _CLC2GLS2_D2N_MASK                                  0x4
#define _CLC2GLS2_D2T_POSN                                  0x3
#define _CLC2GLS2_D2T_POSITION                              0x3
#define _CLC2GLS2_D2T_SIZE                                  0x1
#define _CLC2GLS2_D2T_LENGTH                                0x1
#define _CLC2GLS2_D2T_MASK                                  0x8
#define _CLC2GLS2_D3N_POSN                                  0x4
#define _CLC2GLS2_D3N_POSITION                              0x4
#define _CLC2GLS2_D3N_SIZE                                  0x1
#define _CLC2GLS2_D3N_LENGTH                                0x1
#define _CLC2GLS2_D3N_MASK                                  0x10
#define _CLC2GLS2_D3T_POSN                                  0x5
#define _CLC2GLS2_D3T_POSITION                              0x5
#define _CLC2GLS2_D3T_SIZE                                  0x1
#define _CLC2GLS2_D3T_LENGTH                                0x1
#define _CLC2GLS2_D3T_MASK                                  0x20
#define _CLC2GLS2_D4N_POSN                                  0x6
#define _CLC2GLS2_D4N_POSITION                              0x6
#define _CLC2GLS2_D4N_SIZE                                  0x1
#define _CLC2GLS2_D4N_LENGTH                                0x1
#define _CLC2GLS2_D4N_MASK                                  0x40
#define _CLC2GLS2_D4T_POSN                                  0x7
#define _CLC2GLS2_D4T_POSITION                              0x7
#define _CLC2GLS2_D4T_SIZE                                  0x1
#define _CLC2GLS2_D4T_LENGTH                                0x1
#define _CLC2GLS2_D4T_MASK                                  0x80

// Register: CLC2GLS3
extern volatile unsigned char           CLC2GLS3            @ 0xF23;
#ifndef _LIB_BUILD
asm("CLC2GLS3 equ 0F23h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC2G4D1N               :1;
        unsigned LC2G4D1T               :1;
        unsigned LC2G4D2N               :1;
        unsigned LC2G4D2T               :1;
        unsigned LC2G4D3N               :1;
        unsigned LC2G4D3T               :1;
        unsigned LC2G4D4N               :1;
        unsigned LC2G4D4T               :1;
    };
    struct {
        unsigned G4D1N                  :1;
        unsigned G4D1T                  :1;
        unsigned G4D2N                  :1;
        unsigned G4D2T                  :1;
        unsigned G4D3N                  :1;
        unsigned G4D3T                  :1;
        unsigned G4D4N                  :1;
        unsigned G4D4T                  :1;
    };
} CLC2GLS3bits_t;
extern volatile CLC2GLS3bits_t CLC2GLS3bits @ 0xF23;
// bitfield macros
#define _CLC2GLS3_LC2G4D1N_POSN                             0x0
#define _CLC2GLS3_LC2G4D1N_POSITION                         0x0
#define _CLC2GLS3_LC2G4D1N_SIZE                             0x1
#define _CLC2GLS3_LC2G4D1N_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D1N_MASK                             0x1
#define _CLC2GLS3_LC2G4D1T_POSN                             0x1
#define _CLC2GLS3_LC2G4D1T_POSITION                         0x1
#define _CLC2GLS3_LC2G4D1T_SIZE                             0x1
#define _CLC2GLS3_LC2G4D1T_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D1T_MASK                             0x2
#define _CLC2GLS3_LC2G4D2N_POSN                             0x2
#define _CLC2GLS3_LC2G4D2N_POSITION                         0x2
#define _CLC2GLS3_LC2G4D2N_SIZE                             0x1
#define _CLC2GLS3_LC2G4D2N_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D2N_MASK                             0x4
#define _CLC2GLS3_LC2G4D2T_POSN                             0x3
#define _CLC2GLS3_LC2G4D2T_POSITION                         0x3
#define _CLC2GLS3_LC2G4D2T_SIZE                             0x1
#define _CLC2GLS3_LC2G4D2T_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D2T_MASK                             0x8
#define _CLC2GLS3_LC2G4D3N_POSN                             0x4
#define _CLC2GLS3_LC2G4D3N_POSITION                         0x4
#define _CLC2GLS3_LC2G4D3N_SIZE                             0x1
#define _CLC2GLS3_LC2G4D3N_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D3N_MASK                             0x10
#define _CLC2GLS3_LC2G4D3T_POSN                             0x5
#define _CLC2GLS3_LC2G4D3T_POSITION                         0x5
#define _CLC2GLS3_LC2G4D3T_SIZE                             0x1
#define _CLC2GLS3_LC2G4D3T_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D3T_MASK                             0x20
#define _CLC2GLS3_LC2G4D4N_POSN                             0x6
#define _CLC2GLS3_LC2G4D4N_POSITION                         0x6
#define _CLC2GLS3_LC2G4D4N_SIZE                             0x1
#define _CLC2GLS3_LC2G4D4N_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D4N_MASK                             0x40
#define _CLC2GLS3_LC2G4D4T_POSN                             0x7
#define _CLC2GLS3_LC2G4D4T_POSITION                         0x7
#define _CLC2GLS3_LC2G4D4T_SIZE                             0x1
#define _CLC2GLS3_LC2G4D4T_LENGTH                           0x1
#define _CLC2GLS3_LC2G4D4T_MASK                             0x80
#define _CLC2GLS3_G4D1N_POSN                                0x0
#define _CLC2GLS3_G4D1N_POSITION                            0x0
#define _CLC2GLS3_G4D1N_SIZE                                0x1
#define _CLC2GLS3_G4D1N_LENGTH                              0x1
#define _CLC2GLS3_G4D1N_MASK                                0x1
#define _CLC2GLS3_G4D1T_POSN                                0x1
#define _CLC2GLS3_G4D1T_POSITION                            0x1
#define _CLC2GLS3_G4D1T_SIZE                                0x1
#define _CLC2GLS3_G4D1T_LENGTH                              0x1
#define _CLC2GLS3_G4D1T_MASK                                0x2
#define _CLC2GLS3_G4D2N_POSN                                0x2
#define _CLC2GLS3_G4D2N_POSITION                            0x2
#define _CLC2GLS3_G4D2N_SIZE                                0x1
#define _CLC2GLS3_G4D2N_LENGTH                              0x1
#define _CLC2GLS3_G4D2N_MASK                                0x4
#define _CLC2GLS3_G4D2T_POSN                                0x3
#define _CLC2GLS3_G4D2T_POSITION                            0x3
#define _CLC2GLS3_G4D2T_SIZE                                0x1
#define _CLC2GLS3_G4D2T_LENGTH                              0x1
#define _CLC2GLS3_G4D2T_MASK                                0x8
#define _CLC2GLS3_G4D3N_POSN                                0x4
#define _CLC2GLS3_G4D3N_POSITION                            0x4
#define _CLC2GLS3_G4D3N_SIZE                                0x1
#define _CLC2GLS3_G4D3N_LENGTH                              0x1
#define _CLC2GLS3_G4D3N_MASK                                0x10
#define _CLC2GLS3_G4D3T_POSN                                0x5
#define _CLC2GLS3_G4D3T_POSITION                            0x5
#define _CLC2GLS3_G4D3T_SIZE                                0x1
#define _CLC2GLS3_G4D3T_LENGTH                              0x1
#define _CLC2GLS3_G4D3T_MASK                                0x20
#define _CLC2GLS3_G4D4N_POSN                                0x6
#define _CLC2GLS3_G4D4N_POSITION                            0x6
#define _CLC2GLS3_G4D4N_SIZE                                0x1
#define _CLC2GLS3_G4D4N_LENGTH                              0x1
#define _CLC2GLS3_G4D4N_MASK                                0x40
#define _CLC2GLS3_G4D4T_POSN                                0x7
#define _CLC2GLS3_G4D4T_POSITION                            0x7
#define _CLC2GLS3_G4D4T_SIZE                                0x1
#define _CLC2GLS3_G4D4T_LENGTH                              0x1
#define _CLC2GLS3_G4D4T_MASK                                0x80

// Register: CLC3CON
extern volatile unsigned char           CLC3CON             @ 0xF24;
#ifndef _LIB_BUILD
asm("CLC3CON equ 0F24h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3MODE                :3;
        unsigned LC3INTN                :1;
        unsigned LC3INTP                :1;
        unsigned LC3OUT                 :1;
        unsigned                        :1;
        unsigned LC3EN                  :1;
    };
    struct {
        unsigned LC3MODE0               :1;
        unsigned LC3MODE1               :1;
        unsigned LC3MODE2               :1;
    };
    struct {
        unsigned MODE                   :3;
        unsigned INTN                   :1;
        unsigned INTP                   :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
    };
} CLC3CONbits_t;
extern volatile CLC3CONbits_t CLC3CONbits @ 0xF24;
// bitfield macros
#define _CLC3CON_LC3MODE_POSN                               0x0
#define _CLC3CON_LC3MODE_POSITION                           0x0
#define _CLC3CON_LC3MODE_SIZE                               0x3
#define _CLC3CON_LC3MODE_LENGTH                             0x3
#define _CLC3CON_LC3MODE_MASK                               0x7
#define _CLC3CON_LC3INTN_POSN                               0x3
#define _CLC3CON_LC3INTN_POSITION                           0x3
#define _CLC3CON_LC3INTN_SIZE                               0x1
#define _CLC3CON_LC3INTN_LENGTH                             0x1
#define _CLC3CON_LC3INTN_MASK                               0x8
#define _CLC3CON_LC3INTP_POSN                               0x4
#define _CLC3CON_LC3INTP_POSITION                           0x4
#define _CLC3CON_LC3INTP_SIZE                               0x1
#define _CLC3CON_LC3INTP_LENGTH                             0x1
#define _CLC3CON_LC3INTP_MASK                               0x10
#define _CLC3CON_LC3OUT_POSN                                0x5
#define _CLC3CON_LC3OUT_POSITION                            0x5
#define _CLC3CON_LC3OUT_SIZE                                0x1
#define _CLC3CON_LC3OUT_LENGTH                              0x1
#define _CLC3CON_LC3OUT_MASK                                0x20
#define _CLC3CON_LC3EN_POSN                                 0x7
#define _CLC3CON_LC3EN_POSITION                             0x7
#define _CLC3CON_LC3EN_SIZE                                 0x1
#define _CLC3CON_LC3EN_LENGTH                               0x1
#define _CLC3CON_LC3EN_MASK                                 0x80
#define _CLC3CON_LC3MODE0_POSN                              0x0
#define _CLC3CON_LC3MODE0_POSITION                          0x0
#define _CLC3CON_LC3MODE0_SIZE                              0x1
#define _CLC3CON_LC3MODE0_LENGTH                            0x1
#define _CLC3CON_LC3MODE0_MASK                              0x1
#define _CLC3CON_LC3MODE1_POSN                              0x1
#define _CLC3CON_LC3MODE1_POSITION                          0x1
#define _CLC3CON_LC3MODE1_SIZE                              0x1
#define _CLC3CON_LC3MODE1_LENGTH                            0x1
#define _CLC3CON_LC3MODE1_MASK                              0x2
#define _CLC3CON_LC3MODE2_POSN                              0x2
#define _CLC3CON_LC3MODE2_POSITION                          0x2
#define _CLC3CON_LC3MODE2_SIZE                              0x1
#define _CLC3CON_LC3MODE2_LENGTH                            0x1
#define _CLC3CON_LC3MODE2_MASK                              0x4
#define _CLC3CON_MODE_POSN                                  0x0
#define _CLC3CON_MODE_POSITION                              0x0
#define _CLC3CON_MODE_SIZE                                  0x3
#define _CLC3CON_MODE_LENGTH                                0x3
#define _CLC3CON_MODE_MASK                                  0x7
#define _CLC3CON_INTN_POSN                                  0x3
#define _CLC3CON_INTN_POSITION                              0x3
#define _CLC3CON_INTN_SIZE                                  0x1
#define _CLC3CON_INTN_LENGTH                                0x1
#define _CLC3CON_INTN_MASK                                  0x8
#define _CLC3CON_INTP_POSN                                  0x4
#define _CLC3CON_INTP_POSITION                              0x4
#define _CLC3CON_INTP_SIZE                                  0x1
#define _CLC3CON_INTP_LENGTH                                0x1
#define _CLC3CON_INTP_MASK                                  0x10
#define _CLC3CON_OUT_POSN                                   0x5
#define _CLC3CON_OUT_POSITION                               0x5
#define _CLC3CON_OUT_SIZE                                   0x1
#define _CLC3CON_OUT_LENGTH                                 0x1
#define _CLC3CON_OUT_MASK                                   0x20
#define _CLC3CON_EN_POSN                                    0x7
#define _CLC3CON_EN_POSITION                                0x7
#define _CLC3CON_EN_SIZE                                    0x1
#define _CLC3CON_EN_LENGTH                                  0x1
#define _CLC3CON_EN_MASK                                    0x80
#define _CLC3CON_MODE0_POSN                                 0x0
#define _CLC3CON_MODE0_POSITION                             0x0
#define _CLC3CON_MODE0_SIZE                                 0x1
#define _CLC3CON_MODE0_LENGTH                               0x1
#define _CLC3CON_MODE0_MASK                                 0x1
#define _CLC3CON_MODE1_POSN                                 0x1
#define _CLC3CON_MODE1_POSITION                             0x1
#define _CLC3CON_MODE1_SIZE                                 0x1
#define _CLC3CON_MODE1_LENGTH                               0x1
#define _CLC3CON_MODE1_MASK                                 0x2
#define _CLC3CON_MODE2_POSN                                 0x2
#define _CLC3CON_MODE2_POSITION                             0x2
#define _CLC3CON_MODE2_SIZE                                 0x1
#define _CLC3CON_MODE2_LENGTH                               0x1
#define _CLC3CON_MODE2_MASK                                 0x4

// Register: CLC3POL
extern volatile unsigned char           CLC3POL             @ 0xF25;
#ifndef _LIB_BUILD
asm("CLC3POL equ 0F25h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3G1POL               :1;
        unsigned LC3G2POL               :1;
        unsigned LC3G3POL               :1;
        unsigned LC3G4POL               :1;
        unsigned                        :3;
        unsigned LC3POL                 :1;
    };
    struct {
        unsigned G1POL                  :1;
        unsigned G2POL                  :1;
        unsigned G3POL                  :1;
        unsigned G4POL                  :1;
        unsigned                        :3;
        unsigned POL                    :1;
    };
} CLC3POLbits_t;
extern volatile CLC3POLbits_t CLC3POLbits @ 0xF25;
// bitfield macros
#define _CLC3POL_LC3G1POL_POSN                              0x0
#define _CLC3POL_LC3G1POL_POSITION                          0x0
#define _CLC3POL_LC3G1POL_SIZE                              0x1
#define _CLC3POL_LC3G1POL_LENGTH                            0x1
#define _CLC3POL_LC3G1POL_MASK                              0x1
#define _CLC3POL_LC3G2POL_POSN                              0x1
#define _CLC3POL_LC3G2POL_POSITION                          0x1
#define _CLC3POL_LC3G2POL_SIZE                              0x1
#define _CLC3POL_LC3G2POL_LENGTH                            0x1
#define _CLC3POL_LC3G2POL_MASK                              0x2
#define _CLC3POL_LC3G3POL_POSN                              0x2
#define _CLC3POL_LC3G3POL_POSITION                          0x2
#define _CLC3POL_LC3G3POL_SIZE                              0x1
#define _CLC3POL_LC3G3POL_LENGTH                            0x1
#define _CLC3POL_LC3G3POL_MASK                              0x4
#define _CLC3POL_LC3G4POL_POSN                              0x3
#define _CLC3POL_LC3G4POL_POSITION                          0x3
#define _CLC3POL_LC3G4POL_SIZE                              0x1
#define _CLC3POL_LC3G4POL_LENGTH                            0x1
#define _CLC3POL_LC3G4POL_MASK                              0x8
#define _CLC3POL_LC3POL_POSN                                0x7
#define _CLC3POL_LC3POL_POSITION                            0x7
#define _CLC3POL_LC3POL_SIZE                                0x1
#define _CLC3POL_LC3POL_LENGTH                              0x1
#define _CLC3POL_LC3POL_MASK                                0x80
#define _CLC3POL_G1POL_POSN                                 0x0
#define _CLC3POL_G1POL_POSITION                             0x0
#define _CLC3POL_G1POL_SIZE                                 0x1
#define _CLC3POL_G1POL_LENGTH                               0x1
#define _CLC3POL_G1POL_MASK                                 0x1
#define _CLC3POL_G2POL_POSN                                 0x1
#define _CLC3POL_G2POL_POSITION                             0x1
#define _CLC3POL_G2POL_SIZE                                 0x1
#define _CLC3POL_G2POL_LENGTH                               0x1
#define _CLC3POL_G2POL_MASK                                 0x2
#define _CLC3POL_G3POL_POSN                                 0x2
#define _CLC3POL_G3POL_POSITION                             0x2
#define _CLC3POL_G3POL_SIZE                                 0x1
#define _CLC3POL_G3POL_LENGTH                               0x1
#define _CLC3POL_G3POL_MASK                                 0x4
#define _CLC3POL_G4POL_POSN                                 0x3
#define _CLC3POL_G4POL_POSITION                             0x3
#define _CLC3POL_G4POL_SIZE                                 0x1
#define _CLC3POL_G4POL_LENGTH                               0x1
#define _CLC3POL_G4POL_MASK                                 0x8
#define _CLC3POL_POL_POSN                                   0x7
#define _CLC3POL_POL_POSITION                               0x7
#define _CLC3POL_POL_SIZE                                   0x1
#define _CLC3POL_POL_LENGTH                                 0x1
#define _CLC3POL_POL_MASK                                   0x80

// Register: CLC3SEL0
extern volatile unsigned char           CLC3SEL0            @ 0xF26;
#ifndef _LIB_BUILD
asm("CLC3SEL0 equ 0F26h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3D1S0                :1;
        unsigned LC3D1S1                :1;
        unsigned LC3D1S2                :1;
        unsigned LC3D1S3                :1;
        unsigned LC3D1S4                :1;
        unsigned LC3D1S5                :1;
    };
    struct {
        unsigned LC3D1S                 :8;
    };
    struct {
        unsigned D1S                    :8;
    };
    struct {
        unsigned D1S0                   :1;
        unsigned D1S1                   :1;
        unsigned D1S2                   :1;
        unsigned D1S3                   :1;
        unsigned D1S4                   :1;
        unsigned D1S5                   :1;
    };
} CLC3SEL0bits_t;
extern volatile CLC3SEL0bits_t CLC3SEL0bits @ 0xF26;
// bitfield macros
#define _CLC3SEL0_LC3D1S0_POSN                              0x0
#define _CLC3SEL0_LC3D1S0_POSITION                          0x0
#define _CLC3SEL0_LC3D1S0_SIZE                              0x1
#define _CLC3SEL0_LC3D1S0_LENGTH                            0x1
#define _CLC3SEL0_LC3D1S0_MASK                              0x1
#define _CLC3SEL0_LC3D1S1_POSN                              0x1
#define _CLC3SEL0_LC3D1S1_POSITION                          0x1
#define _CLC3SEL0_LC3D1S1_SIZE                              0x1
#define _CLC3SEL0_LC3D1S1_LENGTH                            0x1
#define _CLC3SEL0_LC3D1S1_MASK                              0x2
#define _CLC3SEL0_LC3D1S2_POSN                              0x2
#define _CLC3SEL0_LC3D1S2_POSITION                          0x2
#define _CLC3SEL0_LC3D1S2_SIZE                              0x1
#define _CLC3SEL0_LC3D1S2_LENGTH                            0x1
#define _CLC3SEL0_LC3D1S2_MASK                              0x4
#define _CLC3SEL0_LC3D1S3_POSN                              0x3
#define _CLC3SEL0_LC3D1S3_POSITION                          0x3
#define _CLC3SEL0_LC3D1S3_SIZE                              0x1
#define _CLC3SEL0_LC3D1S3_LENGTH                            0x1
#define _CLC3SEL0_LC3D1S3_MASK                              0x8
#define _CLC3SEL0_LC3D1S4_POSN                              0x4
#define _CLC3SEL0_LC3D1S4_POSITION                          0x4
#define _CLC3SEL0_LC3D1S4_SIZE                              0x1
#define _CLC3SEL0_LC3D1S4_LENGTH                            0x1
#define _CLC3SEL0_LC3D1S4_MASK                              0x10
#define _CLC3SEL0_LC3D1S5_POSN                              0x5
#define _CLC3SEL0_LC3D1S5_POSITION                          0x5
#define _CLC3SEL0_LC3D1S5_SIZE                              0x1
#define _CLC3SEL0_LC3D1S5_LENGTH                            0x1
#define _CLC3SEL0_LC3D1S5_MASK                              0x20
#define _CLC3SEL0_LC3D1S_POSN                               0x0
#define _CLC3SEL0_LC3D1S_POSITION                           0x0
#define _CLC3SEL0_LC3D1S_SIZE                               0x8
#define _CLC3SEL0_LC3D1S_LENGTH                             0x8
#define _CLC3SEL0_LC3D1S_MASK                               0xFF
#define _CLC3SEL0_D1S_POSN                                  0x0
#define _CLC3SEL0_D1S_POSITION                              0x0
#define _CLC3SEL0_D1S_SIZE                                  0x8
#define _CLC3SEL0_D1S_LENGTH                                0x8
#define _CLC3SEL0_D1S_MASK                                  0xFF
#define _CLC3SEL0_D1S0_POSN                                 0x0
#define _CLC3SEL0_D1S0_POSITION                             0x0
#define _CLC3SEL0_D1S0_SIZE                                 0x1
#define _CLC3SEL0_D1S0_LENGTH                               0x1
#define _CLC3SEL0_D1S0_MASK                                 0x1
#define _CLC3SEL0_D1S1_POSN                                 0x1
#define _CLC3SEL0_D1S1_POSITION                             0x1
#define _CLC3SEL0_D1S1_SIZE                                 0x1
#define _CLC3SEL0_D1S1_LENGTH                               0x1
#define _CLC3SEL0_D1S1_MASK                                 0x2
#define _CLC3SEL0_D1S2_POSN                                 0x2
#define _CLC3SEL0_D1S2_POSITION                             0x2
#define _CLC3SEL0_D1S2_SIZE                                 0x1
#define _CLC3SEL0_D1S2_LENGTH                               0x1
#define _CLC3SEL0_D1S2_MASK                                 0x4
#define _CLC3SEL0_D1S3_POSN                                 0x3
#define _CLC3SEL0_D1S3_POSITION                             0x3
#define _CLC3SEL0_D1S3_SIZE                                 0x1
#define _CLC3SEL0_D1S3_LENGTH                               0x1
#define _CLC3SEL0_D1S3_MASK                                 0x8
#define _CLC3SEL0_D1S4_POSN                                 0x4
#define _CLC3SEL0_D1S4_POSITION                             0x4
#define _CLC3SEL0_D1S4_SIZE                                 0x1
#define _CLC3SEL0_D1S4_LENGTH                               0x1
#define _CLC3SEL0_D1S4_MASK                                 0x10
#define _CLC3SEL0_D1S5_POSN                                 0x5
#define _CLC3SEL0_D1S5_POSITION                             0x5
#define _CLC3SEL0_D1S5_SIZE                                 0x1
#define _CLC3SEL0_D1S5_LENGTH                               0x1
#define _CLC3SEL0_D1S5_MASK                                 0x20

// Register: CLC3SEL1
extern volatile unsigned char           CLC3SEL1            @ 0xF27;
#ifndef _LIB_BUILD
asm("CLC3SEL1 equ 0F27h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3D2S0                :1;
        unsigned LC3D2S1                :1;
        unsigned LC3D2S2                :1;
        unsigned LC3D2S3                :1;
        unsigned LC3D2S4                :1;
        unsigned LC3D2S5                :1;
    };
    struct {
        unsigned LC3D2S                 :8;
    };
    struct {
        unsigned D2S                    :8;
    };
    struct {
        unsigned D2S0                   :1;
        unsigned D2S1                   :1;
        unsigned D2S2                   :1;
        unsigned D2S3                   :1;
        unsigned D2S4                   :1;
        unsigned D2S5                   :1;
    };
} CLC3SEL1bits_t;
extern volatile CLC3SEL1bits_t CLC3SEL1bits @ 0xF27;
// bitfield macros
#define _CLC3SEL1_LC3D2S0_POSN                              0x0
#define _CLC3SEL1_LC3D2S0_POSITION                          0x0
#define _CLC3SEL1_LC3D2S0_SIZE                              0x1
#define _CLC3SEL1_LC3D2S0_LENGTH                            0x1
#define _CLC3SEL1_LC3D2S0_MASK                              0x1
#define _CLC3SEL1_LC3D2S1_POSN                              0x1
#define _CLC3SEL1_LC3D2S1_POSITION                          0x1
#define _CLC3SEL1_LC3D2S1_SIZE                              0x1
#define _CLC3SEL1_LC3D2S1_LENGTH                            0x1
#define _CLC3SEL1_LC3D2S1_MASK                              0x2
#define _CLC3SEL1_LC3D2S2_POSN                              0x2
#define _CLC3SEL1_LC3D2S2_POSITION                          0x2
#define _CLC3SEL1_LC3D2S2_SIZE                              0x1
#define _CLC3SEL1_LC3D2S2_LENGTH                            0x1
#define _CLC3SEL1_LC3D2S2_MASK                              0x4
#define _CLC3SEL1_LC3D2S3_POSN                              0x3
#define _CLC3SEL1_LC3D2S3_POSITION                          0x3
#define _CLC3SEL1_LC3D2S3_SIZE                              0x1
#define _CLC3SEL1_LC3D2S3_LENGTH                            0x1
#define _CLC3SEL1_LC3D2S3_MASK                              0x8
#define _CLC3SEL1_LC3D2S4_POSN                              0x4
#define _CLC3SEL1_LC3D2S4_POSITION                          0x4
#define _CLC3SEL1_LC3D2S4_SIZE                              0x1
#define _CLC3SEL1_LC3D2S4_LENGTH                            0x1
#define _CLC3SEL1_LC3D2S4_MASK                              0x10
#define _CLC3SEL1_LC3D2S5_POSN                              0x5
#define _CLC3SEL1_LC3D2S5_POSITION                          0x5
#define _CLC3SEL1_LC3D2S5_SIZE                              0x1
#define _CLC3SEL1_LC3D2S5_LENGTH                            0x1
#define _CLC3SEL1_LC3D2S5_MASK                              0x20
#define _CLC3SEL1_LC3D2S_POSN                               0x0
#define _CLC3SEL1_LC3D2S_POSITION                           0x0
#define _CLC3SEL1_LC3D2S_SIZE                               0x8
#define _CLC3SEL1_LC3D2S_LENGTH                             0x8
#define _CLC3SEL1_LC3D2S_MASK                               0xFF
#define _CLC3SEL1_D2S_POSN                                  0x0
#define _CLC3SEL1_D2S_POSITION                              0x0
#define _CLC3SEL1_D2S_SIZE                                  0x8
#define _CLC3SEL1_D2S_LENGTH                                0x8
#define _CLC3SEL1_D2S_MASK                                  0xFF
#define _CLC3SEL1_D2S0_POSN                                 0x0
#define _CLC3SEL1_D2S0_POSITION                             0x0
#define _CLC3SEL1_D2S0_SIZE                                 0x1
#define _CLC3SEL1_D2S0_LENGTH                               0x1
#define _CLC3SEL1_D2S0_MASK                                 0x1
#define _CLC3SEL1_D2S1_POSN                                 0x1
#define _CLC3SEL1_D2S1_POSITION                             0x1
#define _CLC3SEL1_D2S1_SIZE                                 0x1
#define _CLC3SEL1_D2S1_LENGTH                               0x1
#define _CLC3SEL1_D2S1_MASK                                 0x2
#define _CLC3SEL1_D2S2_POSN                                 0x2
#define _CLC3SEL1_D2S2_POSITION                             0x2
#define _CLC3SEL1_D2S2_SIZE                                 0x1
#define _CLC3SEL1_D2S2_LENGTH                               0x1
#define _CLC3SEL1_D2S2_MASK                                 0x4
#define _CLC3SEL1_D2S3_POSN                                 0x3
#define _CLC3SEL1_D2S3_POSITION                             0x3
#define _CLC3SEL1_D2S3_SIZE                                 0x1
#define _CLC3SEL1_D2S3_LENGTH                               0x1
#define _CLC3SEL1_D2S3_MASK                                 0x8
#define _CLC3SEL1_D2S4_POSN                                 0x4
#define _CLC3SEL1_D2S4_POSITION                             0x4
#define _CLC3SEL1_D2S4_SIZE                                 0x1
#define _CLC3SEL1_D2S4_LENGTH                               0x1
#define _CLC3SEL1_D2S4_MASK                                 0x10
#define _CLC3SEL1_D2S5_POSN                                 0x5
#define _CLC3SEL1_D2S5_POSITION                             0x5
#define _CLC3SEL1_D2S5_SIZE                                 0x1
#define _CLC3SEL1_D2S5_LENGTH                               0x1
#define _CLC3SEL1_D2S5_MASK                                 0x20

// Register: CLC3SEL2
extern volatile unsigned char           CLC3SEL2            @ 0xF28;
#ifndef _LIB_BUILD
asm("CLC3SEL2 equ 0F28h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3D3S0                :1;
        unsigned LC3D3S1                :1;
        unsigned LC3D3S2                :1;
        unsigned LC3D3S3                :1;
        unsigned LC3D3S4                :1;
        unsigned LC3D3S5                :1;
    };
    struct {
        unsigned LC3D3S                 :8;
    };
    struct {
        unsigned D3S                    :8;
    };
    struct {
        unsigned D3S0                   :1;
        unsigned D3S1                   :1;
        unsigned D3S2                   :1;
        unsigned D3S3                   :1;
        unsigned D3S4                   :1;
        unsigned D3S5                   :1;
    };
} CLC3SEL2bits_t;
extern volatile CLC3SEL2bits_t CLC3SEL2bits @ 0xF28;
// bitfield macros
#define _CLC3SEL2_LC3D3S0_POSN                              0x0
#define _CLC3SEL2_LC3D3S0_POSITION                          0x0
#define _CLC3SEL2_LC3D3S0_SIZE                              0x1
#define _CLC3SEL2_LC3D3S0_LENGTH                            0x1
#define _CLC3SEL2_LC3D3S0_MASK                              0x1
#define _CLC3SEL2_LC3D3S1_POSN                              0x1
#define _CLC3SEL2_LC3D3S1_POSITION                          0x1
#define _CLC3SEL2_LC3D3S1_SIZE                              0x1
#define _CLC3SEL2_LC3D3S1_LENGTH                            0x1
#define _CLC3SEL2_LC3D3S1_MASK                              0x2
#define _CLC3SEL2_LC3D3S2_POSN                              0x2
#define _CLC3SEL2_LC3D3S2_POSITION                          0x2
#define _CLC3SEL2_LC3D3S2_SIZE                              0x1
#define _CLC3SEL2_LC3D3S2_LENGTH                            0x1
#define _CLC3SEL2_LC3D3S2_MASK                              0x4
#define _CLC3SEL2_LC3D3S3_POSN                              0x3
#define _CLC3SEL2_LC3D3S3_POSITION                          0x3
#define _CLC3SEL2_LC3D3S3_SIZE                              0x1
#define _CLC3SEL2_LC3D3S3_LENGTH                            0x1
#define _CLC3SEL2_LC3D3S3_MASK                              0x8
#define _CLC3SEL2_LC3D3S4_POSN                              0x4
#define _CLC3SEL2_LC3D3S4_POSITION                          0x4
#define _CLC3SEL2_LC3D3S4_SIZE                              0x1
#define _CLC3SEL2_LC3D3S4_LENGTH                            0x1
#define _CLC3SEL2_LC3D3S4_MASK                              0x10
#define _CLC3SEL2_LC3D3S5_POSN                              0x5
#define _CLC3SEL2_LC3D3S5_POSITION                          0x5
#define _CLC3SEL2_LC3D3S5_SIZE                              0x1
#define _CLC3SEL2_LC3D3S5_LENGTH                            0x1
#define _CLC3SEL2_LC3D3S5_MASK                              0x20
#define _CLC3SEL2_LC3D3S_POSN                               0x0
#define _CLC3SEL2_LC3D3S_POSITION                           0x0
#define _CLC3SEL2_LC3D3S_SIZE                               0x8
#define _CLC3SEL2_LC3D3S_LENGTH                             0x8
#define _CLC3SEL2_LC3D3S_MASK                               0xFF
#define _CLC3SEL2_D3S_POSN                                  0x0
#define _CLC3SEL2_D3S_POSITION                              0x0
#define _CLC3SEL2_D3S_SIZE                                  0x8
#define _CLC3SEL2_D3S_LENGTH                                0x8
#define _CLC3SEL2_D3S_MASK                                  0xFF
#define _CLC3SEL2_D3S0_POSN                                 0x0
#define _CLC3SEL2_D3S0_POSITION                             0x0
#define _CLC3SEL2_D3S0_SIZE                                 0x1
#define _CLC3SEL2_D3S0_LENGTH                               0x1
#define _CLC3SEL2_D3S0_MASK                                 0x1
#define _CLC3SEL2_D3S1_POSN                                 0x1
#define _CLC3SEL2_D3S1_POSITION                             0x1
#define _CLC3SEL2_D3S1_SIZE                                 0x1
#define _CLC3SEL2_D3S1_LENGTH                               0x1
#define _CLC3SEL2_D3S1_MASK                                 0x2
#define _CLC3SEL2_D3S2_POSN                                 0x2
#define _CLC3SEL2_D3S2_POSITION                             0x2
#define _CLC3SEL2_D3S2_SIZE                                 0x1
#define _CLC3SEL2_D3S2_LENGTH                               0x1
#define _CLC3SEL2_D3S2_MASK                                 0x4
#define _CLC3SEL2_D3S3_POSN                                 0x3
#define _CLC3SEL2_D3S3_POSITION                             0x3
#define _CLC3SEL2_D3S3_SIZE                                 0x1
#define _CLC3SEL2_D3S3_LENGTH                               0x1
#define _CLC3SEL2_D3S3_MASK                                 0x8
#define _CLC3SEL2_D3S4_POSN                                 0x4
#define _CLC3SEL2_D3S4_POSITION                             0x4
#define _CLC3SEL2_D3S4_SIZE                                 0x1
#define _CLC3SEL2_D3S4_LENGTH                               0x1
#define _CLC3SEL2_D3S4_MASK                                 0x10
#define _CLC3SEL2_D3S5_POSN                                 0x5
#define _CLC3SEL2_D3S5_POSITION                             0x5
#define _CLC3SEL2_D3S5_SIZE                                 0x1
#define _CLC3SEL2_D3S5_LENGTH                               0x1
#define _CLC3SEL2_D3S5_MASK                                 0x20

// Register: CLC3SEL3
extern volatile unsigned char           CLC3SEL3            @ 0xF29;
#ifndef _LIB_BUILD
asm("CLC3SEL3 equ 0F29h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3D4S0                :1;
        unsigned LC3D4S1                :1;
        unsigned LC3D4S2                :1;
        unsigned LC3D4S3                :1;
        unsigned LC3D4S4                :1;
        unsigned LC3D4S5                :1;
    };
    struct {
        unsigned LC3D4S                 :8;
    };
    struct {
        unsigned D4S                    :8;
    };
    struct {
        unsigned D4S0                   :1;
        unsigned D4S1                   :1;
        unsigned D4S2                   :1;
        unsigned D4S3                   :1;
        unsigned D4S4                   :1;
        unsigned D4S5                   :1;
    };
} CLC3SEL3bits_t;
extern volatile CLC3SEL3bits_t CLC3SEL3bits @ 0xF29;
// bitfield macros
#define _CLC3SEL3_LC3D4S0_POSN                              0x0
#define _CLC3SEL3_LC3D4S0_POSITION                          0x0
#define _CLC3SEL3_LC3D4S0_SIZE                              0x1
#define _CLC3SEL3_LC3D4S0_LENGTH                            0x1
#define _CLC3SEL3_LC3D4S0_MASK                              0x1
#define _CLC3SEL3_LC3D4S1_POSN                              0x1
#define _CLC3SEL3_LC3D4S1_POSITION                          0x1
#define _CLC3SEL3_LC3D4S1_SIZE                              0x1
#define _CLC3SEL3_LC3D4S1_LENGTH                            0x1
#define _CLC3SEL3_LC3D4S1_MASK                              0x2
#define _CLC3SEL3_LC3D4S2_POSN                              0x2
#define _CLC3SEL3_LC3D4S2_POSITION                          0x2
#define _CLC3SEL3_LC3D4S2_SIZE                              0x1
#define _CLC3SEL3_LC3D4S2_LENGTH                            0x1
#define _CLC3SEL3_LC3D4S2_MASK                              0x4
#define _CLC3SEL3_LC3D4S3_POSN                              0x3
#define _CLC3SEL3_LC3D4S3_POSITION                          0x3
#define _CLC3SEL3_LC3D4S3_SIZE                              0x1
#define _CLC3SEL3_LC3D4S3_LENGTH                            0x1
#define _CLC3SEL3_LC3D4S3_MASK                              0x8
#define _CLC3SEL3_LC3D4S4_POSN                              0x4
#define _CLC3SEL3_LC3D4S4_POSITION                          0x4
#define _CLC3SEL3_LC3D4S4_SIZE                              0x1
#define _CLC3SEL3_LC3D4S4_LENGTH                            0x1
#define _CLC3SEL3_LC3D4S4_MASK                              0x10
#define _CLC3SEL3_LC3D4S5_POSN                              0x5
#define _CLC3SEL3_LC3D4S5_POSITION                          0x5
#define _CLC3SEL3_LC3D4S5_SIZE                              0x1
#define _CLC3SEL3_LC3D4S5_LENGTH                            0x1
#define _CLC3SEL3_LC3D4S5_MASK                              0x20
#define _CLC3SEL3_LC3D4S_POSN                               0x0
#define _CLC3SEL3_LC3D4S_POSITION                           0x0
#define _CLC3SEL3_LC3D4S_SIZE                               0x8
#define _CLC3SEL3_LC3D4S_LENGTH                             0x8
#define _CLC3SEL3_LC3D4S_MASK                               0xFF
#define _CLC3SEL3_D4S_POSN                                  0x0
#define _CLC3SEL3_D4S_POSITION                              0x0
#define _CLC3SEL3_D4S_SIZE                                  0x8
#define _CLC3SEL3_D4S_LENGTH                                0x8
#define _CLC3SEL3_D4S_MASK                                  0xFF
#define _CLC3SEL3_D4S0_POSN                                 0x0
#define _CLC3SEL3_D4S0_POSITION                             0x0
#define _CLC3SEL3_D4S0_SIZE                                 0x1
#define _CLC3SEL3_D4S0_LENGTH                               0x1
#define _CLC3SEL3_D4S0_MASK                                 0x1
#define _CLC3SEL3_D4S1_POSN                                 0x1
#define _CLC3SEL3_D4S1_POSITION                             0x1
#define _CLC3SEL3_D4S1_SIZE                                 0x1
#define _CLC3SEL3_D4S1_LENGTH                               0x1
#define _CLC3SEL3_D4S1_MASK                                 0x2
#define _CLC3SEL3_D4S2_POSN                                 0x2
#define _CLC3SEL3_D4S2_POSITION                             0x2
#define _CLC3SEL3_D4S2_SIZE                                 0x1
#define _CLC3SEL3_D4S2_LENGTH                               0x1
#define _CLC3SEL3_D4S2_MASK                                 0x4
#define _CLC3SEL3_D4S3_POSN                                 0x3
#define _CLC3SEL3_D4S3_POSITION                             0x3
#define _CLC3SEL3_D4S3_SIZE                                 0x1
#define _CLC3SEL3_D4S3_LENGTH                               0x1
#define _CLC3SEL3_D4S3_MASK                                 0x8
#define _CLC3SEL3_D4S4_POSN                                 0x4
#define _CLC3SEL3_D4S4_POSITION                             0x4
#define _CLC3SEL3_D4S4_SIZE                                 0x1
#define _CLC3SEL3_D4S4_LENGTH                               0x1
#define _CLC3SEL3_D4S4_MASK                                 0x10
#define _CLC3SEL3_D4S5_POSN                                 0x5
#define _CLC3SEL3_D4S5_POSITION                             0x5
#define _CLC3SEL3_D4S5_SIZE                                 0x1
#define _CLC3SEL3_D4S5_LENGTH                               0x1
#define _CLC3SEL3_D4S5_MASK                                 0x20

// Register: CLC3GLS0
extern volatile unsigned char           CLC3GLS0            @ 0xF2A;
#ifndef _LIB_BUILD
asm("CLC3GLS0 equ 0F2Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3G1D1N               :1;
        unsigned LC3G1D1T               :1;
        unsigned LC3G1D2N               :1;
        unsigned LC3G1D2T               :1;
        unsigned LC3G1D3N               :1;
        unsigned LC3G1D3T               :1;
        unsigned LC3G1D4N               :1;
        unsigned LC3G1D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC3GLS0bits_t;
extern volatile CLC3GLS0bits_t CLC3GLS0bits @ 0xF2A;
// bitfield macros
#define _CLC3GLS0_LC3G1D1N_POSN                             0x0
#define _CLC3GLS0_LC3G1D1N_POSITION                         0x0
#define _CLC3GLS0_LC3G1D1N_SIZE                             0x1
#define _CLC3GLS0_LC3G1D1N_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D1N_MASK                             0x1
#define _CLC3GLS0_LC3G1D1T_POSN                             0x1
#define _CLC3GLS0_LC3G1D1T_POSITION                         0x1
#define _CLC3GLS0_LC3G1D1T_SIZE                             0x1
#define _CLC3GLS0_LC3G1D1T_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D1T_MASK                             0x2
#define _CLC3GLS0_LC3G1D2N_POSN                             0x2
#define _CLC3GLS0_LC3G1D2N_POSITION                         0x2
#define _CLC3GLS0_LC3G1D2N_SIZE                             0x1
#define _CLC3GLS0_LC3G1D2N_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D2N_MASK                             0x4
#define _CLC3GLS0_LC3G1D2T_POSN                             0x3
#define _CLC3GLS0_LC3G1D2T_POSITION                         0x3
#define _CLC3GLS0_LC3G1D2T_SIZE                             0x1
#define _CLC3GLS0_LC3G1D2T_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D2T_MASK                             0x8
#define _CLC3GLS0_LC3G1D3N_POSN                             0x4
#define _CLC3GLS0_LC3G1D3N_POSITION                         0x4
#define _CLC3GLS0_LC3G1D3N_SIZE                             0x1
#define _CLC3GLS0_LC3G1D3N_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D3N_MASK                             0x10
#define _CLC3GLS0_LC3G1D3T_POSN                             0x5
#define _CLC3GLS0_LC3G1D3T_POSITION                         0x5
#define _CLC3GLS0_LC3G1D3T_SIZE                             0x1
#define _CLC3GLS0_LC3G1D3T_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D3T_MASK                             0x20
#define _CLC3GLS0_LC3G1D4N_POSN                             0x6
#define _CLC3GLS0_LC3G1D4N_POSITION                         0x6
#define _CLC3GLS0_LC3G1D4N_SIZE                             0x1
#define _CLC3GLS0_LC3G1D4N_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D4N_MASK                             0x40
#define _CLC3GLS0_LC3G1D4T_POSN                             0x7
#define _CLC3GLS0_LC3G1D4T_POSITION                         0x7
#define _CLC3GLS0_LC3G1D4T_SIZE                             0x1
#define _CLC3GLS0_LC3G1D4T_LENGTH                           0x1
#define _CLC3GLS0_LC3G1D4T_MASK                             0x80
#define _CLC3GLS0_D1N_POSN                                  0x0
#define _CLC3GLS0_D1N_POSITION                              0x0
#define _CLC3GLS0_D1N_SIZE                                  0x1
#define _CLC3GLS0_D1N_LENGTH                                0x1
#define _CLC3GLS0_D1N_MASK                                  0x1
#define _CLC3GLS0_D1T_POSN                                  0x1
#define _CLC3GLS0_D1T_POSITION                              0x1
#define _CLC3GLS0_D1T_SIZE                                  0x1
#define _CLC3GLS0_D1T_LENGTH                                0x1
#define _CLC3GLS0_D1T_MASK                                  0x2
#define _CLC3GLS0_D2N_POSN                                  0x2
#define _CLC3GLS0_D2N_POSITION                              0x2
#define _CLC3GLS0_D2N_SIZE                                  0x1
#define _CLC3GLS0_D2N_LENGTH                                0x1
#define _CLC3GLS0_D2N_MASK                                  0x4
#define _CLC3GLS0_D2T_POSN                                  0x3
#define _CLC3GLS0_D2T_POSITION                              0x3
#define _CLC3GLS0_D2T_SIZE                                  0x1
#define _CLC3GLS0_D2T_LENGTH                                0x1
#define _CLC3GLS0_D2T_MASK                                  0x8
#define _CLC3GLS0_D3N_POSN                                  0x4
#define _CLC3GLS0_D3N_POSITION                              0x4
#define _CLC3GLS0_D3N_SIZE                                  0x1
#define _CLC3GLS0_D3N_LENGTH                                0x1
#define _CLC3GLS0_D3N_MASK                                  0x10
#define _CLC3GLS0_D3T_POSN                                  0x5
#define _CLC3GLS0_D3T_POSITION                              0x5
#define _CLC3GLS0_D3T_SIZE                                  0x1
#define _CLC3GLS0_D3T_LENGTH                                0x1
#define _CLC3GLS0_D3T_MASK                                  0x20
#define _CLC3GLS0_D4N_POSN                                  0x6
#define _CLC3GLS0_D4N_POSITION                              0x6
#define _CLC3GLS0_D4N_SIZE                                  0x1
#define _CLC3GLS0_D4N_LENGTH                                0x1
#define _CLC3GLS0_D4N_MASK                                  0x40
#define _CLC3GLS0_D4T_POSN                                  0x7
#define _CLC3GLS0_D4T_POSITION                              0x7
#define _CLC3GLS0_D4T_SIZE                                  0x1
#define _CLC3GLS0_D4T_LENGTH                                0x1
#define _CLC3GLS0_D4T_MASK                                  0x80

// Register: CLC3GLS1
extern volatile unsigned char           CLC3GLS1            @ 0xF2B;
#ifndef _LIB_BUILD
asm("CLC3GLS1 equ 0F2Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3G2D1N               :1;
        unsigned LC3G2D1T               :1;
        unsigned LC3G2D2N               :1;
        unsigned LC3G2D2T               :1;
        unsigned LC3G2D3N               :1;
        unsigned LC3G2D3T               :1;
        unsigned LC3G2D4N               :1;
        unsigned LC3G2D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC3GLS1bits_t;
extern volatile CLC3GLS1bits_t CLC3GLS1bits @ 0xF2B;
// bitfield macros
#define _CLC3GLS1_LC3G2D1N_POSN                             0x0
#define _CLC3GLS1_LC3G2D1N_POSITION                         0x0
#define _CLC3GLS1_LC3G2D1N_SIZE                             0x1
#define _CLC3GLS1_LC3G2D1N_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D1N_MASK                             0x1
#define _CLC3GLS1_LC3G2D1T_POSN                             0x1
#define _CLC3GLS1_LC3G2D1T_POSITION                         0x1
#define _CLC3GLS1_LC3G2D1T_SIZE                             0x1
#define _CLC3GLS1_LC3G2D1T_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D1T_MASK                             0x2
#define _CLC3GLS1_LC3G2D2N_POSN                             0x2
#define _CLC3GLS1_LC3G2D2N_POSITION                         0x2
#define _CLC3GLS1_LC3G2D2N_SIZE                             0x1
#define _CLC3GLS1_LC3G2D2N_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D2N_MASK                             0x4
#define _CLC3GLS1_LC3G2D2T_POSN                             0x3
#define _CLC3GLS1_LC3G2D2T_POSITION                         0x3
#define _CLC3GLS1_LC3G2D2T_SIZE                             0x1
#define _CLC3GLS1_LC3G2D2T_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D2T_MASK                             0x8
#define _CLC3GLS1_LC3G2D3N_POSN                             0x4
#define _CLC3GLS1_LC3G2D3N_POSITION                         0x4
#define _CLC3GLS1_LC3G2D3N_SIZE                             0x1
#define _CLC3GLS1_LC3G2D3N_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D3N_MASK                             0x10
#define _CLC3GLS1_LC3G2D3T_POSN                             0x5
#define _CLC3GLS1_LC3G2D3T_POSITION                         0x5
#define _CLC3GLS1_LC3G2D3T_SIZE                             0x1
#define _CLC3GLS1_LC3G2D3T_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D3T_MASK                             0x20
#define _CLC3GLS1_LC3G2D4N_POSN                             0x6
#define _CLC3GLS1_LC3G2D4N_POSITION                         0x6
#define _CLC3GLS1_LC3G2D4N_SIZE                             0x1
#define _CLC3GLS1_LC3G2D4N_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D4N_MASK                             0x40
#define _CLC3GLS1_LC3G2D4T_POSN                             0x7
#define _CLC3GLS1_LC3G2D4T_POSITION                         0x7
#define _CLC3GLS1_LC3G2D4T_SIZE                             0x1
#define _CLC3GLS1_LC3G2D4T_LENGTH                           0x1
#define _CLC3GLS1_LC3G2D4T_MASK                             0x80
#define _CLC3GLS1_D1N_POSN                                  0x0
#define _CLC3GLS1_D1N_POSITION                              0x0
#define _CLC3GLS1_D1N_SIZE                                  0x1
#define _CLC3GLS1_D1N_LENGTH                                0x1
#define _CLC3GLS1_D1N_MASK                                  0x1
#define _CLC3GLS1_D1T_POSN                                  0x1
#define _CLC3GLS1_D1T_POSITION                              0x1
#define _CLC3GLS1_D1T_SIZE                                  0x1
#define _CLC3GLS1_D1T_LENGTH                                0x1
#define _CLC3GLS1_D1T_MASK                                  0x2
#define _CLC3GLS1_D2N_POSN                                  0x2
#define _CLC3GLS1_D2N_POSITION                              0x2
#define _CLC3GLS1_D2N_SIZE                                  0x1
#define _CLC3GLS1_D2N_LENGTH                                0x1
#define _CLC3GLS1_D2N_MASK                                  0x4
#define _CLC3GLS1_D2T_POSN                                  0x3
#define _CLC3GLS1_D2T_POSITION                              0x3
#define _CLC3GLS1_D2T_SIZE                                  0x1
#define _CLC3GLS1_D2T_LENGTH                                0x1
#define _CLC3GLS1_D2T_MASK                                  0x8
#define _CLC3GLS1_D3N_POSN                                  0x4
#define _CLC3GLS1_D3N_POSITION                              0x4
#define _CLC3GLS1_D3N_SIZE                                  0x1
#define _CLC3GLS1_D3N_LENGTH                                0x1
#define _CLC3GLS1_D3N_MASK                                  0x10
#define _CLC3GLS1_D3T_POSN                                  0x5
#define _CLC3GLS1_D3T_POSITION                              0x5
#define _CLC3GLS1_D3T_SIZE                                  0x1
#define _CLC3GLS1_D3T_LENGTH                                0x1
#define _CLC3GLS1_D3T_MASK                                  0x20
#define _CLC3GLS1_D4N_POSN                                  0x6
#define _CLC3GLS1_D4N_POSITION                              0x6
#define _CLC3GLS1_D4N_SIZE                                  0x1
#define _CLC3GLS1_D4N_LENGTH                                0x1
#define _CLC3GLS1_D4N_MASK                                  0x40
#define _CLC3GLS1_D4T_POSN                                  0x7
#define _CLC3GLS1_D4T_POSITION                              0x7
#define _CLC3GLS1_D4T_SIZE                                  0x1
#define _CLC3GLS1_D4T_LENGTH                                0x1
#define _CLC3GLS1_D4T_MASK                                  0x80

// Register: CLC3GLS2
extern volatile unsigned char           CLC3GLS2            @ 0xF2C;
#ifndef _LIB_BUILD
asm("CLC3GLS2 equ 0F2Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3G3D1N               :1;
        unsigned LC3G3D1T               :1;
        unsigned LC3G3D2N               :1;
        unsigned LC3G3D2T               :1;
        unsigned LC3G3D3N               :1;
        unsigned LC3G3D3T               :1;
        unsigned LC3G3D4N               :1;
        unsigned LC3G3D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC3GLS2bits_t;
extern volatile CLC3GLS2bits_t CLC3GLS2bits @ 0xF2C;
// bitfield macros
#define _CLC3GLS2_LC3G3D1N_POSN                             0x0
#define _CLC3GLS2_LC3G3D1N_POSITION                         0x0
#define _CLC3GLS2_LC3G3D1N_SIZE                             0x1
#define _CLC3GLS2_LC3G3D1N_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D1N_MASK                             0x1
#define _CLC3GLS2_LC3G3D1T_POSN                             0x1
#define _CLC3GLS2_LC3G3D1T_POSITION                         0x1
#define _CLC3GLS2_LC3G3D1T_SIZE                             0x1
#define _CLC3GLS2_LC3G3D1T_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D1T_MASK                             0x2
#define _CLC3GLS2_LC3G3D2N_POSN                             0x2
#define _CLC3GLS2_LC3G3D2N_POSITION                         0x2
#define _CLC3GLS2_LC3G3D2N_SIZE                             0x1
#define _CLC3GLS2_LC3G3D2N_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D2N_MASK                             0x4
#define _CLC3GLS2_LC3G3D2T_POSN                             0x3
#define _CLC3GLS2_LC3G3D2T_POSITION                         0x3
#define _CLC3GLS2_LC3G3D2T_SIZE                             0x1
#define _CLC3GLS2_LC3G3D2T_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D2T_MASK                             0x8
#define _CLC3GLS2_LC3G3D3N_POSN                             0x4
#define _CLC3GLS2_LC3G3D3N_POSITION                         0x4
#define _CLC3GLS2_LC3G3D3N_SIZE                             0x1
#define _CLC3GLS2_LC3G3D3N_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D3N_MASK                             0x10
#define _CLC3GLS2_LC3G3D3T_POSN                             0x5
#define _CLC3GLS2_LC3G3D3T_POSITION                         0x5
#define _CLC3GLS2_LC3G3D3T_SIZE                             0x1
#define _CLC3GLS2_LC3G3D3T_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D3T_MASK                             0x20
#define _CLC3GLS2_LC3G3D4N_POSN                             0x6
#define _CLC3GLS2_LC3G3D4N_POSITION                         0x6
#define _CLC3GLS2_LC3G3D4N_SIZE                             0x1
#define _CLC3GLS2_LC3G3D4N_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D4N_MASK                             0x40
#define _CLC3GLS2_LC3G3D4T_POSN                             0x7
#define _CLC3GLS2_LC3G3D4T_POSITION                         0x7
#define _CLC3GLS2_LC3G3D4T_SIZE                             0x1
#define _CLC3GLS2_LC3G3D4T_LENGTH                           0x1
#define _CLC3GLS2_LC3G3D4T_MASK                             0x80
#define _CLC3GLS2_D1N_POSN                                  0x0
#define _CLC3GLS2_D1N_POSITION                              0x0
#define _CLC3GLS2_D1N_SIZE                                  0x1
#define _CLC3GLS2_D1N_LENGTH                                0x1
#define _CLC3GLS2_D1N_MASK                                  0x1
#define _CLC3GLS2_D1T_POSN                                  0x1
#define _CLC3GLS2_D1T_POSITION                              0x1
#define _CLC3GLS2_D1T_SIZE                                  0x1
#define _CLC3GLS2_D1T_LENGTH                                0x1
#define _CLC3GLS2_D1T_MASK                                  0x2
#define _CLC3GLS2_D2N_POSN                                  0x2
#define _CLC3GLS2_D2N_POSITION                              0x2
#define _CLC3GLS2_D2N_SIZE                                  0x1
#define _CLC3GLS2_D2N_LENGTH                                0x1
#define _CLC3GLS2_D2N_MASK                                  0x4
#define _CLC3GLS2_D2T_POSN                                  0x3
#define _CLC3GLS2_D2T_POSITION                              0x3
#define _CLC3GLS2_D2T_SIZE                                  0x1
#define _CLC3GLS2_D2T_LENGTH                                0x1
#define _CLC3GLS2_D2T_MASK                                  0x8
#define _CLC3GLS2_D3N_POSN                                  0x4
#define _CLC3GLS2_D3N_POSITION                              0x4
#define _CLC3GLS2_D3N_SIZE                                  0x1
#define _CLC3GLS2_D3N_LENGTH                                0x1
#define _CLC3GLS2_D3N_MASK                                  0x10
#define _CLC3GLS2_D3T_POSN                                  0x5
#define _CLC3GLS2_D3T_POSITION                              0x5
#define _CLC3GLS2_D3T_SIZE                                  0x1
#define _CLC3GLS2_D3T_LENGTH                                0x1
#define _CLC3GLS2_D3T_MASK                                  0x20
#define _CLC3GLS2_D4N_POSN                                  0x6
#define _CLC3GLS2_D4N_POSITION                              0x6
#define _CLC3GLS2_D4N_SIZE                                  0x1
#define _CLC3GLS2_D4N_LENGTH                                0x1
#define _CLC3GLS2_D4N_MASK                                  0x40
#define _CLC3GLS2_D4T_POSN                                  0x7
#define _CLC3GLS2_D4T_POSITION                              0x7
#define _CLC3GLS2_D4T_SIZE                                  0x1
#define _CLC3GLS2_D4T_LENGTH                                0x1
#define _CLC3GLS2_D4T_MASK                                  0x80

// Register: CLC3GLS3
extern volatile unsigned char           CLC3GLS3            @ 0xF2D;
#ifndef _LIB_BUILD
asm("CLC3GLS3 equ 0F2Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC3G4D1N               :1;
        unsigned LC3G4D1T               :1;
        unsigned LC3G4D2N               :1;
        unsigned LC3G4D2T               :1;
        unsigned LC3G4D3N               :1;
        unsigned LC3G4D3T               :1;
        unsigned LC3G4D4N               :1;
        unsigned LC3G4D4T               :1;
    };
    struct {
        unsigned G4D1N                  :1;
        unsigned G4D1T                  :1;
        unsigned G4D2N                  :1;
        unsigned G4D2T                  :1;
        unsigned G4D3N                  :1;
        unsigned G4D3T                  :1;
        unsigned G4D4N                  :1;
        unsigned G4D4T                  :1;
    };
} CLC3GLS3bits_t;
extern volatile CLC3GLS3bits_t CLC3GLS3bits @ 0xF2D;
// bitfield macros
#define _CLC3GLS3_LC3G4D1N_POSN                             0x0
#define _CLC3GLS3_LC3G4D1N_POSITION                         0x0
#define _CLC3GLS3_LC3G4D1N_SIZE                             0x1
#define _CLC3GLS3_LC3G4D1N_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D1N_MASK                             0x1
#define _CLC3GLS3_LC3G4D1T_POSN                             0x1
#define _CLC3GLS3_LC3G4D1T_POSITION                         0x1
#define _CLC3GLS3_LC3G4D1T_SIZE                             0x1
#define _CLC3GLS3_LC3G4D1T_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D1T_MASK                             0x2
#define _CLC3GLS3_LC3G4D2N_POSN                             0x2
#define _CLC3GLS3_LC3G4D2N_POSITION                         0x2
#define _CLC3GLS3_LC3G4D2N_SIZE                             0x1
#define _CLC3GLS3_LC3G4D2N_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D2N_MASK                             0x4
#define _CLC3GLS3_LC3G4D2T_POSN                             0x3
#define _CLC3GLS3_LC3G4D2T_POSITION                         0x3
#define _CLC3GLS3_LC3G4D2T_SIZE                             0x1
#define _CLC3GLS3_LC3G4D2T_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D2T_MASK                             0x8
#define _CLC3GLS3_LC3G4D3N_POSN                             0x4
#define _CLC3GLS3_LC3G4D3N_POSITION                         0x4
#define _CLC3GLS3_LC3G4D3N_SIZE                             0x1
#define _CLC3GLS3_LC3G4D3N_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D3N_MASK                             0x10
#define _CLC3GLS3_LC3G4D3T_POSN                             0x5
#define _CLC3GLS3_LC3G4D3T_POSITION                         0x5
#define _CLC3GLS3_LC3G4D3T_SIZE                             0x1
#define _CLC3GLS3_LC3G4D3T_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D3T_MASK                             0x20
#define _CLC3GLS3_LC3G4D4N_POSN                             0x6
#define _CLC3GLS3_LC3G4D4N_POSITION                         0x6
#define _CLC3GLS3_LC3G4D4N_SIZE                             0x1
#define _CLC3GLS3_LC3G4D4N_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D4N_MASK                             0x40
#define _CLC3GLS3_LC3G4D4T_POSN                             0x7
#define _CLC3GLS3_LC3G4D4T_POSITION                         0x7
#define _CLC3GLS3_LC3G4D4T_SIZE                             0x1
#define _CLC3GLS3_LC3G4D4T_LENGTH                           0x1
#define _CLC3GLS3_LC3G4D4T_MASK                             0x80
#define _CLC3GLS3_G4D1N_POSN                                0x0
#define _CLC3GLS3_G4D1N_POSITION                            0x0
#define _CLC3GLS3_G4D1N_SIZE                                0x1
#define _CLC3GLS3_G4D1N_LENGTH                              0x1
#define _CLC3GLS3_G4D1N_MASK                                0x1
#define _CLC3GLS3_G4D1T_POSN                                0x1
#define _CLC3GLS3_G4D1T_POSITION                            0x1
#define _CLC3GLS3_G4D1T_SIZE                                0x1
#define _CLC3GLS3_G4D1T_LENGTH                              0x1
#define _CLC3GLS3_G4D1T_MASK                                0x2
#define _CLC3GLS3_G4D2N_POSN                                0x2
#define _CLC3GLS3_G4D2N_POSITION                            0x2
#define _CLC3GLS3_G4D2N_SIZE                                0x1
#define _CLC3GLS3_G4D2N_LENGTH                              0x1
#define _CLC3GLS3_G4D2N_MASK                                0x4
#define _CLC3GLS3_G4D2T_POSN                                0x3
#define _CLC3GLS3_G4D2T_POSITION                            0x3
#define _CLC3GLS3_G4D2T_SIZE                                0x1
#define _CLC3GLS3_G4D2T_LENGTH                              0x1
#define _CLC3GLS3_G4D2T_MASK                                0x8
#define _CLC3GLS3_G4D3N_POSN                                0x4
#define _CLC3GLS3_G4D3N_POSITION                            0x4
#define _CLC3GLS3_G4D3N_SIZE                                0x1
#define _CLC3GLS3_G4D3N_LENGTH                              0x1
#define _CLC3GLS3_G4D3N_MASK                                0x10
#define _CLC3GLS3_G4D3T_POSN                                0x5
#define _CLC3GLS3_G4D3T_POSITION                            0x5
#define _CLC3GLS3_G4D3T_SIZE                                0x1
#define _CLC3GLS3_G4D3T_LENGTH                              0x1
#define _CLC3GLS3_G4D3T_MASK                                0x20
#define _CLC3GLS3_G4D4N_POSN                                0x6
#define _CLC3GLS3_G4D4N_POSITION                            0x6
#define _CLC3GLS3_G4D4N_SIZE                                0x1
#define _CLC3GLS3_G4D4N_LENGTH                              0x1
#define _CLC3GLS3_G4D4N_MASK                                0x40
#define _CLC3GLS3_G4D4T_POSN                                0x7
#define _CLC3GLS3_G4D4T_POSITION                            0x7
#define _CLC3GLS3_G4D4T_SIZE                                0x1
#define _CLC3GLS3_G4D4T_LENGTH                              0x1
#define _CLC3GLS3_G4D4T_MASK                                0x80

// Register: CLC4CON
extern volatile unsigned char           CLC4CON             @ 0xF2E;
#ifndef _LIB_BUILD
asm("CLC4CON equ 0F2Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4MODE                :3;
        unsigned LC4INTN                :1;
        unsigned LC4INTP                :1;
        unsigned LC4OUT                 :1;
        unsigned                        :1;
        unsigned LC4EN                  :1;
    };
    struct {
        unsigned LC4MODE0               :1;
        unsigned LC4MODE1               :1;
        unsigned LC4MODE2               :1;
    };
    struct {
        unsigned MODE                   :3;
        unsigned INTN                   :1;
        unsigned INTP                   :1;
        unsigned OUT                    :1;
        unsigned                        :1;
        unsigned EN                     :1;
    };
    struct {
        unsigned MODE0                  :1;
        unsigned MODE1                  :1;
        unsigned MODE2                  :1;
    };
} CLC4CONbits_t;
extern volatile CLC4CONbits_t CLC4CONbits @ 0xF2E;
// bitfield macros
#define _CLC4CON_LC4MODE_POSN                               0x0
#define _CLC4CON_LC4MODE_POSITION                           0x0
#define _CLC4CON_LC4MODE_SIZE                               0x3
#define _CLC4CON_LC4MODE_LENGTH                             0x3
#define _CLC4CON_LC4MODE_MASK                               0x7
#define _CLC4CON_LC4INTN_POSN                               0x3
#define _CLC4CON_LC4INTN_POSITION                           0x3
#define _CLC4CON_LC4INTN_SIZE                               0x1
#define _CLC4CON_LC4INTN_LENGTH                             0x1
#define _CLC4CON_LC4INTN_MASK                               0x8
#define _CLC4CON_LC4INTP_POSN                               0x4
#define _CLC4CON_LC4INTP_POSITION                           0x4
#define _CLC4CON_LC4INTP_SIZE                               0x1
#define _CLC4CON_LC4INTP_LENGTH                             0x1
#define _CLC4CON_LC4INTP_MASK                               0x10
#define _CLC4CON_LC4OUT_POSN                                0x5
#define _CLC4CON_LC4OUT_POSITION                            0x5
#define _CLC4CON_LC4OUT_SIZE                                0x1
#define _CLC4CON_LC4OUT_LENGTH                              0x1
#define _CLC4CON_LC4OUT_MASK                                0x20
#define _CLC4CON_LC4EN_POSN                                 0x7
#define _CLC4CON_LC4EN_POSITION                             0x7
#define _CLC4CON_LC4EN_SIZE                                 0x1
#define _CLC4CON_LC4EN_LENGTH                               0x1
#define _CLC4CON_LC4EN_MASK                                 0x80
#define _CLC4CON_LC4MODE0_POSN                              0x0
#define _CLC4CON_LC4MODE0_POSITION                          0x0
#define _CLC4CON_LC4MODE0_SIZE                              0x1
#define _CLC4CON_LC4MODE0_LENGTH                            0x1
#define _CLC4CON_LC4MODE0_MASK                              0x1
#define _CLC4CON_LC4MODE1_POSN                              0x1
#define _CLC4CON_LC4MODE1_POSITION                          0x1
#define _CLC4CON_LC4MODE1_SIZE                              0x1
#define _CLC4CON_LC4MODE1_LENGTH                            0x1
#define _CLC4CON_LC4MODE1_MASK                              0x2
#define _CLC4CON_LC4MODE2_POSN                              0x2
#define _CLC4CON_LC4MODE2_POSITION                          0x2
#define _CLC4CON_LC4MODE2_SIZE                              0x1
#define _CLC4CON_LC4MODE2_LENGTH                            0x1
#define _CLC4CON_LC4MODE2_MASK                              0x4
#define _CLC4CON_MODE_POSN                                  0x0
#define _CLC4CON_MODE_POSITION                              0x0
#define _CLC4CON_MODE_SIZE                                  0x3
#define _CLC4CON_MODE_LENGTH                                0x3
#define _CLC4CON_MODE_MASK                                  0x7
#define _CLC4CON_INTN_POSN                                  0x3
#define _CLC4CON_INTN_POSITION                              0x3
#define _CLC4CON_INTN_SIZE                                  0x1
#define _CLC4CON_INTN_LENGTH                                0x1
#define _CLC4CON_INTN_MASK                                  0x8
#define _CLC4CON_INTP_POSN                                  0x4
#define _CLC4CON_INTP_POSITION                              0x4
#define _CLC4CON_INTP_SIZE                                  0x1
#define _CLC4CON_INTP_LENGTH                                0x1
#define _CLC4CON_INTP_MASK                                  0x10
#define _CLC4CON_OUT_POSN                                   0x5
#define _CLC4CON_OUT_POSITION                               0x5
#define _CLC4CON_OUT_SIZE                                   0x1
#define _CLC4CON_OUT_LENGTH                                 0x1
#define _CLC4CON_OUT_MASK                                   0x20
#define _CLC4CON_EN_POSN                                    0x7
#define _CLC4CON_EN_POSITION                                0x7
#define _CLC4CON_EN_SIZE                                    0x1
#define _CLC4CON_EN_LENGTH                                  0x1
#define _CLC4CON_EN_MASK                                    0x80
#define _CLC4CON_MODE0_POSN                                 0x0
#define _CLC4CON_MODE0_POSITION                             0x0
#define _CLC4CON_MODE0_SIZE                                 0x1
#define _CLC4CON_MODE0_LENGTH                               0x1
#define _CLC4CON_MODE0_MASK                                 0x1
#define _CLC4CON_MODE1_POSN                                 0x1
#define _CLC4CON_MODE1_POSITION                             0x1
#define _CLC4CON_MODE1_SIZE                                 0x1
#define _CLC4CON_MODE1_LENGTH                               0x1
#define _CLC4CON_MODE1_MASK                                 0x2
#define _CLC4CON_MODE2_POSN                                 0x2
#define _CLC4CON_MODE2_POSITION                             0x2
#define _CLC4CON_MODE2_SIZE                                 0x1
#define _CLC4CON_MODE2_LENGTH                               0x1
#define _CLC4CON_MODE2_MASK                                 0x4

// Register: CLC4POL
extern volatile unsigned char           CLC4POL             @ 0xF2F;
#ifndef _LIB_BUILD
asm("CLC4POL equ 0F2Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4G1POL               :1;
        unsigned LC4G2POL               :1;
        unsigned LC4G3POL               :1;
        unsigned LC4G4POL               :1;
        unsigned                        :3;
        unsigned LC4POL                 :1;
    };
    struct {
        unsigned G1POL                  :1;
        unsigned G2POL                  :1;
        unsigned G3POL                  :1;
        unsigned G4POL                  :1;
        unsigned                        :3;
        unsigned POL                    :1;
    };
} CLC4POLbits_t;
extern volatile CLC4POLbits_t CLC4POLbits @ 0xF2F;
// bitfield macros
#define _CLC4POL_LC4G1POL_POSN                              0x0
#define _CLC4POL_LC4G1POL_POSITION                          0x0
#define _CLC4POL_LC4G1POL_SIZE                              0x1
#define _CLC4POL_LC4G1POL_LENGTH                            0x1
#define _CLC4POL_LC4G1POL_MASK                              0x1
#define _CLC4POL_LC4G2POL_POSN                              0x1
#define _CLC4POL_LC4G2POL_POSITION                          0x1
#define _CLC4POL_LC4G2POL_SIZE                              0x1
#define _CLC4POL_LC4G2POL_LENGTH                            0x1
#define _CLC4POL_LC4G2POL_MASK                              0x2
#define _CLC4POL_LC4G3POL_POSN                              0x2
#define _CLC4POL_LC4G3POL_POSITION                          0x2
#define _CLC4POL_LC4G3POL_SIZE                              0x1
#define _CLC4POL_LC4G3POL_LENGTH                            0x1
#define _CLC4POL_LC4G3POL_MASK                              0x4
#define _CLC4POL_LC4G4POL_POSN                              0x3
#define _CLC4POL_LC4G4POL_POSITION                          0x3
#define _CLC4POL_LC4G4POL_SIZE                              0x1
#define _CLC4POL_LC4G4POL_LENGTH                            0x1
#define _CLC4POL_LC4G4POL_MASK                              0x8
#define _CLC4POL_LC4POL_POSN                                0x7
#define _CLC4POL_LC4POL_POSITION                            0x7
#define _CLC4POL_LC4POL_SIZE                                0x1
#define _CLC4POL_LC4POL_LENGTH                              0x1
#define _CLC4POL_LC4POL_MASK                                0x80
#define _CLC4POL_G1POL_POSN                                 0x0
#define _CLC4POL_G1POL_POSITION                             0x0
#define _CLC4POL_G1POL_SIZE                                 0x1
#define _CLC4POL_G1POL_LENGTH                               0x1
#define _CLC4POL_G1POL_MASK                                 0x1
#define _CLC4POL_G2POL_POSN                                 0x1
#define _CLC4POL_G2POL_POSITION                             0x1
#define _CLC4POL_G2POL_SIZE                                 0x1
#define _CLC4POL_G2POL_LENGTH                               0x1
#define _CLC4POL_G2POL_MASK                                 0x2
#define _CLC4POL_G3POL_POSN                                 0x2
#define _CLC4POL_G3POL_POSITION                             0x2
#define _CLC4POL_G3POL_SIZE                                 0x1
#define _CLC4POL_G3POL_LENGTH                               0x1
#define _CLC4POL_G3POL_MASK                                 0x4
#define _CLC4POL_G4POL_POSN                                 0x3
#define _CLC4POL_G4POL_POSITION                             0x3
#define _CLC4POL_G4POL_SIZE                                 0x1
#define _CLC4POL_G4POL_LENGTH                               0x1
#define _CLC4POL_G4POL_MASK                                 0x8
#define _CLC4POL_POL_POSN                                   0x7
#define _CLC4POL_POL_POSITION                               0x7
#define _CLC4POL_POL_SIZE                                   0x1
#define _CLC4POL_POL_LENGTH                                 0x1
#define _CLC4POL_POL_MASK                                   0x80

// Register: CLC4SEL0
extern volatile unsigned char           CLC4SEL0            @ 0xF30;
#ifndef _LIB_BUILD
asm("CLC4SEL0 equ 0F30h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4D1S0                :1;
        unsigned LC4D1S1                :1;
        unsigned LC4D1S2                :1;
        unsigned LC4D1S3                :1;
        unsigned LC4D1S4                :1;
        unsigned LC4D1S5                :1;
    };
    struct {
        unsigned LC4D1S                 :8;
    };
    struct {
        unsigned D1S                    :8;
    };
    struct {
        unsigned D1S0                   :1;
        unsigned D1S1                   :1;
        unsigned D1S2                   :1;
        unsigned D1S3                   :1;
        unsigned D1S4                   :1;
        unsigned D1S5                   :1;
    };
} CLC4SEL0bits_t;
extern volatile CLC4SEL0bits_t CLC4SEL0bits @ 0xF30;
// bitfield macros
#define _CLC4SEL0_LC4D1S0_POSN                              0x0
#define _CLC4SEL0_LC4D1S0_POSITION                          0x0
#define _CLC4SEL0_LC4D1S0_SIZE                              0x1
#define _CLC4SEL0_LC4D1S0_LENGTH                            0x1
#define _CLC4SEL0_LC4D1S0_MASK                              0x1
#define _CLC4SEL0_LC4D1S1_POSN                              0x1
#define _CLC4SEL0_LC4D1S1_POSITION                          0x1
#define _CLC4SEL0_LC4D1S1_SIZE                              0x1
#define _CLC4SEL0_LC4D1S1_LENGTH                            0x1
#define _CLC4SEL0_LC4D1S1_MASK                              0x2
#define _CLC4SEL0_LC4D1S2_POSN                              0x2
#define _CLC4SEL0_LC4D1S2_POSITION                          0x2
#define _CLC4SEL0_LC4D1S2_SIZE                              0x1
#define _CLC4SEL0_LC4D1S2_LENGTH                            0x1
#define _CLC4SEL0_LC4D1S2_MASK                              0x4
#define _CLC4SEL0_LC4D1S3_POSN                              0x3
#define _CLC4SEL0_LC4D1S3_POSITION                          0x3
#define _CLC4SEL0_LC4D1S3_SIZE                              0x1
#define _CLC4SEL0_LC4D1S3_LENGTH                            0x1
#define _CLC4SEL0_LC4D1S3_MASK                              0x8
#define _CLC4SEL0_LC4D1S4_POSN                              0x4
#define _CLC4SEL0_LC4D1S4_POSITION                          0x4
#define _CLC4SEL0_LC4D1S4_SIZE                              0x1
#define _CLC4SEL0_LC4D1S4_LENGTH                            0x1
#define _CLC4SEL0_LC4D1S4_MASK                              0x10
#define _CLC4SEL0_LC4D1S5_POSN                              0x5
#define _CLC4SEL0_LC4D1S5_POSITION                          0x5
#define _CLC4SEL0_LC4D1S5_SIZE                              0x1
#define _CLC4SEL0_LC4D1S5_LENGTH                            0x1
#define _CLC4SEL0_LC4D1S5_MASK                              0x20
#define _CLC4SEL0_LC4D1S_POSN                               0x0
#define _CLC4SEL0_LC4D1S_POSITION                           0x0
#define _CLC4SEL0_LC4D1S_SIZE                               0x8
#define _CLC4SEL0_LC4D1S_LENGTH                             0x8
#define _CLC4SEL0_LC4D1S_MASK                               0xFF
#define _CLC4SEL0_D1S_POSN                                  0x0
#define _CLC4SEL0_D1S_POSITION                              0x0
#define _CLC4SEL0_D1S_SIZE                                  0x8
#define _CLC4SEL0_D1S_LENGTH                                0x8
#define _CLC4SEL0_D1S_MASK                                  0xFF
#define _CLC4SEL0_D1S0_POSN                                 0x0
#define _CLC4SEL0_D1S0_POSITION                             0x0
#define _CLC4SEL0_D1S0_SIZE                                 0x1
#define _CLC4SEL0_D1S0_LENGTH                               0x1
#define _CLC4SEL0_D1S0_MASK                                 0x1
#define _CLC4SEL0_D1S1_POSN                                 0x1
#define _CLC4SEL0_D1S1_POSITION                             0x1
#define _CLC4SEL0_D1S1_SIZE                                 0x1
#define _CLC4SEL0_D1S1_LENGTH                               0x1
#define _CLC4SEL0_D1S1_MASK                                 0x2
#define _CLC4SEL0_D1S2_POSN                                 0x2
#define _CLC4SEL0_D1S2_POSITION                             0x2
#define _CLC4SEL0_D1S2_SIZE                                 0x1
#define _CLC4SEL0_D1S2_LENGTH                               0x1
#define _CLC4SEL0_D1S2_MASK                                 0x4
#define _CLC4SEL0_D1S3_POSN                                 0x3
#define _CLC4SEL0_D1S3_POSITION                             0x3
#define _CLC4SEL0_D1S3_SIZE                                 0x1
#define _CLC4SEL0_D1S3_LENGTH                               0x1
#define _CLC4SEL0_D1S3_MASK                                 0x8
#define _CLC4SEL0_D1S4_POSN                                 0x4
#define _CLC4SEL0_D1S4_POSITION                             0x4
#define _CLC4SEL0_D1S4_SIZE                                 0x1
#define _CLC4SEL0_D1S4_LENGTH                               0x1
#define _CLC4SEL0_D1S4_MASK                                 0x10
#define _CLC4SEL0_D1S5_POSN                                 0x5
#define _CLC4SEL0_D1S5_POSITION                             0x5
#define _CLC4SEL0_D1S5_SIZE                                 0x1
#define _CLC4SEL0_D1S5_LENGTH                               0x1
#define _CLC4SEL0_D1S5_MASK                                 0x20

// Register: CLC4SEL1
extern volatile unsigned char           CLC4SEL1            @ 0xF31;
#ifndef _LIB_BUILD
asm("CLC4SEL1 equ 0F31h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4D2S0                :1;
        unsigned LC4D2S1                :1;
        unsigned LC4D2S2                :1;
        unsigned LC4D2S3                :1;
        unsigned LC4D2S4                :1;
        unsigned LC4D2S5                :1;
    };
    struct {
        unsigned LC4D2S                 :8;
    };
    struct {
        unsigned D2S                    :8;
    };
    struct {
        unsigned D2S0                   :1;
        unsigned D2S1                   :1;
        unsigned D2S2                   :1;
        unsigned D2S3                   :1;
        unsigned D2S4                   :1;
        unsigned D2S5                   :1;
    };
} CLC4SEL1bits_t;
extern volatile CLC4SEL1bits_t CLC4SEL1bits @ 0xF31;
// bitfield macros
#define _CLC4SEL1_LC4D2S0_POSN                              0x0
#define _CLC4SEL1_LC4D2S0_POSITION                          0x0
#define _CLC4SEL1_LC4D2S0_SIZE                              0x1
#define _CLC4SEL1_LC4D2S0_LENGTH                            0x1
#define _CLC4SEL1_LC4D2S0_MASK                              0x1
#define _CLC4SEL1_LC4D2S1_POSN                              0x1
#define _CLC4SEL1_LC4D2S1_POSITION                          0x1
#define _CLC4SEL1_LC4D2S1_SIZE                              0x1
#define _CLC4SEL1_LC4D2S1_LENGTH                            0x1
#define _CLC4SEL1_LC4D2S1_MASK                              0x2
#define _CLC4SEL1_LC4D2S2_POSN                              0x2
#define _CLC4SEL1_LC4D2S2_POSITION                          0x2
#define _CLC4SEL1_LC4D2S2_SIZE                              0x1
#define _CLC4SEL1_LC4D2S2_LENGTH                            0x1
#define _CLC4SEL1_LC4D2S2_MASK                              0x4
#define _CLC4SEL1_LC4D2S3_POSN                              0x3
#define _CLC4SEL1_LC4D2S3_POSITION                          0x3
#define _CLC4SEL1_LC4D2S3_SIZE                              0x1
#define _CLC4SEL1_LC4D2S3_LENGTH                            0x1
#define _CLC4SEL1_LC4D2S3_MASK                              0x8
#define _CLC4SEL1_LC4D2S4_POSN                              0x4
#define _CLC4SEL1_LC4D2S4_POSITION                          0x4
#define _CLC4SEL1_LC4D2S4_SIZE                              0x1
#define _CLC4SEL1_LC4D2S4_LENGTH                            0x1
#define _CLC4SEL1_LC4D2S4_MASK                              0x10
#define _CLC4SEL1_LC4D2S5_POSN                              0x5
#define _CLC4SEL1_LC4D2S5_POSITION                          0x5
#define _CLC4SEL1_LC4D2S5_SIZE                              0x1
#define _CLC4SEL1_LC4D2S5_LENGTH                            0x1
#define _CLC4SEL1_LC4D2S5_MASK                              0x20
#define _CLC4SEL1_LC4D2S_POSN                               0x0
#define _CLC4SEL1_LC4D2S_POSITION                           0x0
#define _CLC4SEL1_LC4D2S_SIZE                               0x8
#define _CLC4SEL1_LC4D2S_LENGTH                             0x8
#define _CLC4SEL1_LC4D2S_MASK                               0xFF
#define _CLC4SEL1_D2S_POSN                                  0x0
#define _CLC4SEL1_D2S_POSITION                              0x0
#define _CLC4SEL1_D2S_SIZE                                  0x8
#define _CLC4SEL1_D2S_LENGTH                                0x8
#define _CLC4SEL1_D2S_MASK                                  0xFF
#define _CLC4SEL1_D2S0_POSN                                 0x0
#define _CLC4SEL1_D2S0_POSITION                             0x0
#define _CLC4SEL1_D2S0_SIZE                                 0x1
#define _CLC4SEL1_D2S0_LENGTH                               0x1
#define _CLC4SEL1_D2S0_MASK                                 0x1
#define _CLC4SEL1_D2S1_POSN                                 0x1
#define _CLC4SEL1_D2S1_POSITION                             0x1
#define _CLC4SEL1_D2S1_SIZE                                 0x1
#define _CLC4SEL1_D2S1_LENGTH                               0x1
#define _CLC4SEL1_D2S1_MASK                                 0x2
#define _CLC4SEL1_D2S2_POSN                                 0x2
#define _CLC4SEL1_D2S2_POSITION                             0x2
#define _CLC4SEL1_D2S2_SIZE                                 0x1
#define _CLC4SEL1_D2S2_LENGTH                               0x1
#define _CLC4SEL1_D2S2_MASK                                 0x4
#define _CLC4SEL1_D2S3_POSN                                 0x3
#define _CLC4SEL1_D2S3_POSITION                             0x3
#define _CLC4SEL1_D2S3_SIZE                                 0x1
#define _CLC4SEL1_D2S3_LENGTH                               0x1
#define _CLC4SEL1_D2S3_MASK                                 0x8
#define _CLC4SEL1_D2S4_POSN                                 0x4
#define _CLC4SEL1_D2S4_POSITION                             0x4
#define _CLC4SEL1_D2S4_SIZE                                 0x1
#define _CLC4SEL1_D2S4_LENGTH                               0x1
#define _CLC4SEL1_D2S4_MASK                                 0x10
#define _CLC4SEL1_D2S5_POSN                                 0x5
#define _CLC4SEL1_D2S5_POSITION                             0x5
#define _CLC4SEL1_D2S5_SIZE                                 0x1
#define _CLC4SEL1_D2S5_LENGTH                               0x1
#define _CLC4SEL1_D2S5_MASK                                 0x20

// Register: CLC4SEL2
extern volatile unsigned char           CLC4SEL2            @ 0xF32;
#ifndef _LIB_BUILD
asm("CLC4SEL2 equ 0F32h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4D3S0                :1;
        unsigned LC4D3S1                :1;
        unsigned LC4D3S2                :1;
        unsigned LC4D3S3                :1;
        unsigned LC4D3S4                :1;
        unsigned LC4D3S5                :1;
    };
    struct {
        unsigned LC4D3S                 :8;
    };
    struct {
        unsigned D3S                    :8;
    };
    struct {
        unsigned D3S0                   :1;
        unsigned D3S1                   :1;
        unsigned D3S2                   :1;
        unsigned D3S3                   :1;
        unsigned D3S4                   :1;
        unsigned D3S5                   :1;
    };
} CLC4SEL2bits_t;
extern volatile CLC4SEL2bits_t CLC4SEL2bits @ 0xF32;
// bitfield macros
#define _CLC4SEL2_LC4D3S0_POSN                              0x0
#define _CLC4SEL2_LC4D3S0_POSITION                          0x0
#define _CLC4SEL2_LC4D3S0_SIZE                              0x1
#define _CLC4SEL2_LC4D3S0_LENGTH                            0x1
#define _CLC4SEL2_LC4D3S0_MASK                              0x1
#define _CLC4SEL2_LC4D3S1_POSN                              0x1
#define _CLC4SEL2_LC4D3S1_POSITION                          0x1
#define _CLC4SEL2_LC4D3S1_SIZE                              0x1
#define _CLC4SEL2_LC4D3S1_LENGTH                            0x1
#define _CLC4SEL2_LC4D3S1_MASK                              0x2
#define _CLC4SEL2_LC4D3S2_POSN                              0x2
#define _CLC4SEL2_LC4D3S2_POSITION                          0x2
#define _CLC4SEL2_LC4D3S2_SIZE                              0x1
#define _CLC4SEL2_LC4D3S2_LENGTH                            0x1
#define _CLC4SEL2_LC4D3S2_MASK                              0x4
#define _CLC4SEL2_LC4D3S3_POSN                              0x3
#define _CLC4SEL2_LC4D3S3_POSITION                          0x3
#define _CLC4SEL2_LC4D3S3_SIZE                              0x1
#define _CLC4SEL2_LC4D3S3_LENGTH                            0x1
#define _CLC4SEL2_LC4D3S3_MASK                              0x8
#define _CLC4SEL2_LC4D3S4_POSN                              0x4
#define _CLC4SEL2_LC4D3S4_POSITION                          0x4
#define _CLC4SEL2_LC4D3S4_SIZE                              0x1
#define _CLC4SEL2_LC4D3S4_LENGTH                            0x1
#define _CLC4SEL2_LC4D3S4_MASK                              0x10
#define _CLC4SEL2_LC4D3S5_POSN                              0x5
#define _CLC4SEL2_LC4D3S5_POSITION                          0x5
#define _CLC4SEL2_LC4D3S5_SIZE                              0x1
#define _CLC4SEL2_LC4D3S5_LENGTH                            0x1
#define _CLC4SEL2_LC4D3S5_MASK                              0x20
#define _CLC4SEL2_LC4D3S_POSN                               0x0
#define _CLC4SEL2_LC4D3S_POSITION                           0x0
#define _CLC4SEL2_LC4D3S_SIZE                               0x8
#define _CLC4SEL2_LC4D3S_LENGTH                             0x8
#define _CLC4SEL2_LC4D3S_MASK                               0xFF
#define _CLC4SEL2_D3S_POSN                                  0x0
#define _CLC4SEL2_D3S_POSITION                              0x0
#define _CLC4SEL2_D3S_SIZE                                  0x8
#define _CLC4SEL2_D3S_LENGTH                                0x8
#define _CLC4SEL2_D3S_MASK                                  0xFF
#define _CLC4SEL2_D3S0_POSN                                 0x0
#define _CLC4SEL2_D3S0_POSITION                             0x0
#define _CLC4SEL2_D3S0_SIZE                                 0x1
#define _CLC4SEL2_D3S0_LENGTH                               0x1
#define _CLC4SEL2_D3S0_MASK                                 0x1
#define _CLC4SEL2_D3S1_POSN                                 0x1
#define _CLC4SEL2_D3S1_POSITION                             0x1
#define _CLC4SEL2_D3S1_SIZE                                 0x1
#define _CLC4SEL2_D3S1_LENGTH                               0x1
#define _CLC4SEL2_D3S1_MASK                                 0x2
#define _CLC4SEL2_D3S2_POSN                                 0x2
#define _CLC4SEL2_D3S2_POSITION                             0x2
#define _CLC4SEL2_D3S2_SIZE                                 0x1
#define _CLC4SEL2_D3S2_LENGTH                               0x1
#define _CLC4SEL2_D3S2_MASK                                 0x4
#define _CLC4SEL2_D3S3_POSN                                 0x3
#define _CLC4SEL2_D3S3_POSITION                             0x3
#define _CLC4SEL2_D3S3_SIZE                                 0x1
#define _CLC4SEL2_D3S3_LENGTH                               0x1
#define _CLC4SEL2_D3S3_MASK                                 0x8
#define _CLC4SEL2_D3S4_POSN                                 0x4
#define _CLC4SEL2_D3S4_POSITION                             0x4
#define _CLC4SEL2_D3S4_SIZE                                 0x1
#define _CLC4SEL2_D3S4_LENGTH                               0x1
#define _CLC4SEL2_D3S4_MASK                                 0x10
#define _CLC4SEL2_D3S5_POSN                                 0x5
#define _CLC4SEL2_D3S5_POSITION                             0x5
#define _CLC4SEL2_D3S5_SIZE                                 0x1
#define _CLC4SEL2_D3S5_LENGTH                               0x1
#define _CLC4SEL2_D3S5_MASK                                 0x20

// Register: CLC4SEL3
extern volatile unsigned char           CLC4SEL3            @ 0xF33;
#ifndef _LIB_BUILD
asm("CLC4SEL3 equ 0F33h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4D4S0                :1;
        unsigned LC4D4S1                :1;
        unsigned LC4D4S2                :1;
        unsigned LC4D4S3                :1;
        unsigned LC4D4S4                :1;
        unsigned LC4D4S5                :1;
    };
    struct {
        unsigned LC4D4S                 :8;
    };
    struct {
        unsigned D4S                    :8;
    };
    struct {
        unsigned D4S0                   :1;
        unsigned D4S1                   :1;
        unsigned D4S2                   :1;
        unsigned D4S3                   :1;
        unsigned D4S4                   :1;
        unsigned D4S5                   :1;
    };
} CLC4SEL3bits_t;
extern volatile CLC4SEL3bits_t CLC4SEL3bits @ 0xF33;
// bitfield macros
#define _CLC4SEL3_LC4D4S0_POSN                              0x0
#define _CLC4SEL3_LC4D4S0_POSITION                          0x0
#define _CLC4SEL3_LC4D4S0_SIZE                              0x1
#define _CLC4SEL3_LC4D4S0_LENGTH                            0x1
#define _CLC4SEL3_LC4D4S0_MASK                              0x1
#define _CLC4SEL3_LC4D4S1_POSN                              0x1
#define _CLC4SEL3_LC4D4S1_POSITION                          0x1
#define _CLC4SEL3_LC4D4S1_SIZE                              0x1
#define _CLC4SEL3_LC4D4S1_LENGTH                            0x1
#define _CLC4SEL3_LC4D4S1_MASK                              0x2
#define _CLC4SEL3_LC4D4S2_POSN                              0x2
#define _CLC4SEL3_LC4D4S2_POSITION                          0x2
#define _CLC4SEL3_LC4D4S2_SIZE                              0x1
#define _CLC4SEL3_LC4D4S2_LENGTH                            0x1
#define _CLC4SEL3_LC4D4S2_MASK                              0x4
#define _CLC4SEL3_LC4D4S3_POSN                              0x3
#define _CLC4SEL3_LC4D4S3_POSITION                          0x3
#define _CLC4SEL3_LC4D4S3_SIZE                              0x1
#define _CLC4SEL3_LC4D4S3_LENGTH                            0x1
#define _CLC4SEL3_LC4D4S3_MASK                              0x8
#define _CLC4SEL3_LC4D4S4_POSN                              0x4
#define _CLC4SEL3_LC4D4S4_POSITION                          0x4
#define _CLC4SEL3_LC4D4S4_SIZE                              0x1
#define _CLC4SEL3_LC4D4S4_LENGTH                            0x1
#define _CLC4SEL3_LC4D4S4_MASK                              0x10
#define _CLC4SEL3_LC4D4S5_POSN                              0x5
#define _CLC4SEL3_LC4D4S5_POSITION                          0x5
#define _CLC4SEL3_LC4D4S5_SIZE                              0x1
#define _CLC4SEL3_LC4D4S5_LENGTH                            0x1
#define _CLC4SEL3_LC4D4S5_MASK                              0x20
#define _CLC4SEL3_LC4D4S_POSN                               0x0
#define _CLC4SEL3_LC4D4S_POSITION                           0x0
#define _CLC4SEL3_LC4D4S_SIZE                               0x8
#define _CLC4SEL3_LC4D4S_LENGTH                             0x8
#define _CLC4SEL3_LC4D4S_MASK                               0xFF
#define _CLC4SEL3_D4S_POSN                                  0x0
#define _CLC4SEL3_D4S_POSITION                              0x0
#define _CLC4SEL3_D4S_SIZE                                  0x8
#define _CLC4SEL3_D4S_LENGTH                                0x8
#define _CLC4SEL3_D4S_MASK                                  0xFF
#define _CLC4SEL3_D4S0_POSN                                 0x0
#define _CLC4SEL3_D4S0_POSITION                             0x0
#define _CLC4SEL3_D4S0_SIZE                                 0x1
#define _CLC4SEL3_D4S0_LENGTH                               0x1
#define _CLC4SEL3_D4S0_MASK                                 0x1
#define _CLC4SEL3_D4S1_POSN                                 0x1
#define _CLC4SEL3_D4S1_POSITION                             0x1
#define _CLC4SEL3_D4S1_SIZE                                 0x1
#define _CLC4SEL3_D4S1_LENGTH                               0x1
#define _CLC4SEL3_D4S1_MASK                                 0x2
#define _CLC4SEL3_D4S2_POSN                                 0x2
#define _CLC4SEL3_D4S2_POSITION                             0x2
#define _CLC4SEL3_D4S2_SIZE                                 0x1
#define _CLC4SEL3_D4S2_LENGTH                               0x1
#define _CLC4SEL3_D4S2_MASK                                 0x4
#define _CLC4SEL3_D4S3_POSN                                 0x3
#define _CLC4SEL3_D4S3_POSITION                             0x3
#define _CLC4SEL3_D4S3_SIZE                                 0x1
#define _CLC4SEL3_D4S3_LENGTH                               0x1
#define _CLC4SEL3_D4S3_MASK                                 0x8
#define _CLC4SEL3_D4S4_POSN                                 0x4
#define _CLC4SEL3_D4S4_POSITION                             0x4
#define _CLC4SEL3_D4S4_SIZE                                 0x1
#define _CLC4SEL3_D4S4_LENGTH                               0x1
#define _CLC4SEL3_D4S4_MASK                                 0x10
#define _CLC4SEL3_D4S5_POSN                                 0x5
#define _CLC4SEL3_D4S5_POSITION                             0x5
#define _CLC4SEL3_D4S5_SIZE                                 0x1
#define _CLC4SEL3_D4S5_LENGTH                               0x1
#define _CLC4SEL3_D4S5_MASK                                 0x20

// Register: CLC4GLS0
extern volatile unsigned char           CLC4GLS0            @ 0xF34;
#ifndef _LIB_BUILD
asm("CLC4GLS0 equ 0F34h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4G1D1N               :1;
        unsigned LC4G1D1T               :1;
        unsigned LC4G1D2N               :1;
        unsigned LC4G1D2T               :1;
        unsigned LC4G1D3N               :1;
        unsigned LC4G1D3T               :1;
        unsigned LC4G1D4N               :1;
        unsigned LC4G1D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC4GLS0bits_t;
extern volatile CLC4GLS0bits_t CLC4GLS0bits @ 0xF34;
// bitfield macros
#define _CLC4GLS0_LC4G1D1N_POSN                             0x0
#define _CLC4GLS0_LC4G1D1N_POSITION                         0x0
#define _CLC4GLS0_LC4G1D1N_SIZE                             0x1
#define _CLC4GLS0_LC4G1D1N_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D1N_MASK                             0x1
#define _CLC4GLS0_LC4G1D1T_POSN                             0x1
#define _CLC4GLS0_LC4G1D1T_POSITION                         0x1
#define _CLC4GLS0_LC4G1D1T_SIZE                             0x1
#define _CLC4GLS0_LC4G1D1T_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D1T_MASK                             0x2
#define _CLC4GLS0_LC4G1D2N_POSN                             0x2
#define _CLC4GLS0_LC4G1D2N_POSITION                         0x2
#define _CLC4GLS0_LC4G1D2N_SIZE                             0x1
#define _CLC4GLS0_LC4G1D2N_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D2N_MASK                             0x4
#define _CLC4GLS0_LC4G1D2T_POSN                             0x3
#define _CLC4GLS0_LC4G1D2T_POSITION                         0x3
#define _CLC4GLS0_LC4G1D2T_SIZE                             0x1
#define _CLC4GLS0_LC4G1D2T_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D2T_MASK                             0x8
#define _CLC4GLS0_LC4G1D3N_POSN                             0x4
#define _CLC4GLS0_LC4G1D3N_POSITION                         0x4
#define _CLC4GLS0_LC4G1D3N_SIZE                             0x1
#define _CLC4GLS0_LC4G1D3N_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D3N_MASK                             0x10
#define _CLC4GLS0_LC4G1D3T_POSN                             0x5
#define _CLC4GLS0_LC4G1D3T_POSITION                         0x5
#define _CLC4GLS0_LC4G1D3T_SIZE                             0x1
#define _CLC4GLS0_LC4G1D3T_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D3T_MASK                             0x20
#define _CLC4GLS0_LC4G1D4N_POSN                             0x6
#define _CLC4GLS0_LC4G1D4N_POSITION                         0x6
#define _CLC4GLS0_LC4G1D4N_SIZE                             0x1
#define _CLC4GLS0_LC4G1D4N_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D4N_MASK                             0x40
#define _CLC4GLS0_LC4G1D4T_POSN                             0x7
#define _CLC4GLS0_LC4G1D4T_POSITION                         0x7
#define _CLC4GLS0_LC4G1D4T_SIZE                             0x1
#define _CLC4GLS0_LC4G1D4T_LENGTH                           0x1
#define _CLC4GLS0_LC4G1D4T_MASK                             0x80
#define _CLC4GLS0_D1N_POSN                                  0x0
#define _CLC4GLS0_D1N_POSITION                              0x0
#define _CLC4GLS0_D1N_SIZE                                  0x1
#define _CLC4GLS0_D1N_LENGTH                                0x1
#define _CLC4GLS0_D1N_MASK                                  0x1
#define _CLC4GLS0_D1T_POSN                                  0x1
#define _CLC4GLS0_D1T_POSITION                              0x1
#define _CLC4GLS0_D1T_SIZE                                  0x1
#define _CLC4GLS0_D1T_LENGTH                                0x1
#define _CLC4GLS0_D1T_MASK                                  0x2
#define _CLC4GLS0_D2N_POSN                                  0x2
#define _CLC4GLS0_D2N_POSITION                              0x2
#define _CLC4GLS0_D2N_SIZE                                  0x1
#define _CLC4GLS0_D2N_LENGTH                                0x1
#define _CLC4GLS0_D2N_MASK                                  0x4
#define _CLC4GLS0_D2T_POSN                                  0x3
#define _CLC4GLS0_D2T_POSITION                              0x3
#define _CLC4GLS0_D2T_SIZE                                  0x1
#define _CLC4GLS0_D2T_LENGTH                                0x1
#define _CLC4GLS0_D2T_MASK                                  0x8
#define _CLC4GLS0_D3N_POSN                                  0x4
#define _CLC4GLS0_D3N_POSITION                              0x4
#define _CLC4GLS0_D3N_SIZE                                  0x1
#define _CLC4GLS0_D3N_LENGTH                                0x1
#define _CLC4GLS0_D3N_MASK                                  0x10
#define _CLC4GLS0_D3T_POSN                                  0x5
#define _CLC4GLS0_D3T_POSITION                              0x5
#define _CLC4GLS0_D3T_SIZE                                  0x1
#define _CLC4GLS0_D3T_LENGTH                                0x1
#define _CLC4GLS0_D3T_MASK                                  0x20
#define _CLC4GLS0_D4N_POSN                                  0x6
#define _CLC4GLS0_D4N_POSITION                              0x6
#define _CLC4GLS0_D4N_SIZE                                  0x1
#define _CLC4GLS0_D4N_LENGTH                                0x1
#define _CLC4GLS0_D4N_MASK                                  0x40
#define _CLC4GLS0_D4T_POSN                                  0x7
#define _CLC4GLS0_D4T_POSITION                              0x7
#define _CLC4GLS0_D4T_SIZE                                  0x1
#define _CLC4GLS0_D4T_LENGTH                                0x1
#define _CLC4GLS0_D4T_MASK                                  0x80

// Register: CLC4GLS1
extern volatile unsigned char           CLC4GLS1            @ 0xF35;
#ifndef _LIB_BUILD
asm("CLC4GLS1 equ 0F35h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4G2D1N               :1;
        unsigned LC4G2D1T               :1;
        unsigned LC4G2D2N               :1;
        unsigned LC4G2D2T               :1;
        unsigned LC4G2D3N               :1;
        unsigned LC4G2D3T               :1;
        unsigned LC4G2D4N               :1;
        unsigned LC4G2D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC4GLS1bits_t;
extern volatile CLC4GLS1bits_t CLC4GLS1bits @ 0xF35;
// bitfield macros
#define _CLC4GLS1_LC4G2D1N_POSN                             0x0
#define _CLC4GLS1_LC4G2D1N_POSITION                         0x0
#define _CLC4GLS1_LC4G2D1N_SIZE                             0x1
#define _CLC4GLS1_LC4G2D1N_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D1N_MASK                             0x1
#define _CLC4GLS1_LC4G2D1T_POSN                             0x1
#define _CLC4GLS1_LC4G2D1T_POSITION                         0x1
#define _CLC4GLS1_LC4G2D1T_SIZE                             0x1
#define _CLC4GLS1_LC4G2D1T_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D1T_MASK                             0x2
#define _CLC4GLS1_LC4G2D2N_POSN                             0x2
#define _CLC4GLS1_LC4G2D2N_POSITION                         0x2
#define _CLC4GLS1_LC4G2D2N_SIZE                             0x1
#define _CLC4GLS1_LC4G2D2N_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D2N_MASK                             0x4
#define _CLC4GLS1_LC4G2D2T_POSN                             0x3
#define _CLC4GLS1_LC4G2D2T_POSITION                         0x3
#define _CLC4GLS1_LC4G2D2T_SIZE                             0x1
#define _CLC4GLS1_LC4G2D2T_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D2T_MASK                             0x8
#define _CLC4GLS1_LC4G2D3N_POSN                             0x4
#define _CLC4GLS1_LC4G2D3N_POSITION                         0x4
#define _CLC4GLS1_LC4G2D3N_SIZE                             0x1
#define _CLC4GLS1_LC4G2D3N_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D3N_MASK                             0x10
#define _CLC4GLS1_LC4G2D3T_POSN                             0x5
#define _CLC4GLS1_LC4G2D3T_POSITION                         0x5
#define _CLC4GLS1_LC4G2D3T_SIZE                             0x1
#define _CLC4GLS1_LC4G2D3T_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D3T_MASK                             0x20
#define _CLC4GLS1_LC4G2D4N_POSN                             0x6
#define _CLC4GLS1_LC4G2D4N_POSITION                         0x6
#define _CLC4GLS1_LC4G2D4N_SIZE                             0x1
#define _CLC4GLS1_LC4G2D4N_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D4N_MASK                             0x40
#define _CLC4GLS1_LC4G2D4T_POSN                             0x7
#define _CLC4GLS1_LC4G2D4T_POSITION                         0x7
#define _CLC4GLS1_LC4G2D4T_SIZE                             0x1
#define _CLC4GLS1_LC4G2D4T_LENGTH                           0x1
#define _CLC4GLS1_LC4G2D4T_MASK                             0x80
#define _CLC4GLS1_D1N_POSN                                  0x0
#define _CLC4GLS1_D1N_POSITION                              0x0
#define _CLC4GLS1_D1N_SIZE                                  0x1
#define _CLC4GLS1_D1N_LENGTH                                0x1
#define _CLC4GLS1_D1N_MASK                                  0x1
#define _CLC4GLS1_D1T_POSN                                  0x1
#define _CLC4GLS1_D1T_POSITION                              0x1
#define _CLC4GLS1_D1T_SIZE                                  0x1
#define _CLC4GLS1_D1T_LENGTH                                0x1
#define _CLC4GLS1_D1T_MASK                                  0x2
#define _CLC4GLS1_D2N_POSN                                  0x2
#define _CLC4GLS1_D2N_POSITION                              0x2
#define _CLC4GLS1_D2N_SIZE                                  0x1
#define _CLC4GLS1_D2N_LENGTH                                0x1
#define _CLC4GLS1_D2N_MASK                                  0x4
#define _CLC4GLS1_D2T_POSN                                  0x3
#define _CLC4GLS1_D2T_POSITION                              0x3
#define _CLC4GLS1_D2T_SIZE                                  0x1
#define _CLC4GLS1_D2T_LENGTH                                0x1
#define _CLC4GLS1_D2T_MASK                                  0x8
#define _CLC4GLS1_D3N_POSN                                  0x4
#define _CLC4GLS1_D3N_POSITION                              0x4
#define _CLC4GLS1_D3N_SIZE                                  0x1
#define _CLC4GLS1_D3N_LENGTH                                0x1
#define _CLC4GLS1_D3N_MASK                                  0x10
#define _CLC4GLS1_D3T_POSN                                  0x5
#define _CLC4GLS1_D3T_POSITION                              0x5
#define _CLC4GLS1_D3T_SIZE                                  0x1
#define _CLC4GLS1_D3T_LENGTH                                0x1
#define _CLC4GLS1_D3T_MASK                                  0x20
#define _CLC4GLS1_D4N_POSN                                  0x6
#define _CLC4GLS1_D4N_POSITION                              0x6
#define _CLC4GLS1_D4N_SIZE                                  0x1
#define _CLC4GLS1_D4N_LENGTH                                0x1
#define _CLC4GLS1_D4N_MASK                                  0x40
#define _CLC4GLS1_D4T_POSN                                  0x7
#define _CLC4GLS1_D4T_POSITION                              0x7
#define _CLC4GLS1_D4T_SIZE                                  0x1
#define _CLC4GLS1_D4T_LENGTH                                0x1
#define _CLC4GLS1_D4T_MASK                                  0x80

// Register: CLC4GLS2
extern volatile unsigned char           CLC4GLS2            @ 0xF36;
#ifndef _LIB_BUILD
asm("CLC4GLS2 equ 0F36h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4G3D1N               :1;
        unsigned LC4G3D1T               :1;
        unsigned LC4G3D2N               :1;
        unsigned LC4G3D2T               :1;
        unsigned LC4G3D3N               :1;
        unsigned LC4G3D3T               :1;
        unsigned LC4G3D4N               :1;
        unsigned LC4G3D4T               :1;
    };
    struct {
        unsigned D1N                    :1;
        unsigned D1T                    :1;
        unsigned D2N                    :1;
        unsigned D2T                    :1;
        unsigned D3N                    :1;
        unsigned D3T                    :1;
        unsigned D4N                    :1;
        unsigned D4T                    :1;
    };
} CLC4GLS2bits_t;
extern volatile CLC4GLS2bits_t CLC4GLS2bits @ 0xF36;
// bitfield macros
#define _CLC4GLS2_LC4G3D1N_POSN                             0x0
#define _CLC4GLS2_LC4G3D1N_POSITION                         0x0
#define _CLC4GLS2_LC4G3D1N_SIZE                             0x1
#define _CLC4GLS2_LC4G3D1N_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D1N_MASK                             0x1
#define _CLC4GLS2_LC4G3D1T_POSN                             0x1
#define _CLC4GLS2_LC4G3D1T_POSITION                         0x1
#define _CLC4GLS2_LC4G3D1T_SIZE                             0x1
#define _CLC4GLS2_LC4G3D1T_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D1T_MASK                             0x2
#define _CLC4GLS2_LC4G3D2N_POSN                             0x2
#define _CLC4GLS2_LC4G3D2N_POSITION                         0x2
#define _CLC4GLS2_LC4G3D2N_SIZE                             0x1
#define _CLC4GLS2_LC4G3D2N_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D2N_MASK                             0x4
#define _CLC4GLS2_LC4G3D2T_POSN                             0x3
#define _CLC4GLS2_LC4G3D2T_POSITION                         0x3
#define _CLC4GLS2_LC4G3D2T_SIZE                             0x1
#define _CLC4GLS2_LC4G3D2T_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D2T_MASK                             0x8
#define _CLC4GLS2_LC4G3D3N_POSN                             0x4
#define _CLC4GLS2_LC4G3D3N_POSITION                         0x4
#define _CLC4GLS2_LC4G3D3N_SIZE                             0x1
#define _CLC4GLS2_LC4G3D3N_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D3N_MASK                             0x10
#define _CLC4GLS2_LC4G3D3T_POSN                             0x5
#define _CLC4GLS2_LC4G3D3T_POSITION                         0x5
#define _CLC4GLS2_LC4G3D3T_SIZE                             0x1
#define _CLC4GLS2_LC4G3D3T_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D3T_MASK                             0x20
#define _CLC4GLS2_LC4G3D4N_POSN                             0x6
#define _CLC4GLS2_LC4G3D4N_POSITION                         0x6
#define _CLC4GLS2_LC4G3D4N_SIZE                             0x1
#define _CLC4GLS2_LC4G3D4N_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D4N_MASK                             0x40
#define _CLC4GLS2_LC4G3D4T_POSN                             0x7
#define _CLC4GLS2_LC4G3D4T_POSITION                         0x7
#define _CLC4GLS2_LC4G3D4T_SIZE                             0x1
#define _CLC4GLS2_LC4G3D4T_LENGTH                           0x1
#define _CLC4GLS2_LC4G3D4T_MASK                             0x80
#define _CLC4GLS2_D1N_POSN                                  0x0
#define _CLC4GLS2_D1N_POSITION                              0x0
#define _CLC4GLS2_D1N_SIZE                                  0x1
#define _CLC4GLS2_D1N_LENGTH                                0x1
#define _CLC4GLS2_D1N_MASK                                  0x1
#define _CLC4GLS2_D1T_POSN                                  0x1
#define _CLC4GLS2_D1T_POSITION                              0x1
#define _CLC4GLS2_D1T_SIZE                                  0x1
#define _CLC4GLS2_D1T_LENGTH                                0x1
#define _CLC4GLS2_D1T_MASK                                  0x2
#define _CLC4GLS2_D2N_POSN                                  0x2
#define _CLC4GLS2_D2N_POSITION                              0x2
#define _CLC4GLS2_D2N_SIZE                                  0x1
#define _CLC4GLS2_D2N_LENGTH                                0x1
#define _CLC4GLS2_D2N_MASK                                  0x4
#define _CLC4GLS2_D2T_POSN                                  0x3
#define _CLC4GLS2_D2T_POSITION                              0x3
#define _CLC4GLS2_D2T_SIZE                                  0x1
#define _CLC4GLS2_D2T_LENGTH                                0x1
#define _CLC4GLS2_D2T_MASK                                  0x8
#define _CLC4GLS2_D3N_POSN                                  0x4
#define _CLC4GLS2_D3N_POSITION                              0x4
#define _CLC4GLS2_D3N_SIZE                                  0x1
#define _CLC4GLS2_D3N_LENGTH                                0x1
#define _CLC4GLS2_D3N_MASK                                  0x10
#define _CLC4GLS2_D3T_POSN                                  0x5
#define _CLC4GLS2_D3T_POSITION                              0x5
#define _CLC4GLS2_D3T_SIZE                                  0x1
#define _CLC4GLS2_D3T_LENGTH                                0x1
#define _CLC4GLS2_D3T_MASK                                  0x20
#define _CLC4GLS2_D4N_POSN                                  0x6
#define _CLC4GLS2_D4N_POSITION                              0x6
#define _CLC4GLS2_D4N_SIZE                                  0x1
#define _CLC4GLS2_D4N_LENGTH                                0x1
#define _CLC4GLS2_D4N_MASK                                  0x40
#define _CLC4GLS2_D4T_POSN                                  0x7
#define _CLC4GLS2_D4T_POSITION                              0x7
#define _CLC4GLS2_D4T_SIZE                                  0x1
#define _CLC4GLS2_D4T_LENGTH                                0x1
#define _CLC4GLS2_D4T_MASK                                  0x80

// Register: CLC4GLS3
extern volatile unsigned char           CLC4GLS3            @ 0xF37;
#ifndef _LIB_BUILD
asm("CLC4GLS3 equ 0F37h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LC4G4D1N               :1;
        unsigned LC4G4D1T               :1;
        unsigned LC4G4D2N               :1;
        unsigned LC4G4D2T               :1;
        unsigned LC4G4D3N               :1;
        unsigned LC4G4D3T               :1;
        unsigned LC4G4D4N               :1;
        unsigned LC4G4D4T               :1;
    };
    struct {
        unsigned G4D1N                  :1;
        unsigned G4D1T                  :1;
        unsigned G4D2N                  :1;
        unsigned G4D2T                  :1;
        unsigned G4D3N                  :1;
        unsigned G4D3T                  :1;
        unsigned G4D4N                  :1;
        unsigned G4D4T                  :1;
    };
} CLC4GLS3bits_t;
extern volatile CLC4GLS3bits_t CLC4GLS3bits @ 0xF37;
// bitfield macros
#define _CLC4GLS3_LC4G4D1N_POSN                             0x0
#define _CLC4GLS3_LC4G4D1N_POSITION                         0x0
#define _CLC4GLS3_LC4G4D1N_SIZE                             0x1
#define _CLC4GLS3_LC4G4D1N_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D1N_MASK                             0x1
#define _CLC4GLS3_LC4G4D1T_POSN                             0x1
#define _CLC4GLS3_LC4G4D1T_POSITION                         0x1
#define _CLC4GLS3_LC4G4D1T_SIZE                             0x1
#define _CLC4GLS3_LC4G4D1T_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D1T_MASK                             0x2
#define _CLC4GLS3_LC4G4D2N_POSN                             0x2
#define _CLC4GLS3_LC4G4D2N_POSITION                         0x2
#define _CLC4GLS3_LC4G4D2N_SIZE                             0x1
#define _CLC4GLS3_LC4G4D2N_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D2N_MASK                             0x4
#define _CLC4GLS3_LC4G4D2T_POSN                             0x3
#define _CLC4GLS3_LC4G4D2T_POSITION                         0x3
#define _CLC4GLS3_LC4G4D2T_SIZE                             0x1
#define _CLC4GLS3_LC4G4D2T_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D2T_MASK                             0x8
#define _CLC4GLS3_LC4G4D3N_POSN                             0x4
#define _CLC4GLS3_LC4G4D3N_POSITION                         0x4
#define _CLC4GLS3_LC4G4D3N_SIZE                             0x1
#define _CLC4GLS3_LC4G4D3N_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D3N_MASK                             0x10
#define _CLC4GLS3_LC4G4D3T_POSN                             0x5
#define _CLC4GLS3_LC4G4D3T_POSITION                         0x5
#define _CLC4GLS3_LC4G4D3T_SIZE                             0x1
#define _CLC4GLS3_LC4G4D3T_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D3T_MASK                             0x20
#define _CLC4GLS3_LC4G4D4N_POSN                             0x6
#define _CLC4GLS3_LC4G4D4N_POSITION                         0x6
#define _CLC4GLS3_LC4G4D4N_SIZE                             0x1
#define _CLC4GLS3_LC4G4D4N_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D4N_MASK                             0x40
#define _CLC4GLS3_LC4G4D4T_POSN                             0x7
#define _CLC4GLS3_LC4G4D4T_POSITION                         0x7
#define _CLC4GLS3_LC4G4D4T_SIZE                             0x1
#define _CLC4GLS3_LC4G4D4T_LENGTH                           0x1
#define _CLC4GLS3_LC4G4D4T_MASK                             0x80
#define _CLC4GLS3_G4D1N_POSN                                0x0
#define _CLC4GLS3_G4D1N_POSITION                            0x0
#define _CLC4GLS3_G4D1N_SIZE                                0x1
#define _CLC4GLS3_G4D1N_LENGTH                              0x1
#define _CLC4GLS3_G4D1N_MASK                                0x1
#define _CLC4GLS3_G4D1T_POSN                                0x1
#define _CLC4GLS3_G4D1T_POSITION                            0x1
#define _CLC4GLS3_G4D1T_SIZE                                0x1
#define _CLC4GLS3_G4D1T_LENGTH                              0x1
#define _CLC4GLS3_G4D1T_MASK                                0x2
#define _CLC4GLS3_G4D2N_POSN                                0x2
#define _CLC4GLS3_G4D2N_POSITION                            0x2
#define _CLC4GLS3_G4D2N_SIZE                                0x1
#define _CLC4GLS3_G4D2N_LENGTH                              0x1
#define _CLC4GLS3_G4D2N_MASK                                0x4
#define _CLC4GLS3_G4D2T_POSN                                0x3
#define _CLC4GLS3_G4D2T_POSITION                            0x3
#define _CLC4GLS3_G4D2T_SIZE                                0x1
#define _CLC4GLS3_G4D2T_LENGTH                              0x1
#define _CLC4GLS3_G4D2T_MASK                                0x8
#define _CLC4GLS3_G4D3N_POSN                                0x4
#define _CLC4GLS3_G4D3N_POSITION                            0x4
#define _CLC4GLS3_G4D3N_SIZE                                0x1
#define _CLC4GLS3_G4D3N_LENGTH                              0x1
#define _CLC4GLS3_G4D3N_MASK                                0x10
#define _CLC4GLS3_G4D3T_POSN                                0x5
#define _CLC4GLS3_G4D3T_POSITION                            0x5
#define _CLC4GLS3_G4D3T_SIZE                                0x1
#define _CLC4GLS3_G4D3T_LENGTH                              0x1
#define _CLC4GLS3_G4D3T_MASK                                0x20
#define _CLC4GLS3_G4D4N_POSN                                0x6
#define _CLC4GLS3_G4D4N_POSITION                            0x6
#define _CLC4GLS3_G4D4N_SIZE                                0x1
#define _CLC4GLS3_G4D4N_LENGTH                              0x1
#define _CLC4GLS3_G4D4N_MASK                                0x40
#define _CLC4GLS3_G4D4T_POSN                                0x7
#define _CLC4GLS3_G4D4T_POSITION                            0x7
#define _CLC4GLS3_G4D4T_SIZE                                0x1
#define _CLC4GLS3_G4D4T_LENGTH                              0x1
#define _CLC4GLS3_G4D4T_MASK                                0x80

// Register: STATUS_SHAD
extern volatile unsigned char           STATUS_SHAD         @ 0xFE4;
#ifndef _LIB_BUILD
asm("STATUS_SHAD equ 0FE4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C_SHAD                 :1;
        unsigned DC_SHAD                :1;
        unsigned Z_SHAD                 :1;
    };
} STATUS_SHADbits_t;
extern volatile STATUS_SHADbits_t STATUS_SHADbits @ 0xFE4;
// bitfield macros
#define _STATUS_SHAD_C_SHAD_POSN                            0x0
#define _STATUS_SHAD_C_SHAD_POSITION                        0x0
#define _STATUS_SHAD_C_SHAD_SIZE                            0x1
#define _STATUS_SHAD_C_SHAD_LENGTH                          0x1
#define _STATUS_SHAD_C_SHAD_MASK                            0x1
#define _STATUS_SHAD_DC_SHAD_POSN                           0x1
#define _STATUS_SHAD_DC_SHAD_POSITION                       0x1
#define _STATUS_SHAD_DC_SHAD_SIZE                           0x1
#define _STATUS_SHAD_DC_SHAD_LENGTH                         0x1
#define _STATUS_SHAD_DC_SHAD_MASK                           0x2
#define _STATUS_SHAD_Z_SHAD_POSN                            0x2
#define _STATUS_SHAD_Z_SHAD_POSITION                        0x2
#define _STATUS_SHAD_Z_SHAD_SIZE                            0x1
#define _STATUS_SHAD_Z_SHAD_LENGTH                          0x1
#define _STATUS_SHAD_Z_SHAD_MASK                            0x4

// Register: WREG_SHAD
extern volatile unsigned char           WREG_SHAD           @ 0xFE5;
#ifndef _LIB_BUILD
asm("WREG_SHAD equ 0FE5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WREG_SHAD              :8;
    };
} WREG_SHADbits_t;
extern volatile WREG_SHADbits_t WREG_SHADbits @ 0xFE5;
// bitfield macros
#define _WREG_SHAD_WREG_SHAD_POSN                           0x0
#define _WREG_SHAD_WREG_SHAD_POSITION                       0x0
#define _WREG_SHAD_WREG_SHAD_SIZE                           0x8
#define _WREG_SHAD_WREG_SHAD_LENGTH                         0x8
#define _WREG_SHAD_WREG_SHAD_MASK                           0xFF

// Register: BSR_SHAD
extern volatile unsigned char           BSR_SHAD            @ 0xFE6;
#ifndef _LIB_BUILD
asm("BSR_SHAD equ 0FE6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned BSR_SHAD               :5;
    };
} BSR_SHADbits_t;
extern volatile BSR_SHADbits_t BSR_SHADbits @ 0xFE6;
// bitfield macros
#define _BSR_SHAD_BSR_SHAD_POSN                             0x0
#define _BSR_SHAD_BSR_SHAD_POSITION                         0x0
#define _BSR_SHAD_BSR_SHAD_SIZE                             0x5
#define _BSR_SHAD_BSR_SHAD_LENGTH                           0x5
#define _BSR_SHAD_BSR_SHAD_MASK                             0x1F

// Register: PCLATH_SHAD
extern volatile unsigned char           PCLATH_SHAD         @ 0xFE7;
#ifndef _LIB_BUILD
asm("PCLATH_SHAD equ 0FE7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCLATH_SHAD            :7;
    };
} PCLATH_SHADbits_t;
extern volatile PCLATH_SHADbits_t PCLATH_SHADbits @ 0xFE7;
// bitfield macros
#define _PCLATH_SHAD_PCLATH_SHAD_POSN                       0x0
#define _PCLATH_SHAD_PCLATH_SHAD_POSITION                   0x0
#define _PCLATH_SHAD_PCLATH_SHAD_SIZE                       0x7
#define _PCLATH_SHAD_PCLATH_SHAD_LENGTH                     0x7
#define _PCLATH_SHAD_PCLATH_SHAD_MASK                       0x7F

// Register: FSR0L_SHAD
extern volatile unsigned char           FSR0L_SHAD          @ 0xFE8;
#ifndef _LIB_BUILD
asm("FSR0L_SHAD equ 0FE8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR0L_SHAD             :8;
    };
} FSR0L_SHADbits_t;
extern volatile FSR0L_SHADbits_t FSR0L_SHADbits @ 0xFE8;
// bitfield macros
#define _FSR0L_SHAD_FSR0L_SHAD_POSN                         0x0
#define _FSR0L_SHAD_FSR0L_SHAD_POSITION                     0x0
#define _FSR0L_SHAD_FSR0L_SHAD_SIZE                         0x8
#define _FSR0L_SHAD_FSR0L_SHAD_LENGTH                       0x8
#define _FSR0L_SHAD_FSR0L_SHAD_MASK                         0xFF

// Register: FSR0H_SHAD
extern volatile unsigned char           FSR0H_SHAD          @ 0xFE9;
#ifndef _LIB_BUILD
asm("FSR0H_SHAD equ 0FE9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR0H_SHAD             :8;
    };
} FSR0H_SHADbits_t;
extern volatile FSR0H_SHADbits_t FSR0H_SHADbits @ 0xFE9;
// bitfield macros
#define _FSR0H_SHAD_FSR0H_SHAD_POSN                         0x0
#define _FSR0H_SHAD_FSR0H_SHAD_POSITION                     0x0
#define _FSR0H_SHAD_FSR0H_SHAD_SIZE                         0x8
#define _FSR0H_SHAD_FSR0H_SHAD_LENGTH                       0x8
#define _FSR0H_SHAD_FSR0H_SHAD_MASK                         0xFF

// Register: FSR1L_SHAD
extern volatile unsigned char           FSR1L_SHAD          @ 0xFEA;
#ifndef _LIB_BUILD
asm("FSR1L_SHAD equ 0FEAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR1L_SHAD             :8;
    };
} FSR1L_SHADbits_t;
extern volatile FSR1L_SHADbits_t FSR1L_SHADbits @ 0xFEA;
// bitfield macros
#define _FSR1L_SHAD_FSR1L_SHAD_POSN                         0x0
#define _FSR1L_SHAD_FSR1L_SHAD_POSITION                     0x0
#define _FSR1L_SHAD_FSR1L_SHAD_SIZE                         0x8
#define _FSR1L_SHAD_FSR1L_SHAD_LENGTH                       0x8
#define _FSR1L_SHAD_FSR1L_SHAD_MASK                         0xFF

// Register: FSR1H_SHAD
extern volatile unsigned char           FSR1H_SHAD          @ 0xFEB;
#ifndef _LIB_BUILD
asm("FSR1H_SHAD equ 0FEBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR1H_SHAD             :8;
    };
} FSR1H_SHADbits_t;
extern volatile FSR1H_SHADbits_t FSR1H_SHADbits @ 0xFEB;
// bitfield macros
#define _FSR1H_SHAD_FSR1H_SHAD_POSN                         0x0
#define _FSR1H_SHAD_FSR1H_SHAD_POSITION                     0x0
#define _FSR1H_SHAD_FSR1H_SHAD_SIZE                         0x8
#define _FSR1H_SHAD_FSR1H_SHAD_LENGTH                       0x8
#define _FSR1H_SHAD_FSR1H_SHAD_MASK                         0xFF

// Register: STKPTR
extern volatile unsigned char           STKPTR              @ 0xFED;
#ifndef _LIB_BUILD
asm("STKPTR equ 0FEDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STKPTR                 :5;
    };
} STKPTRbits_t;
extern volatile STKPTRbits_t STKPTRbits @ 0xFED;
// bitfield macros
#define _STKPTR_STKPTR_POSN                                 0x0
#define _STKPTR_STKPTR_POSITION                             0x0
#define _STKPTR_STKPTR_SIZE                                 0x5
#define _STKPTR_STKPTR_LENGTH                               0x5
#define _STKPTR_STKPTR_MASK                                 0x1F

// Register: TOSL
extern volatile unsigned char           TOSL                @ 0xFEE;
#ifndef _LIB_BUILD
asm("TOSL equ 0FEEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TOSL                   :8;
    };
} TOSLbits_t;
extern volatile TOSLbits_t TOSLbits @ 0xFEE;
// bitfield macros
#define _TOSL_TOSL_POSN                                     0x0
#define _TOSL_TOSL_POSITION                                 0x0
#define _TOSL_TOSL_SIZE                                     0x8
#define _TOSL_TOSL_LENGTH                                   0x8
#define _TOSL_TOSL_MASK                                     0xFF

// Register: TOSH
extern volatile unsigned char           TOSH                @ 0xFEF;
#ifndef _LIB_BUILD
asm("TOSH equ 0FEFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TOSH                   :7;
    };
} TOSHbits_t;
extern volatile TOSHbits_t TOSHbits @ 0xFEF;
// bitfield macros
#define _TOSH_TOSH_POSN                                     0x0
#define _TOSH_TOSH_POSITION                                 0x0
#define _TOSH_TOSH_SIZE                                     0x7
#define _TOSH_TOSH_LENGTH                                   0x7
#define _TOSH_TOSH_MASK                                     0x7F

/*
 * Bit Definitions
 *  */
#define _DEPRECATED __attribute__((__deprecated__))
#ifndef BANKMASK
#define BANKMASK(addr) ((addr)&07Fh)
#endif
extern volatile __bit                   ABDEN               @ (((unsigned) &BAUD1CON)*8) + 0;
#define                                 ABDEN_bit           BANKMASK(BAUD1CON), 0
extern volatile __bit                   ABDOVF              @ (((unsigned) &BAUD1CON)*8) + 7;
#define                                 ABDOVF_bit          BANKMASK(BAUD1CON), 7
extern volatile __bit                   ACKDT               @ (((unsigned) &SSP1CON2)*8) + 5;
#define                                 ACKDT_bit           BANKMASK(SSP1CON2), 5
extern volatile __bit                   ACKEN               @ (((unsigned) &SSP1CON2)*8) + 4;
#define                                 ACKEN_bit           BANKMASK(SSP1CON2), 4
extern volatile __bit                   ACKSTAT             @ (((unsigned) &SSP1CON2)*8) + 6;
#define                                 ACKSTAT_bit         BANKMASK(SSP1CON2), 6
extern volatile __bit                   ACKTIM              @ (((unsigned) &SSP1CON3)*8) + 7;
#define                                 ACKTIM_bit          BANKMASK(SSP1CON3), 7
extern volatile __bit                   ADACT0              @ (((unsigned) &ADACT)*8) + 0;
#define                                 ADACT0_bit          BANKMASK(ADACT), 0
extern volatile __bit                   ADACT1              @ (((unsigned) &ADACT)*8) + 1;
#define                                 ADACT1_bit          BANKMASK(ADACT), 1
extern volatile __bit                   ADACT2              @ (((unsigned) &ADACT)*8) + 2;
#define                                 ADACT2_bit          BANKMASK(ADACT), 2
extern volatile __bit                   ADACT3              @ (((unsigned) &ADACT)*8) + 3;
#define                                 ADACT3_bit          BANKMASK(ADACT), 3
extern volatile __bit                   ADACT4              @ (((unsigned) &ADACT)*8) + 4;
#define                                 ADACT4_bit          BANKMASK(ADACT), 4
extern volatile __bit                   ADCMD               @ (((unsigned) &PMD2)*8) + 5;
#define                                 ADCMD_bit           BANKMASK(PMD2), 5
extern volatile __bit                   ADCS0               @ (((unsigned) &ADCON1)*8) + 4;
#define                                 ADCS0_bit           BANKMASK(ADCON1), 4
extern volatile __bit                   ADCS1               @ (((unsigned) &ADCON1)*8) + 5;
#define                                 ADCS1_bit           BANKMASK(ADCON1), 5
extern volatile __bit                   ADCS2               @ (((unsigned) &ADCON1)*8) + 6;
#define                                 ADCS2_bit           BANKMASK(ADCON1), 6
extern volatile __bit                   ADD0                @ (((unsigned) &SSP1ADD)*8) + 0;
#define                                 ADD0_bit            BANKMASK(SSP1ADD), 0
extern volatile __bit                   ADD1                @ (((unsigned) &SSP1ADD)*8) + 1;
#define                                 ADD1_bit            BANKMASK(SSP1ADD), 1
extern volatile __bit                   ADD2                @ (((unsigned) &SSP1ADD)*8) + 2;
#define                                 ADD2_bit            BANKMASK(SSP1ADD), 2
extern volatile __bit                   ADD3                @ (((unsigned) &SSP1ADD)*8) + 3;
#define                                 ADD3_bit            BANKMASK(SSP1ADD), 3
extern volatile __bit                   ADD4                @ (((unsigned) &SSP1ADD)*8) + 4;
#define                                 ADD4_bit            BANKMASK(SSP1ADD), 4
extern volatile __bit                   ADD5                @ (((unsigned) &SSP1ADD)*8) + 5;
#define                                 ADD5_bit            BANKMASK(SSP1ADD), 5
extern volatile __bit                   ADD6                @ (((unsigned) &SSP1ADD)*8) + 6;
#define                                 ADD6_bit            BANKMASK(SSP1ADD), 6
extern volatile __bit                   ADD7                @ (((unsigned) &SSP1ADD)*8) + 7;
#define                                 ADD7_bit            BANKMASK(SSP1ADD), 7
extern volatile __bit                   ADDEN               @ (((unsigned) &RC1STA)*8) + 3;
#define                                 ADDEN_bit           BANKMASK(RC1STA), 3
extern volatile __bit                   ADFM                @ (((unsigned) &ADCON1)*8) + 7;
#define                                 ADFM_bit            BANKMASK(ADCON1), 7
extern volatile __bit                   ADFVR0              @ (((unsigned) &FVRCON)*8) + 0;
#define                                 ADFVR0_bit          BANKMASK(FVRCON), 0
extern volatile __bit                   ADFVR1              @ (((unsigned) &FVRCON)*8) + 1;
#define                                 ADFVR1_bit          BANKMASK(FVRCON), 1
extern volatile __bit                   ADGO                @ (((unsigned) &ADCON0)*8) + 1;
#define                                 ADGO_bit            BANKMASK(ADCON0), 1
extern volatile __bit                   ADIE                @ (((unsigned) &PIE1)*8) + 6;
#define                                 ADIE_bit            BANKMASK(PIE1), 6
extern volatile __bit                   ADIF                @ (((unsigned) &PIR1)*8) + 6;
#define                                 ADIF_bit            BANKMASK(PIR1), 6
extern volatile __bit                   ADNREF              @ (((unsigned) &ADCON1)*8) + 2;
#define                                 ADNREF_bit          BANKMASK(ADCON1), 2
extern volatile __bit                   ADOEN               @ (((unsigned) &OSCEN)*8) + 2;
#define                                 ADOEN_bit           BANKMASK(OSCEN), 2
extern volatile __bit                   ADON                @ (((unsigned) &ADCON0)*8) + 0;
#define                                 ADON_bit            BANKMASK(ADCON0), 0
extern volatile __bit                   ADOR                @ (((unsigned) &OSCSTAT1)*8) + 2;
#define                                 ADOR_bit            BANKMASK(OSCSTAT1), 2
extern volatile __bit                   ADPREF0             @ (((unsigned) &ADCON1)*8) + 0;
#define                                 ADPREF0_bit         BANKMASK(ADCON1), 0
extern volatile __bit                   ADPREF1             @ (((unsigned) &ADCON1)*8) + 1;
#define                                 ADPREF1_bit         BANKMASK(ADCON1), 1
extern volatile __bit                   AHEN                @ (((unsigned) &SSP1CON3)*8) + 1;
#define                                 AHEN_bit            BANKMASK(SSP1CON3), 1
extern volatile __bit                   ANSA0               @ (((unsigned) &ANSELA)*8) + 0;
#define                                 ANSA0_bit           BANKMASK(ANSELA), 0
extern volatile __bit                   ANSA1               @ (((unsigned) &ANSELA)*8) + 1;
#define                                 ANSA1_bit           BANKMASK(ANSELA), 1
extern volatile __bit                   ANSA2               @ (((unsigned) &ANSELA)*8) + 2;
#define                                 ANSA2_bit           BANKMASK(ANSELA), 2
extern volatile __bit                   ANSA4               @ (((unsigned) &ANSELA)*8) + 4;
#define                                 ANSA4_bit           BANKMASK(ANSELA), 4
extern volatile __bit                   ANSA5               @ (((unsigned) &ANSELA)*8) + 5;
#define                                 ANSA5_bit           BANKMASK(ANSELA), 5
extern volatile __bit                   ANSC0               @ (((unsigned) &ANSELC)*8) + 0;
#define                                 ANSC0_bit           BANKMASK(ANSELC), 0
extern volatile __bit                   ANSC1               @ (((unsigned) &ANSELC)*8) + 1;
#define                                 ANSC1_bit           BANKMASK(ANSELC), 1
extern volatile __bit                   ANSC2               @ (((unsigned) &ANSELC)*8) + 2;
#define                                 ANSC2_bit           BANKMASK(ANSELC), 2
extern volatile __bit                   ANSC3               @ (((unsigned) &ANSELC)*8) + 3;
#define                                 ANSC3_bit           BANKMASK(ANSELC), 3
extern volatile __bit                   ANSC4               @ (((unsigned) &ANSELC)*8) + 4;
#define                                 ANSC4_bit           BANKMASK(ANSELC), 4
extern volatile __bit                   ANSC5               @ (((unsigned) &ANSELC)*8) + 5;
#define                                 ANSC5_bit           BANKMASK(ANSELC), 5
extern volatile __bit                   BCL1IE              @ (((unsigned) &PIE1)*8) + 2;
#define                                 BCL1IE_bit          BANKMASK(PIE1), 2
extern volatile __bit                   BCL1IF              @ (((unsigned) &PIR1)*8) + 2;
#define                                 BCL1IF_bit          BANKMASK(PIR1), 2
extern volatile __bit                   BF                  @ (((unsigned) &SSP1STAT)*8) + 0;
#define                                 BF_bit              BANKMASK(SSP1STAT), 0
extern volatile __bit                   BOEN                @ (((unsigned) &SSP1CON3)*8) + 4;
#define                                 BOEN_bit            BANKMASK(SSP1CON3), 4
extern volatile __bit                   BORRDY              @ (((unsigned) &BORCON)*8) + 0;
#define                                 BORRDY_bit          BANKMASK(BORCON), 0
extern volatile __bit                   BRG16               @ (((unsigned) &BAUD1CON)*8) + 3;
#define                                 BRG16_bit           BANKMASK(BAUD1CON), 3
extern volatile __bit                   BRGH                @ (((unsigned) &TX1STA)*8) + 2;
#define                                 BRGH_bit            BANKMASK(TX1STA), 2
extern volatile __bit                   BSR0                @ (((unsigned) &BSR)*8) + 0;
#define                                 BSR0_bit            BANKMASK(BSR), 0
extern volatile __bit                   BSR1                @ (((unsigned) &BSR)*8) + 1;
#define                                 BSR1_bit            BANKMASK(BSR), 1
extern volatile __bit                   BSR2                @ (((unsigned) &BSR)*8) + 2;
#define                                 BSR2_bit            BANKMASK(BSR), 2
extern volatile __bit                   BSR3                @ (((unsigned) &BSR)*8) + 3;
#define                                 BSR3_bit            BANKMASK(BSR), 3
extern volatile __bit                   BSR4                @ (((unsigned) &BSR)*8) + 4;
#define                                 BSR4_bit            BANKMASK(BSR), 4
extern volatile __bit                   BUF0                @ (((unsigned) &SSP1BUF)*8) + 0;
#define                                 BUF0_bit            BANKMASK(SSP1BUF), 0
extern volatile __bit                   BUF1                @ (((unsigned) &SSP1BUF)*8) + 1;
#define                                 BUF1_bit            BANKMASK(SSP1BUF), 1
extern volatile __bit                   BUF2                @ (((unsigned) &SSP1BUF)*8) + 2;
#define                                 BUF2_bit            BANKMASK(SSP1BUF), 2
extern volatile __bit                   BUF3                @ (((unsigned) &SSP1BUF)*8) + 3;
#define                                 BUF3_bit            BANKMASK(SSP1BUF), 3
extern volatile __bit                   BUF4                @ (((unsigned) &SSP1BUF)*8) + 4;
#define                                 BUF4_bit            BANKMASK(SSP1BUF), 4
extern volatile __bit                   BUF5                @ (((unsigned) &SSP1BUF)*8) + 5;
#define                                 BUF5_bit            BANKMASK(SSP1BUF), 5
extern volatile __bit                   BUF6                @ (((unsigned) &SSP1BUF)*8) + 6;
#define                                 BUF6_bit            BANKMASK(SSP1BUF), 6
extern volatile __bit                   BUF7                @ (((unsigned) &SSP1BUF)*8) + 7;
#define                                 BUF7_bit            BANKMASK(SSP1BUF), 7
extern volatile __bit                   C1HYS               @ (((unsigned) &CM1CON0)*8) + 1;
#define                                 C1HYS_bit           BANKMASK(CM1CON0), 1
extern volatile __bit                   C1IE                @ (((unsigned) &PIE2)*8) + 5;
#define                                 C1IE_bit            BANKMASK(PIE2), 5
extern volatile __bit                   C1IF                @ (((unsigned) &PIR2)*8) + 5;
#define                                 C1IF_bit            BANKMASK(PIR2), 5
extern volatile __bit                   C1INTN              @ (((unsigned) &CM1CON1)*8) + 6;
#define                                 C1INTN_bit          BANKMASK(CM1CON1), 6
extern volatile __bit                   C1INTP              @ (((unsigned) &CM1CON1)*8) + 7;
#define                                 C1INTP_bit          BANKMASK(CM1CON1), 7
extern volatile __bit                   C1NCH0              @ (((unsigned) &CM1CON1)*8) + 0;
#define                                 C1NCH0_bit          BANKMASK(CM1CON1), 0
extern volatile __bit                   C1NCH1              @ (((unsigned) &CM1CON1)*8) + 1;
#define                                 C1NCH1_bit          BANKMASK(CM1CON1), 1
extern volatile __bit                   C1NCH2              @ (((unsigned) &CM1CON1)*8) + 2;
#define                                 C1NCH2_bit          BANKMASK(CM1CON1), 2
extern volatile __bit                   C1ON                @ (((unsigned) &CM1CON0)*8) + 7;
#define                                 C1ON_bit            BANKMASK(CM1CON0), 7
extern volatile __bit                   C1OUT               @ (((unsigned) &CM1CON0)*8) + 6;
#define                                 C1OUT_bit           BANKMASK(CM1CON0), 6
extern volatile __bit                   C1PCH0              @ (((unsigned) &CM1CON1)*8) + 3;
#define                                 C1PCH0_bit          BANKMASK(CM1CON1), 3
extern volatile __bit                   C1PCH1              @ (((unsigned) &CM1CON1)*8) + 4;
#define                                 C1PCH1_bit          BANKMASK(CM1CON1), 4
extern volatile __bit                   C1PCH2              @ (((unsigned) &CM1CON1)*8) + 5;
#define                                 C1PCH2_bit          BANKMASK(CM1CON1), 5
extern volatile __bit                   C1POL               @ (((unsigned) &CM1CON0)*8) + 4;
#define                                 C1POL_bit           BANKMASK(CM1CON0), 4
extern volatile __bit                   C1SP                @ (((unsigned) &CM1CON0)*8) + 2;
#define                                 C1SP_bit            BANKMASK(CM1CON0), 2
extern volatile __bit                   C1SYNC              @ (((unsigned) &CM1CON0)*8) + 0;
#define                                 C1SYNC_bit          BANKMASK(CM1CON0), 0
extern volatile __bit                   C1TSEL0             @ (((unsigned) &CCPTMRS)*8) + 0;
#define                                 C1TSEL0_bit         BANKMASK(CCPTMRS), 0
extern volatile __bit                   C1TSEL1             @ (((unsigned) &CCPTMRS)*8) + 1;
#define                                 C1TSEL1_bit         BANKMASK(CCPTMRS), 1
extern volatile __bit                   C2HYS               @ (((unsigned) &CM2CON0)*8) + 1;
#define                                 C2HYS_bit           BANKMASK(CM2CON0), 1
extern volatile __bit                   C2IE                @ (((unsigned) &PIE2)*8) + 6;
#define                                 C2IE_bit            BANKMASK(PIE2), 6
extern volatile __bit                   C2IF                @ (((unsigned) &PIR2)*8) + 6;
#define                                 C2IF_bit            BANKMASK(PIR2), 6
extern volatile __bit                   C2INTN              @ (((unsigned) &CM2CON1)*8) + 6;
#define                                 C2INTN_bit          BANKMASK(CM2CON1), 6
extern volatile __bit                   C2INTP              @ (((unsigned) &CM2CON1)*8) + 7;
#define                                 C2INTP_bit          BANKMASK(CM2CON1), 7
extern volatile __bit                   C2NCH0              @ (((unsigned) &CM2CON1)*8) + 0;
#define                                 C2NCH0_bit          BANKMASK(CM2CON1), 0
extern volatile __bit                   C2NCH1              @ (((unsigned) &CM2CON1)*8) + 1;
#define                                 C2NCH1_bit          BANKMASK(CM2CON1), 1
extern volatile __bit                   C2NCH2              @ (((unsigned) &CM2CON1)*8) + 2;
#define                                 C2NCH2_bit          BANKMASK(CM2CON1), 2
extern volatile __bit                   C2ON                @ (((unsigned) &CM2CON0)*8) + 7;
#define                                 C2ON_bit            BANKMASK(CM2CON0), 7
extern volatile __bit                   C2OUT               @ (((unsigned) &CM2CON0)*8) + 6;
#define                                 C2OUT_bit           BANKMASK(CM2CON0), 6
extern volatile __bit                   C2PCH0              @ (((unsigned) &CM2CON1)*8) + 3;
#define                                 C2PCH0_bit          BANKMASK(CM2CON1), 3
extern volatile __bit                   C2PCH1              @ (((unsigned) &CM2CON1)*8) + 4;
#define                                 C2PCH1_bit          BANKMASK(CM2CON1), 4
extern volatile __bit                   C2PCH2              @ (((unsigned) &CM2CON1)*8) + 5;
#define                                 C2PCH2_bit          BANKMASK(CM2CON1), 5
extern volatile __bit                   C2POL               @ (((unsigned) &CM2CON0)*8) + 4;
#define                                 C2POL_bit           BANKMASK(CM2CON0), 4
extern volatile __bit                   C2SP                @ (((unsigned) &CM2CON0)*8) + 2;
#define                                 C2SP_bit            BANKMASK(CM2CON0), 2
extern volatile __bit                   C2SYNC              @ (((unsigned) &CM2CON0)*8) + 0;
#define                                 C2SYNC_bit          BANKMASK(CM2CON0), 0
extern volatile __bit                   C2TSEL0             @ (((unsigned) &CCPTMRS)*8) + 2;
#define                                 C2TSEL0_bit         BANKMASK(CCPTMRS), 2
extern volatile __bit                   C2TSEL1             @ (((unsigned) &CCPTMRS)*8) + 3;
#define                                 C2TSEL1_bit         BANKMASK(CCPTMRS), 3
extern volatile __bit                   C3TSEL0             @ (((unsigned) &CCPTMRS)*8) + 4;
#define                                 C3TSEL0_bit         BANKMASK(CCPTMRS), 4
extern volatile __bit                   C3TSEL1             @ (((unsigned) &CCPTMRS)*8) + 5;
#define                                 C3TSEL1_bit         BANKMASK(CCPTMRS), 5
extern volatile __bit                   C4TSEL0             @ (((unsigned) &CCPTMRS)*8) + 6;
#define                                 C4TSEL0_bit         BANKMASK(CCPTMRS), 6
extern volatile __bit                   C4TSEL1             @ (((unsigned) &CCPTMRS)*8) + 7;
#define                                 C4TSEL1_bit         BANKMASK(CCPTMRS), 7
extern volatile __bit                   CARRY               @ (((unsigned) &STATUS)*8) + 0;
#define                                 CARRY_bit           BANKMASK(STATUS), 0
extern volatile __bit                   CCDEN               @ (((unsigned) &CCDCON)*8) + 7;
#define                                 CCDEN_bit           BANKMASK(CCDCON), 7
extern volatile __bit                   CCDNA0              @ (((unsigned) &CCDNA)*8) + 0;
#define                                 CCDNA0_bit          BANKMASK(CCDNA), 0
extern volatile __bit                   CCDNA1              @ (((unsigned) &CCDNA)*8) + 1;
#define                                 CCDNA1_bit          BANKMASK(CCDNA), 1
extern volatile __bit                   CCDNA2              @ (((unsigned) &CCDNA)*8) + 2;
#define                                 CCDNA2_bit          BANKMASK(CCDNA), 2
extern volatile __bit                   CCDNA4              @ (((unsigned) &CCDNA)*8) + 4;
#define                                 CCDNA4_bit          BANKMASK(CCDNA), 4
extern volatile __bit                   CCDNA5              @ (((unsigned) &CCDNA)*8) + 5;
#define                                 CCDNA5_bit          BANKMASK(CCDNA), 5
extern volatile __bit                   CCDNC0              @ (((unsigned) &CCDNC)*8) + 0;
#define                                 CCDNC0_bit          BANKMASK(CCDNC), 0
extern volatile __bit                   CCDNC1              @ (((unsigned) &CCDNC)*8) + 1;
#define                                 CCDNC1_bit          BANKMASK(CCDNC), 1
extern volatile __bit                   CCDNC2              @ (((unsigned) &CCDNC)*8) + 2;
#define                                 CCDNC2_bit          BANKMASK(CCDNC), 2
extern volatile __bit                   CCDNC3              @ (((unsigned) &CCDNC)*8) + 3;
#define                                 CCDNC3_bit          BANKMASK(CCDNC), 3
extern volatile __bit                   CCDNC4              @ (((unsigned) &CCDNC)*8) + 4;
#define                                 CCDNC4_bit          BANKMASK(CCDNC), 4
extern volatile __bit                   CCDNC5              @ (((unsigned) &CCDNC)*8) + 5;
#define                                 CCDNC5_bit          BANKMASK(CCDNC), 5
extern volatile __bit                   CCDPA0              @ (((unsigned) &CCDPA)*8) + 0;
#define                                 CCDPA0_bit          BANKMASK(CCDPA), 0
extern volatile __bit                   CCDPA1              @ (((unsigned) &CCDPA)*8) + 1;
#define                                 CCDPA1_bit          BANKMASK(CCDPA), 1
extern volatile __bit                   CCDPA2              @ (((unsigned) &CCDPA)*8) + 2;
#define                                 CCDPA2_bit          BANKMASK(CCDPA), 2
extern volatile __bit                   CCDPA4              @ (((unsigned) &CCDPA)*8) + 4;
#define                                 CCDPA4_bit          BANKMASK(CCDPA), 4
extern volatile __bit                   CCDPA5              @ (((unsigned) &CCDPA)*8) + 5;
#define                                 CCDPA5_bit          BANKMASK(CCDPA), 5
extern volatile __bit                   CCDPC0              @ (((unsigned) &CCDPC)*8) + 0;
#define                                 CCDPC0_bit          BANKMASK(CCDPC), 0
extern volatile __bit                   CCDPC1              @ (((unsigned) &CCDPC)*8) + 1;
#define                                 CCDPC1_bit          BANKMASK(CCDPC), 1
extern volatile __bit                   CCDPC2              @ (((unsigned) &CCDPC)*8) + 2;
#define                                 CCDPC2_bit          BANKMASK(CCDPC), 2
extern volatile __bit                   CCDPC3              @ (((unsigned) &CCDPC)*8) + 3;
#define                                 CCDPC3_bit          BANKMASK(CCDPC), 3
extern volatile __bit                   CCDPC4              @ (((unsigned) &CCDPC)*8) + 4;
#define                                 CCDPC4_bit          BANKMASK(CCDPC), 4
extern volatile __bit                   CCDPC5              @ (((unsigned) &CCDPC)*8) + 5;
#define                                 CCDPC5_bit          BANKMASK(CCDPC), 5
extern volatile __bit                   CCDS0               @ (((unsigned) &CCDCON)*8) + 0;
#define                                 CCDS0_bit           BANKMASK(CCDCON), 0
extern volatile __bit                   CCDS1               @ (((unsigned) &CCDCON)*8) + 1;
#define                                 CCDS1_bit           BANKMASK(CCDCON), 1
extern volatile __bit                   CCP1CTS0            @ (((unsigned) &CCP1CAP)*8) + 0;
#define                                 CCP1CTS0_bit        BANKMASK(CCP1CAP), 0
extern volatile __bit                   CCP1CTS1            @ (((unsigned) &CCP1CAP)*8) + 1;
#define                                 CCP1CTS1_bit        BANKMASK(CCP1CAP), 1
extern volatile __bit                   CCP1CTS2            @ (((unsigned) &CCP1CAP)*8) + 2;
#define                                 CCP1CTS2_bit        BANKMASK(CCP1CAP), 2
extern volatile __bit                   CCP1CTS3            @ (((unsigned) &CCP1CAP)*8) + 3;
#define                                 CCP1CTS3_bit        BANKMASK(CCP1CAP), 3
extern volatile __bit                   CCP1EN              @ (((unsigned) &CCP1CON)*8) + 7;
#define                                 CCP1EN_bit          BANKMASK(CCP1CON), 7
extern volatile __bit                   CCP1FMT             @ (((unsigned) &CCP1CON)*8) + 4;
#define                                 CCP1FMT_bit         BANKMASK(CCP1CON), 4
extern volatile __bit                   CCP1IE              @ (((unsigned) &PIE4)*8) + 0;
#define                                 CCP1IE_bit          BANKMASK(PIE4), 0
extern volatile __bit                   CCP1IF              @ (((unsigned) &PIR4)*8) + 0;
#define                                 CCP1IF_bit          BANKMASK(PIR4), 0
extern volatile __bit                   CCP1MD              @ (((unsigned) &PMD3)*8) + 0;
#define                                 CCP1MD_bit          BANKMASK(PMD3), 0
extern volatile __bit                   CCP1MODE0           @ (((unsigned) &CCP1CON)*8) + 0;
#define                                 CCP1MODE0_bit       BANKMASK(CCP1CON), 0
extern volatile __bit                   CCP1MODE1           @ (((unsigned) &CCP1CON)*8) + 1;
#define                                 CCP1MODE1_bit       BANKMASK(CCP1CON), 1
extern volatile __bit                   CCP1MODE2           @ (((unsigned) &CCP1CON)*8) + 2;
#define                                 CCP1MODE2_bit       BANKMASK(CCP1CON), 2
extern volatile __bit                   CCP1MODE3           @ (((unsigned) &CCP1CON)*8) + 3;
#define                                 CCP1MODE3_bit       BANKMASK(CCP1CON), 3
extern volatile __bit                   CCP1OUT             @ (((unsigned) &CCP1CON)*8) + 5;
#define                                 CCP1OUT_bit         BANKMASK(CCP1CON), 5
extern volatile __bit                   CCP1PPS0            @ (((unsigned) &CCP1PPS)*8) + 0;
#define                                 CCP1PPS0_bit        BANKMASK(CCP1PPS), 0
extern volatile __bit                   CCP1PPS1            @ (((unsigned) &CCP1PPS)*8) + 1;
#define                                 CCP1PPS1_bit        BANKMASK(CCP1PPS), 1
extern volatile __bit                   CCP1PPS2            @ (((unsigned) &CCP1PPS)*8) + 2;
#define                                 CCP1PPS2_bit        BANKMASK(CCP1PPS), 2
extern volatile __bit                   CCP1PPS3            @ (((unsigned) &CCP1PPS)*8) + 3;
#define                                 CCP1PPS3_bit        BANKMASK(CCP1PPS), 3
extern volatile __bit                   CCP1PPS4            @ (((unsigned) &CCP1PPS)*8) + 4;
#define                                 CCP1PPS4_bit        BANKMASK(CCP1PPS), 4
extern volatile __bit                   CCP2CTS0            @ (((unsigned) &CCP2CAP)*8) + 0;
#define                                 CCP2CTS0_bit        BANKMASK(CCP2CAP), 0
extern volatile __bit                   CCP2CTS1            @ (((unsigned) &CCP2CAP)*8) + 1;
#define                                 CCP2CTS1_bit        BANKMASK(CCP2CAP), 1
extern volatile __bit                   CCP2CTS2            @ (((unsigned) &CCP2CAP)*8) + 2;
#define                                 CCP2CTS2_bit        BANKMASK(CCP2CAP), 2
extern volatile __bit                   CCP2CTS3            @ (((unsigned) &CCP2CAP)*8) + 3;
#define                                 CCP2CTS3_bit        BANKMASK(CCP2CAP), 3
extern volatile __bit                   CCP2EN              @ (((unsigned) &CCP2CON)*8) + 7;
#define                                 CCP2EN_bit          BANKMASK(CCP2CON), 7
extern volatile __bit                   CCP2FMT             @ (((unsigned) &CCP2CON)*8) + 4;
#define                                 CCP2FMT_bit         BANKMASK(CCP2CON), 4
extern volatile __bit                   CCP2IE              @ (((unsigned) &PIE4)*8) + 1;
#define                                 CCP2IE_bit          BANKMASK(PIE4), 1
extern volatile __bit                   CCP2IF              @ (((unsigned) &PIR4)*8) + 1;
#define                                 CCP2IF_bit          BANKMASK(PIR4), 1
extern volatile __bit                   CCP2MD              @ (((unsigned) &PMD3)*8) + 1;
#define                                 CCP2MD_bit          BANKMASK(PMD3), 1
extern volatile __bit                   CCP2MODE0           @ (((unsigned) &CCP2CON)*8) + 0;
#define                                 CCP2MODE0_bit       BANKMASK(CCP2CON), 0
extern volatile __bit                   CCP2MODE1           @ (((unsigned) &CCP2CON)*8) + 1;
#define                                 CCP2MODE1_bit       BANKMASK(CCP2CON), 1
extern volatile __bit                   CCP2MODE2           @ (((unsigned) &CCP2CON)*8) + 2;
#define                                 CCP2MODE2_bit       BANKMASK(CCP2CON), 2
extern volatile __bit                   CCP2MODE3           @ (((unsigned) &CCP2CON)*8) + 3;
#define                                 CCP2MODE3_bit       BANKMASK(CCP2CON), 3
extern volatile __bit                   CCP2OUT             @ (((unsigned) &CCP2CON)*8) + 5;
#define                                 CCP2OUT_bit         BANKMASK(CCP2CON), 5
extern volatile __bit                   CCP2PPS0            @ (((unsigned) &CCP2PPS)*8) + 0;
#define                                 CCP2PPS0_bit        BANKMASK(CCP2PPS), 0
extern volatile __bit                   CCP2PPS1            @ (((unsigned) &CCP2PPS)*8) + 1;
#define                                 CCP2PPS1_bit        BANKMASK(CCP2PPS), 1
extern volatile __bit                   CCP2PPS2            @ (((unsigned) &CCP2PPS)*8) + 2;
#define                                 CCP2PPS2_bit        BANKMASK(CCP2PPS), 2
extern volatile __bit                   CCP2PPS3            @ (((unsigned) &CCP2PPS)*8) + 3;
#define                                 CCP2PPS3_bit        BANKMASK(CCP2PPS), 3
extern volatile __bit                   CCP2PPS4            @ (((unsigned) &CCP2PPS)*8) + 4;
#define                                 CCP2PPS4_bit        BANKMASK(CCP2PPS), 4
extern volatile __bit                   CCP3CTS0            @ (((unsigned) &CCP3CAP)*8) + 0;
#define                                 CCP3CTS0_bit        BANKMASK(CCP3CAP), 0
extern volatile __bit                   CCP3CTS1            @ (((unsigned) &CCP3CAP)*8) + 1;
#define                                 CCP3CTS1_bit        BANKMASK(CCP3CAP), 1
extern volatile __bit                   CCP3CTS2            @ (((unsigned) &CCP3CAP)*8) + 2;
#define                                 CCP3CTS2_bit        BANKMASK(CCP3CAP), 2
extern volatile __bit                   CCP3CTS3            @ (((unsigned) &CCP3CAP)*8) + 3;
#define                                 CCP3CTS3_bit        BANKMASK(CCP3CAP), 3
extern volatile __bit                   CCP3EN              @ (((unsigned) &CCP3CON)*8) + 7;
#define                                 CCP3EN_bit          BANKMASK(CCP3CON), 7
extern volatile __bit                   CCP3FMT             @ (((unsigned) &CCP3CON)*8) + 4;
#define                                 CCP3FMT_bit         BANKMASK(CCP3CON), 4
extern volatile __bit                   CCP3IE              @ (((unsigned) &PIE4)*8) + 2;
#define                                 CCP3IE_bit          BANKMASK(PIE4), 2
extern volatile __bit                   CCP3IF              @ (((unsigned) &PIR4)*8) + 2;
#define                                 CCP3IF_bit          BANKMASK(PIR4), 2
extern volatile __bit                   CCP3MD              @ (((unsigned) &PMD3)*8) + 2;
#define                                 CCP3MD_bit          BANKMASK(PMD3), 2
extern volatile __bit                   CCP3MODE0           @ (((unsigned) &CCP3CON)*8) + 0;
#define                                 CCP3MODE0_bit       BANKMASK(CCP3CON), 0
extern volatile __bit                   CCP3MODE1           @ (((unsigned) &CCP3CON)*8) + 1;
#define                                 CCP3MODE1_bit       BANKMASK(CCP3CON), 1
extern volatile __bit                   CCP3MODE2           @ (((unsigned) &CCP3CON)*8) + 2;
#define                                 CCP3MODE2_bit       BANKMASK(CCP3CON), 2
extern volatile __bit                   CCP3MODE3           @ (((unsigned) &CCP3CON)*8) + 3;
#define                                 CCP3MODE3_bit       BANKMASK(CCP3CON), 3
extern volatile __bit                   CCP3OUT             @ (((unsigned) &CCP3CON)*8) + 5;
#define                                 CCP3OUT_bit         BANKMASK(CCP3CON), 5
extern volatile __bit                   CCP3PPS0            @ (((unsigned) &CCP3PPS)*8) + 0;
#define                                 CCP3PPS0_bit        BANKMASK(CCP3PPS), 0
extern volatile __bit                   CCP3PPS1            @ (((unsigned) &CCP3PPS)*8) + 1;
#define                                 CCP3PPS1_bit        BANKMASK(CCP3PPS), 1
extern volatile __bit                   CCP3PPS2            @ (((unsigned) &CCP3PPS)*8) + 2;
#define                                 CCP3PPS2_bit        BANKMASK(CCP3PPS), 2
extern volatile __bit                   CCP3PPS3            @ (((unsigned) &CCP3PPS)*8) + 3;
#define                                 CCP3PPS3_bit        BANKMASK(CCP3PPS), 3
extern volatile __bit                   CCP3PPS4            @ (((unsigned) &CCP3PPS)*8) + 4;
#define                                 CCP3PPS4_bit        BANKMASK(CCP3PPS), 4
extern volatile __bit                   CCP4CTS0            @ (((unsigned) &CCP4CAP)*8) + 0;
#define                                 CCP4CTS0_bit        BANKMASK(CCP4CAP), 0
extern volatile __bit                   CCP4CTS1            @ (((unsigned) &CCP4CAP)*8) + 1;
#define                                 CCP4CTS1_bit        BANKMASK(CCP4CAP), 1
extern volatile __bit                   CCP4CTS2            @ (((unsigned) &CCP4CAP)*8) + 2;
#define                                 CCP4CTS2_bit        BANKMASK(CCP4CAP), 2
extern volatile __bit                   CCP4CTS3            @ (((unsigned) &CCP4CAP)*8) + 3;
#define                                 CCP4CTS3_bit        BANKMASK(CCP4CAP), 3
extern volatile __bit                   CCP4EN              @ (((unsigned) &CCP4CON)*8) + 7;
#define                                 CCP4EN_bit          BANKMASK(CCP4CON), 7
extern volatile __bit                   CCP4FMT             @ (((unsigned) &CCP4CON)*8) + 4;
#define                                 CCP4FMT_bit         BANKMASK(CCP4CON), 4
extern volatile __bit                   CCP4IE              @ (((unsigned) &PIE4)*8) + 3;
#define                                 CCP4IE_bit          BANKMASK(PIE4), 3
extern volatile __bit                   CCP4IF              @ (((unsigned) &PIR4)*8) + 3;
#define                                 CCP4IF_bit          BANKMASK(PIR4), 3
extern volatile __bit                   CCP4MD              @ (((unsigned) &PMD3)*8) + 3;
#define                                 CCP4MD_bit          BANKMASK(PMD3), 3
extern volatile __bit                   CCP4MODE0           @ (((unsigned) &CCP4CON)*8) + 0;
#define                                 CCP4MODE0_bit       BANKMASK(CCP4CON), 0
extern volatile __bit                   CCP4MODE1           @ (((unsigned) &CCP4CON)*8) + 1;
#define                                 CCP4MODE1_bit       BANKMASK(CCP4CON), 1
extern volatile __bit                   CCP4MODE2           @ (((unsigned) &CCP4CON)*8) + 2;
#define                                 CCP4MODE2_bit       BANKMASK(CCP4CON), 2
extern volatile __bit                   CCP4MODE3           @ (((unsigned) &CCP4CON)*8) + 3;
#define                                 CCP4MODE3_bit       BANKMASK(CCP4CON), 3
extern volatile __bit                   CCP4OUT             @ (((unsigned) &CCP4CON)*8) + 5;
#define                                 CCP4OUT_bit         BANKMASK(CCP4CON), 5
extern volatile __bit                   CCP4PPS0            @ (((unsigned) &CCP4PPS)*8) + 0;
#define                                 CCP4PPS0_bit        BANKMASK(CCP4PPS), 0
extern volatile __bit                   CCP4PPS1            @ (((unsigned) &CCP4PPS)*8) + 1;
#define                                 CCP4PPS1_bit        BANKMASK(CCP4PPS), 1
extern volatile __bit                   CCP4PPS2            @ (((unsigned) &CCP4PPS)*8) + 2;
#define                                 CCP4PPS2_bit        BANKMASK(CCP4PPS), 2
extern volatile __bit                   CCP4PPS3            @ (((unsigned) &CCP4PPS)*8) + 3;
#define                                 CCP4PPS3_bit        BANKMASK(CCP4PPS), 3
extern volatile __bit                   CCP4PPS4            @ (((unsigned) &CCP4PPS)*8) + 4;
#define                                 CCP4PPS4_bit        BANKMASK(CCP4PPS), 4
extern volatile __bit                   CDAFVR0             @ (((unsigned) &FVRCON)*8) + 2;
#define                                 CDAFVR0_bit         BANKMASK(FVRCON), 2
extern volatile __bit                   CDAFVR1             @ (((unsigned) &FVRCON)*8) + 3;
#define                                 CDAFVR1_bit         BANKMASK(FVRCON), 3
extern volatile __bit                   CDIV0               @ (((unsigned) &OSCCON2)*8) + 0;
#define                                 CDIV0_bit           BANKMASK(OSCCON2), 0
extern volatile __bit                   CDIV1               @ (((unsigned) &OSCCON2)*8) + 1;
#define                                 CDIV1_bit           BANKMASK(OSCCON2), 1
extern volatile __bit                   CDIV2               @ (((unsigned) &OSCCON2)*8) + 2;
#define                                 CDIV2_bit           BANKMASK(OSCCON2), 2
extern volatile __bit                   CDIV3               @ (((unsigned) &OSCCON2)*8) + 3;
#define                                 CDIV3_bit           BANKMASK(OSCCON2), 3
extern volatile __bit                   CHS0                @ (((unsigned) &ADCON0)*8) + 2;
#define                                 CHS0_bit            BANKMASK(ADCON0), 2
extern volatile __bit                   CHS1                @ (((unsigned) &ADCON0)*8) + 3;
#define                                 CHS1_bit            BANKMASK(ADCON0), 3
extern volatile __bit                   CHS2                @ (((unsigned) &ADCON0)*8) + 4;
#define                                 CHS2_bit            BANKMASK(ADCON0), 4
extern volatile __bit                   CHS3                @ (((unsigned) &ADCON0)*8) + 5;
#define                                 CHS3_bit            BANKMASK(ADCON0), 5
extern volatile __bit                   CHS4                @ (((unsigned) &ADCON0)*8) + 6;
#define                                 CHS4_bit            BANKMASK(ADCON0), 6
extern volatile __bit                   CHS5                @ (((unsigned) &ADCON0)*8) + 7;
#define                                 CHS5_bit            BANKMASK(ADCON0), 7
extern volatile __bit                   CKE                 @ (((unsigned) &SSP1STAT)*8) + 6;
#define                                 CKE_bit             BANKMASK(SSP1STAT), 6
extern volatile __bit                   CKP                 @ (((unsigned) &SSP1CON1)*8) + 4;
#define                                 CKP_bit             BANKMASK(SSP1CON1), 4
extern volatile __bit                   CLC1IE              @ (((unsigned) &PIE3)*8) + 0;
#define                                 CLC1IE_bit          BANKMASK(PIE3), 0
extern volatile __bit                   CLC1IF              @ (((unsigned) &PIR3)*8) + 0;
#define                                 CLC1IF_bit          BANKMASK(PIR3), 0
extern volatile __bit                   CLC1MD              @ (((unsigned) &PMD5)*8) + 1;
#define                                 CLC1MD_bit          BANKMASK(PMD5), 1
extern volatile __bit                   CLC2IE              @ (((unsigned) &PIE3)*8) + 1;
#define                                 CLC2IE_bit          BANKMASK(PIE3), 1
extern volatile __bit                   CLC2IF              @ (((unsigned) &PIR3)*8) + 1;
#define                                 CLC2IF_bit          BANKMASK(PIR3), 1
extern volatile __bit                   CLC2MD              @ (((unsigned) &PMD5)*8) + 2;
#define                                 CLC2MD_bit          BANKMASK(PMD5), 2
extern volatile __bit                   CLC3IE              @ (((unsigned) &PIE3)*8) + 2;
#define                                 CLC3IE_bit          BANKMASK(PIE3), 2
extern volatile __bit                   CLC3IF              @ (((unsigned) &PIR3)*8) + 2;
#define                                 CLC3IF_bit          BANKMASK(PIR3), 2
extern volatile __bit                   CLC3MD              @ (((unsigned) &PMD5)*8) + 3;
#define                                 CLC3MD_bit          BANKMASK(PMD5), 3
extern volatile __bit                   CLC4IE              @ (((unsigned) &PIE3)*8) + 3;
#define                                 CLC4IE_bit          BANKMASK(PIE3), 3
extern volatile __bit                   CLC4IF              @ (((unsigned) &PIR3)*8) + 3;
#define                                 CLC4IF_bit          BANKMASK(PIR3), 3
extern volatile __bit                   CLC4MD              @ (((unsigned) &PMD5)*8) + 4;
#define                                 CLC4MD_bit          BANKMASK(PMD5), 4
extern volatile __bit                   CLCIN0PPS0          @ (((unsigned) &CLCIN0PPS)*8) + 0;
#define                                 CLCIN0PPS0_bit      BANKMASK(CLCIN0PPS), 0
extern volatile __bit                   CLCIN0PPS1          @ (((unsigned) &CLCIN0PPS)*8) + 1;
#define                                 CLCIN0PPS1_bit      BANKMASK(CLCIN0PPS), 1
extern volatile __bit                   CLCIN0PPS2          @ (((unsigned) &CLCIN0PPS)*8) + 2;
#define                                 CLCIN0PPS2_bit      BANKMASK(CLCIN0PPS), 2
extern volatile __bit                   CLCIN0PPS3          @ (((unsigned) &CLCIN0PPS)*8) + 3;
#define                                 CLCIN0PPS3_bit      BANKMASK(CLCIN0PPS), 3
extern volatile __bit                   CLCIN0PPS4          @ (((unsigned) &CLCIN0PPS)*8) + 4;
#define                                 CLCIN0PPS4_bit      BANKMASK(CLCIN0PPS), 4
extern volatile __bit                   CLCIN1PPS0          @ (((unsigned) &CLCIN1PPS)*8) + 0;
#define                                 CLCIN1PPS0_bit      BANKMASK(CLCIN1PPS), 0
extern volatile __bit                   CLCIN1PPS1          @ (((unsigned) &CLCIN1PPS)*8) + 1;
#define                                 CLCIN1PPS1_bit      BANKMASK(CLCIN1PPS), 1
extern volatile __bit                   CLCIN1PPS2          @ (((unsigned) &CLCIN1PPS)*8) + 2;
#define                                 CLCIN1PPS2_bit      BANKMASK(CLCIN1PPS), 2
extern volatile __bit                   CLCIN1PPS3          @ (((unsigned) &CLCIN1PPS)*8) + 3;
#define                                 CLCIN1PPS3_bit      BANKMASK(CLCIN1PPS), 3
extern volatile __bit                   CLCIN1PPS4          @ (((unsigned) &CLCIN1PPS)*8) + 4;
#define                                 CLCIN1PPS4_bit      BANKMASK(CLCIN1PPS), 4
extern volatile __bit                   CLCIN2PPS0          @ (((unsigned) &CLCIN2PPS)*8) + 0;
#define                                 CLCIN2PPS0_bit      BANKMASK(CLCIN2PPS), 0
extern volatile __bit                   CLCIN2PPS1          @ (((unsigned) &CLCIN2PPS)*8) + 1;
#define                                 CLCIN2PPS1_bit      BANKMASK(CLCIN2PPS), 1
extern volatile __bit                   CLCIN2PPS2          @ (((unsigned) &CLCIN2PPS)*8) + 2;
#define                                 CLCIN2PPS2_bit      BANKMASK(CLCIN2PPS), 2
extern volatile __bit                   CLCIN2PPS3          @ (((unsigned) &CLCIN2PPS)*8) + 3;
#define                                 CLCIN2PPS3_bit      BANKMASK(CLCIN2PPS), 3
extern volatile __bit                   CLCIN2PPS4          @ (((unsigned) &CLCIN2PPS)*8) + 4;
#define                                 CLCIN2PPS4_bit      BANKMASK(CLCIN2PPS), 4
extern volatile __bit                   CLCIN3PPS0          @ (((unsigned) &CLCIN3PPS)*8) + 0;
#define                                 CLCIN3PPS0_bit      BANKMASK(CLCIN3PPS), 0
extern volatile __bit                   CLCIN3PPS1          @ (((unsigned) &CLCIN3PPS)*8) + 1;
#define                                 CLCIN3PPS1_bit      BANKMASK(CLCIN3PPS), 1
extern volatile __bit                   CLCIN3PPS2          @ (((unsigned) &CLCIN3PPS)*8) + 2;
#define                                 CLCIN3PPS2_bit      BANKMASK(CLCIN3PPS), 2
extern volatile __bit                   CLCIN3PPS3          @ (((unsigned) &CLCIN3PPS)*8) + 3;
#define                                 CLCIN3PPS3_bit      BANKMASK(CLCIN3PPS), 3
extern volatile __bit                   CLCIN3PPS4          @ (((unsigned) &CLCIN3PPS)*8) + 4;
#define                                 CLCIN3PPS4_bit      BANKMASK(CLCIN3PPS), 4
extern volatile __bit                   CLKRDC0             @ (((unsigned) &CLKRCON)*8) + 3;
#define                                 CLKRDC0_bit         BANKMASK(CLKRCON), 3
extern volatile __bit                   CLKRDC1             @ (((unsigned) &CLKRCON)*8) + 4;
#define                                 CLKRDC1_bit         BANKMASK(CLKRCON), 4
extern volatile __bit                   CLKRDIV0            @ (((unsigned) &CLKRCON)*8) + 0;
#define                                 CLKRDIV0_bit        BANKMASK(CLKRCON), 0
extern volatile __bit                   CLKRDIV1            @ (((unsigned) &CLKRCON)*8) + 1;
#define                                 CLKRDIV1_bit        BANKMASK(CLKRCON), 1
extern volatile __bit                   CLKRDIV2            @ (((unsigned) &CLKRCON)*8) + 2;
#define                                 CLKRDIV2_bit        BANKMASK(CLKRCON), 2
extern volatile __bit                   CLKREN              @ (((unsigned) &CLKRCON)*8) + 7;
#define                                 CLKREN_bit          BANKMASK(CLKRCON), 7
extern volatile __bit                   CLKRMD              @ (((unsigned) &PMD0)*8) + 1;
#define                                 CLKRMD_bit          BANKMASK(PMD0), 1
extern volatile __bit                   CMP1MD              @ (((unsigned) &PMD2)*8) + 1;
#define                                 CMP1MD_bit          BANKMASK(PMD2), 1
extern volatile __bit                   CMP2MD              @ (((unsigned) &PMD2)*8) + 2;
#define                                 CMP2MD_bit          BANKMASK(PMD2), 2
extern volatile __bit                   COSC0               @ (((unsigned) &OSCCON2)*8) + 4;
#define                                 COSC0_bit           BANKMASK(OSCCON2), 4
extern volatile __bit                   COSC1               @ (((unsigned) &OSCCON2)*8) + 5;
#define                                 COSC1_bit           BANKMASK(OSCCON2), 5
extern volatile __bit                   COSC2               @ (((unsigned) &OSCCON2)*8) + 6;
#define                                 COSC2_bit           BANKMASK(OSCCON2), 6
extern volatile __bit                   CREN                @ (((unsigned) &RC1STA)*8) + 4;
#define                                 CREN_bit            BANKMASK(RC1STA), 4
extern volatile __bit                   CSRC                @ (((unsigned) &TX1STA)*8) + 7;
#define                                 CSRC_bit            BANKMASK(TX1STA), 7
extern volatile __bit                   CSWHOLD             @ (((unsigned) &OSCCON3)*8) + 7;
#define                                 CSWHOLD_bit         BANKMASK(OSCCON3), 7
extern volatile __bit                   CSWIE               @ (((unsigned) &PIE3)*8) + 6;
#define                                 CSWIE_bit           BANKMASK(PIE3), 6
extern volatile __bit                   CSWIF               @ (((unsigned) &PIR3)*8) + 6;
#define                                 CSWIF_bit           BANKMASK(PIR3), 6
extern volatile __bit                   CWG1CS              @ (((unsigned) &CWG1CLKCON)*8) + 0;
#define                                 CWG1CS_bit          BANKMASK(CWG1CLKCON), 0
extern volatile __bit                   CWG1DAT0            @ (((unsigned) &CWG1DAT)*8) + 0;
#define                                 CWG1DAT0_bit        BANKMASK(CWG1DAT), 0
extern volatile __bit                   CWG1DAT1            @ (((unsigned) &CWG1DAT)*8) + 1;
#define                                 CWG1DAT1_bit        BANKMASK(CWG1DAT), 1
extern volatile __bit                   CWG1DAT2            @ (((unsigned) &CWG1DAT)*8) + 2;
#define                                 CWG1DAT2_bit        BANKMASK(CWG1DAT), 2
extern volatile __bit                   CWG1DAT3            @ (((unsigned) &CWG1DAT)*8) + 3;
#define                                 CWG1DAT3_bit        BANKMASK(CWG1DAT), 3
extern volatile __bit                   CWG1DBF0            @ (((unsigned) &CWG1DBF)*8) + 0;
#define                                 CWG1DBF0_bit        BANKMASK(CWG1DBF), 0
extern volatile __bit                   CWG1DBF1            @ (((unsigned) &CWG1DBF)*8) + 1;
#define                                 CWG1DBF1_bit        BANKMASK(CWG1DBF), 1
extern volatile __bit                   CWG1DBF2            @ (((unsigned) &CWG1DBF)*8) + 2;
#define                                 CWG1DBF2_bit        BANKMASK(CWG1DBF), 2
extern volatile __bit                   CWG1DBF3            @ (((unsigned) &CWG1DBF)*8) + 3;
#define                                 CWG1DBF3_bit        BANKMASK(CWG1DBF), 3
extern volatile __bit                   CWG1DBF4            @ (((unsigned) &CWG1DBF)*8) + 4;
#define                                 CWG1DBF4_bit        BANKMASK(CWG1DBF), 4
extern volatile __bit                   CWG1DBF5            @ (((unsigned) &CWG1DBF)*8) + 5;
#define                                 CWG1DBF5_bit        BANKMASK(CWG1DBF), 5
extern volatile __bit                   CWG1DBR0            @ (((unsigned) &CWG1DBR)*8) + 0;
#define                                 CWG1DBR0_bit        BANKMASK(CWG1DBR), 0
extern volatile __bit                   CWG1DBR1            @ (((unsigned) &CWG1DBR)*8) + 1;
#define                                 CWG1DBR1_bit        BANKMASK(CWG1DBR), 1
extern volatile __bit                   CWG1DBR2            @ (((unsigned) &CWG1DBR)*8) + 2;
#define                                 CWG1DBR2_bit        BANKMASK(CWG1DBR), 2
extern volatile __bit                   CWG1DBR3            @ (((unsigned) &CWG1DBR)*8) + 3;
#define                                 CWG1DBR3_bit        BANKMASK(CWG1DBR), 3
extern volatile __bit                   CWG1DBR4            @ (((unsigned) &CWG1DBR)*8) + 4;
#define                                 CWG1DBR4_bit        BANKMASK(CWG1DBR), 4
extern volatile __bit                   CWG1DBR5            @ (((unsigned) &CWG1DBR)*8) + 5;
#define                                 CWG1DBR5_bit        BANKMASK(CWG1DBR), 5
extern volatile __bit                   CWG1EN              @ (((unsigned) &CWG1CON0)*8) + 7;
#define                                 CWG1EN_bit          BANKMASK(CWG1CON0), 7
extern volatile __bit                   CWG1IE              @ (((unsigned) &PIE4)*8) + 6;
#define                                 CWG1IE_bit          BANKMASK(PIE4), 6
extern volatile __bit                   CWG1IF              @ (((unsigned) &PIR4)*8) + 6;
#define                                 CWG1IF_bit          BANKMASK(PIR4), 6
extern volatile __bit                   CWG1IN              @ (((unsigned) &CWG1CON1)*8) + 5;
#define                                 CWG1IN_bit          BANKMASK(CWG1CON1), 5
extern volatile __bit                   CWG1LD              @ (((unsigned) &CWG1CON0)*8) + 6;
#define                                 CWG1LD_bit          BANKMASK(CWG1CON0), 6
extern volatile __bit                   CWG1LSAC0           @ (((unsigned) &CWG1AS0)*8) + 2;
#define                                 CWG1LSAC0_bit       BANKMASK(CWG1AS0), 2
extern volatile __bit                   CWG1LSAC1           @ (((unsigned) &CWG1AS0)*8) + 3;
#define                                 CWG1LSAC1_bit       BANKMASK(CWG1AS0), 3
extern volatile __bit                   CWG1LSBD0           @ (((unsigned) &CWG1AS0)*8) + 4;
#define                                 CWG1LSBD0_bit       BANKMASK(CWG1AS0), 4
extern volatile __bit                   CWG1LSBD1           @ (((unsigned) &CWG1AS0)*8) + 5;
#define                                 CWG1LSBD1_bit       BANKMASK(CWG1AS0), 5
extern volatile __bit                   CWG1MD              @ (((unsigned) &PMD3)*8) + 6;
#define                                 CWG1MD_bit          BANKMASK(PMD3), 6
extern volatile __bit                   CWG1MODE0           @ (((unsigned) &CWG1CON0)*8) + 0;
#define                                 CWG1MODE0_bit       BANKMASK(CWG1CON0), 0
extern volatile __bit                   CWG1MODE1           @ (((unsigned) &CWG1CON0)*8) + 1;
#define                                 CWG1MODE1_bit       BANKMASK(CWG1CON0), 1
extern volatile __bit                   CWG1MODE2           @ (((unsigned) &CWG1CON0)*8) + 2;
#define                                 CWG1MODE2_bit       BANKMASK(CWG1CON0), 2
extern volatile __bit                   CWG1OVRA            @ (((unsigned) &CWG1STR)*8) + 4;
#define                                 CWG1OVRA_bit        BANKMASK(CWG1STR), 4
extern volatile __bit                   CWG1OVRB            @ (((unsigned) &CWG1STR)*8) + 5;
#define                                 CWG1OVRB_bit        BANKMASK(CWG1STR), 5
extern volatile __bit                   CWG1OVRC            @ (((unsigned) &CWG1STR)*8) + 6;
#define                                 CWG1OVRC_bit        BANKMASK(CWG1STR), 6
extern volatile __bit                   CWG1OVRD            @ (((unsigned) &CWG1STR)*8) + 7;
#define                                 CWG1OVRD_bit        BANKMASK(CWG1STR), 7
extern volatile __bit                   CWG1POLA            @ (((unsigned) &CWG1CON1)*8) + 0;
#define                                 CWG1POLA_bit        BANKMASK(CWG1CON1), 0
extern volatile __bit                   CWG1POLB            @ (((unsigned) &CWG1CON1)*8) + 1;
#define                                 CWG1POLB_bit        BANKMASK(CWG1CON1), 1
extern volatile __bit                   CWG1POLC            @ (((unsigned) &CWG1CON1)*8) + 2;
#define                                 CWG1POLC_bit        BANKMASK(CWG1CON1), 2
extern volatile __bit                   CWG1POLD            @ (((unsigned) &CWG1CON1)*8) + 3;
#define                                 CWG1POLD_bit        BANKMASK(CWG1CON1), 3
extern volatile __bit                   CWG1PPS0            @ (((unsigned) &CWG1PPS)*8) + 0;
#define                                 CWG1PPS0_bit        BANKMASK(CWG1PPS), 0
extern volatile __bit                   CWG1PPS1            @ (((unsigned) &CWG1PPS)*8) + 1;
#define                                 CWG1PPS1_bit        BANKMASK(CWG1PPS), 1
extern volatile __bit                   CWG1PPS2            @ (((unsigned) &CWG1PPS)*8) + 2;
#define                                 CWG1PPS2_bit        BANKMASK(CWG1PPS), 2
extern volatile __bit                   CWG1PPS3            @ (((unsigned) &CWG1PPS)*8) + 3;
#define                                 CWG1PPS3_bit        BANKMASK(CWG1PPS), 3
extern volatile __bit                   CWG1PPS4            @ (((unsigned) &CWG1PPS)*8) + 4;
#define                                 CWG1PPS4_bit        BANKMASK(CWG1PPS), 4
extern volatile __bit                   CWG1REN             @ (((unsigned) &CWG1AS0)*8) + 6;
#define                                 CWG1REN_bit         BANKMASK(CWG1AS0), 6
extern volatile __bit                   CWG1SHUTDOWN        @ (((unsigned) &CWG1AS0)*8) + 7;
#define                                 CWG1SHUTDOWN_bit    BANKMASK(CWG1AS0), 7
extern volatile __bit                   CWG1STRA            @ (((unsigned) &CWG1STR)*8) + 0;
#define                                 CWG1STRA_bit        BANKMASK(CWG1STR), 0
extern volatile __bit                   CWG1STRB            @ (((unsigned) &CWG1STR)*8) + 1;
#define                                 CWG1STRB_bit        BANKMASK(CWG1STR), 1
extern volatile __bit                   CWG1STRC            @ (((unsigned) &CWG1STR)*8) + 2;
#define                                 CWG1STRC_bit        BANKMASK(CWG1STR), 2
extern volatile __bit                   CWG1STRD            @ (((unsigned) &CWG1STR)*8) + 3;
#define                                 CWG1STRD_bit        BANKMASK(CWG1STR), 3
extern volatile __bit                   CWG2CS              @ (((unsigned) &CWG2CLKCON)*8) + 0;
#define                                 CWG2CS_bit          BANKMASK(CWG2CLKCON), 0
extern volatile __bit                   CWG2DAT0            @ (((unsigned) &CWG2DAT)*8) + 0;
#define                                 CWG2DAT0_bit        BANKMASK(CWG2DAT), 0
extern volatile __bit                   CWG2DAT1            @ (((unsigned) &CWG2DAT)*8) + 1;
#define                                 CWG2DAT1_bit        BANKMASK(CWG2DAT), 1
extern volatile __bit                   CWG2DAT2            @ (((unsigned) &CWG2DAT)*8) + 2;
#define                                 CWG2DAT2_bit        BANKMASK(CWG2DAT), 2
extern volatile __bit                   CWG2DAT3            @ (((unsigned) &CWG2DAT)*8) + 3;
#define                                 CWG2DAT3_bit        BANKMASK(CWG2DAT), 3
extern volatile __bit                   CWG2DBF0            @ (((unsigned) &CWG2DBF)*8) + 0;
#define                                 CWG2DBF0_bit        BANKMASK(CWG2DBF), 0
extern volatile __bit                   CWG2DBF1            @ (((unsigned) &CWG2DBF)*8) + 1;
#define                                 CWG2DBF1_bit        BANKMASK(CWG2DBF), 1
extern volatile __bit                   CWG2DBF2            @ (((unsigned) &CWG2DBF)*8) + 2;
#define                                 CWG2DBF2_bit        BANKMASK(CWG2DBF), 2
extern volatile __bit                   CWG2DBF3            @ (((unsigned) &CWG2DBF)*8) + 3;
#define                                 CWG2DBF3_bit        BANKMASK(CWG2DBF), 3
extern volatile __bit                   CWG2DBF4            @ (((unsigned) &CWG2DBF)*8) + 4;
#define                                 CWG2DBF4_bit        BANKMASK(CWG2DBF), 4
extern volatile __bit                   CWG2DBF5            @ (((unsigned) &CWG2DBF)*8) + 5;
#define                                 CWG2DBF5_bit        BANKMASK(CWG2DBF), 5
extern volatile __bit                   CWG2DBR0            @ (((unsigned) &CWG2DBR)*8) + 0;
#define                                 CWG2DBR0_bit        BANKMASK(CWG2DBR), 0
extern volatile __bit                   CWG2DBR1            @ (((unsigned) &CWG2DBR)*8) + 1;
#define                                 CWG2DBR1_bit        BANKMASK(CWG2DBR), 1
extern volatile __bit                   CWG2DBR2            @ (((unsigned) &CWG2DBR)*8) + 2;
#define                                 CWG2DBR2_bit        BANKMASK(CWG2DBR), 2
extern volatile __bit                   CWG2DBR3            @ (((unsigned) &CWG2DBR)*8) + 3;
#define                                 CWG2DBR3_bit        BANKMASK(CWG2DBR), 3
extern volatile __bit                   CWG2DBR4            @ (((unsigned) &CWG2DBR)*8) + 4;
#define                                 CWG2DBR4_bit        BANKMASK(CWG2DBR), 4
extern volatile __bit                   CWG2DBR5            @ (((unsigned) &CWG2DBR)*8) + 5;
#define                                 CWG2DBR5_bit        BANKMASK(CWG2DBR), 5
extern volatile __bit                   CWG2EN              @ (((unsigned) &CWG2CON0)*8) + 7;
#define                                 CWG2EN_bit          BANKMASK(CWG2CON0), 7
extern volatile __bit                   CWG2IE              @ (((unsigned) &PIE4)*8) + 7;
#define                                 CWG2IE_bit          BANKMASK(PIE4), 7
extern volatile __bit                   CWG2IF              @ (((unsigned) &PIR4)*8) + 7;
#define                                 CWG2IF_bit          BANKMASK(PIR4), 7
extern volatile __bit                   CWG2IN              @ (((unsigned) &CWG2CON1)*8) + 5;
#define                                 CWG2IN_bit          BANKMASK(CWG2CON1), 5
extern volatile __bit                   CWG2LD              @ (((unsigned) &CWG2CON0)*8) + 6;
#define                                 CWG2LD_bit          BANKMASK(CWG2CON0), 6
extern volatile __bit                   CWG2LSAC0           @ (((unsigned) &CWG2AS0)*8) + 2;
#define                                 CWG2LSAC0_bit       BANKMASK(CWG2AS0), 2
extern volatile __bit                   CWG2LSAC1           @ (((unsigned) &CWG2AS0)*8) + 3;
#define                                 CWG2LSAC1_bit       BANKMASK(CWG2AS0), 3
extern volatile __bit                   CWG2LSBD0           @ (((unsigned) &CWG2AS0)*8) + 4;
#define                                 CWG2LSBD0_bit       BANKMASK(CWG2AS0), 4
extern volatile __bit                   CWG2LSBD1           @ (((unsigned) &CWG2AS0)*8) + 5;
#define                                 CWG2LSBD1_bit       BANKMASK(CWG2AS0), 5
extern volatile __bit                   CWG2MD              @ (((unsigned) &PMD3)*8) + 7;
#define                                 CWG2MD_bit          BANKMASK(PMD3), 7
extern volatile __bit                   CWG2MODE0           @ (((unsigned) &CWG2CON0)*8) + 0;
#define                                 CWG2MODE0_bit       BANKMASK(CWG2CON0), 0
extern volatile __bit                   CWG2MODE1           @ (((unsigned) &CWG2CON0)*8) + 1;
#define                                 CWG2MODE1_bit       BANKMASK(CWG2CON0), 1
extern volatile __bit                   CWG2MODE2           @ (((unsigned) &CWG2CON0)*8) + 2;
#define                                 CWG2MODE2_bit       BANKMASK(CWG2CON0), 2
extern volatile __bit                   CWG2OVRA            @ (((unsigned) &CWG2STR)*8) + 4;
#define                                 CWG2OVRA_bit        BANKMASK(CWG2STR), 4
extern volatile __bit                   CWG2OVRB            @ (((unsigned) &CWG2STR)*8) + 5;
#define                                 CWG2OVRB_bit        BANKMASK(CWG2STR), 5
extern volatile __bit                   CWG2OVRC            @ (((unsigned) &CWG2STR)*8) + 6;
#define                                 CWG2OVRC_bit        BANKMASK(CWG2STR), 6
extern volatile __bit                   CWG2OVRD            @ (((unsigned) &CWG2STR)*8) + 7;
#define                                 CWG2OVRD_bit        BANKMASK(CWG2STR), 7
extern volatile __bit                   CWG2POLA            @ (((unsigned) &CWG2CON1)*8) + 0;
#define                                 CWG2POLA_bit        BANKMASK(CWG2CON1), 0
extern volatile __bit                   CWG2POLB            @ (((unsigned) &CWG2CON1)*8) + 1;
#define                                 CWG2POLB_bit        BANKMASK(CWG2CON1), 1
extern volatile __bit                   CWG2POLC            @ (((unsigned) &CWG2CON1)*8) + 2;
#define                                 CWG2POLC_bit        BANKMASK(CWG2CON1), 2
extern volatile __bit                   CWG2POLD            @ (((unsigned) &CWG2CON1)*8) + 3;
#define                                 CWG2POLD_bit        BANKMASK(CWG2CON1), 3
extern volatile __bit                   CWG2PPS0            @ (((unsigned) &CWG2PPS)*8) + 0;
#define                                 CWG2PPS0_bit        BANKMASK(CWG2PPS), 0
extern volatile __bit                   CWG2PPS1            @ (((unsigned) &CWG2PPS)*8) + 1;
#define                                 CWG2PPS1_bit        BANKMASK(CWG2PPS), 1
extern volatile __bit                   CWG2PPS2            @ (((unsigned) &CWG2PPS)*8) + 2;
#define                                 CWG2PPS2_bit        BANKMASK(CWG2PPS), 2
extern volatile __bit                   CWG2PPS3            @ (((unsigned) &CWG2PPS)*8) + 3;
#define                                 CWG2PPS3_bit        BANKMASK(CWG2PPS), 3
extern volatile __bit                   CWG2PPS4            @ (((unsigned) &CWG2PPS)*8) + 4;
#define                                 CWG2PPS4_bit        BANKMASK(CWG2PPS), 4
extern volatile __bit                   CWG2REN             @ (((unsigned) &CWG2AS0)*8) + 6;
#define                                 CWG2REN_bit         BANKMASK(CWG2AS0), 6
extern volatile __bit                   CWG2SHUTDOWN        @ (((unsigned) &CWG2AS0)*8) + 7;
#define                                 CWG2SHUTDOWN_bit    BANKMASK(CWG2AS0), 7
extern volatile __bit                   CWG2STRA            @ (((unsigned) &CWG2STR)*8) + 0;
#define                                 CWG2STRA_bit        BANKMASK(CWG2STR), 0
extern volatile __bit                   CWG2STRB            @ (((unsigned) &CWG2STR)*8) + 1;
#define                                 CWG2STRB_bit        BANKMASK(CWG2STR), 1
extern volatile __bit                   CWG2STRC            @ (((unsigned) &CWG2STR)*8) + 2;
#define                                 CWG2STRC_bit        BANKMASK(CWG2STR), 2
extern volatile __bit                   CWG2STRD            @ (((unsigned) &CWG2STR)*8) + 3;
#define                                 CWG2STRD_bit        BANKMASK(CWG2STR), 3
extern volatile __bit                   C_SHAD              @ (((unsigned) &STATUS_SHAD)*8) + 0;
#define                                 C_SHAD_bit          BANKMASK(STATUS_SHAD), 0
extern volatile __bit                   DAC1EN              @ (((unsigned) &DACCON0)*8) + 7;
#define                                 DAC1EN_bit          BANKMASK(DACCON0), 7
extern volatile __bit                   DAC1NSS             @ (((unsigned) &DACCON0)*8) + 0;
#define                                 DAC1NSS_bit         BANKMASK(DACCON0), 0
extern volatile __bit                   DAC1OE              @ (((unsigned) &DACCON0)*8) + 5;
#define                                 DAC1OE_bit          BANKMASK(DACCON0), 5
extern volatile __bit                   DAC1PSS0            @ (((unsigned) &DACCON0)*8) + 2;
#define                                 DAC1PSS0_bit        BANKMASK(DACCON0), 2
extern volatile __bit                   DAC1PSS1            @ (((unsigned) &DACCON0)*8) + 3;
#define                                 DAC1PSS1_bit        BANKMASK(DACCON0), 3
extern volatile __bit                   DAC1R0              @ (((unsigned) &DACCON1)*8) + 0;
#define                                 DAC1R0_bit          BANKMASK(DACCON1), 0
extern volatile __bit                   DAC1R1              @ (((unsigned) &DACCON1)*8) + 1;
#define                                 DAC1R1_bit          BANKMASK(DACCON1), 1
extern volatile __bit                   DAC1R2              @ (((unsigned) &DACCON1)*8) + 2;
#define                                 DAC1R2_bit          BANKMASK(DACCON1), 2
extern volatile __bit                   DAC1R3              @ (((unsigned) &DACCON1)*8) + 3;
#define                                 DAC1R3_bit          BANKMASK(DACCON1), 3
extern volatile __bit                   DAC1R4              @ (((unsigned) &DACCON1)*8) + 4;
#define                                 DAC1R4_bit          BANKMASK(DACCON1), 4
extern volatile __bit                   DACMD               @ (((unsigned) &PMD2)*8) + 6;
#define                                 DACMD_bit           BANKMASK(PMD2), 6
extern volatile __bit                   DC                  @ (((unsigned) &STATUS)*8) + 1;
#define                                 DC_bit              BANKMASK(STATUS), 1
extern volatile __bit                   DC_SHAD             @ (((unsigned) &STATUS_SHAD)*8) + 1;
#define                                 DC_SHAD_bit         BANKMASK(STATUS_SHAD), 1
extern volatile __bit                   DHEN                @ (((unsigned) &SSP1CON3)*8) + 0;
#define                                 DHEN_bit            BANKMASK(SSP1CON3), 0
extern volatile __bit                   DOE                 @ (((unsigned) &CPUDOZE)*8) + 4;
#define                                 DOE_bit             BANKMASK(CPUDOZE), 4
extern volatile __bit                   DOZE0               @ (((unsigned) &CPUDOZE)*8) + 0;
#define                                 DOZE0_bit           BANKMASK(CPUDOZE), 0
extern volatile __bit                   DOZE1               @ (((unsigned) &CPUDOZE)*8) + 1;
#define                                 DOZE1_bit           BANKMASK(CPUDOZE), 1
extern volatile __bit                   DOZE2               @ (((unsigned) &CPUDOZE)*8) + 2;
#define                                 DOZE2_bit           BANKMASK(CPUDOZE), 2
extern volatile __bit                   DOZEN               @ (((unsigned) &CPUDOZE)*8) + 6;
#define                                 DOZEN_bit           BANKMASK(CPUDOZE), 6
extern volatile __bit                   DSMMD               @ (((unsigned) &PMD5)*8) + 0;
#define                                 DSMMD_bit           BANKMASK(PMD5), 0
extern volatile __bit                   D_nA                @ (((unsigned) &SSP1STAT)*8) + 5;
#define                                 D_nA_bit            BANKMASK(SSP1STAT), 5
extern volatile __bit                   EXTOEN              @ (((unsigned) &OSCEN)*8) + 7;
#define                                 EXTOEN_bit          BANKMASK(OSCEN), 7
extern volatile __bit                   EXTOR               @ (((unsigned) &OSCSTAT1)*8) + 7;
#define                                 EXTOR_bit           BANKMASK(OSCSTAT1), 7
extern volatile __bit                   FERR                @ (((unsigned) &RC1STA)*8) + 2;
#define                                 FERR_bit            BANKMASK(RC1STA), 2
extern volatile __bit                   FREE                @ (((unsigned) &NVMCON1)*8) + 4;
#define                                 FREE_bit            BANKMASK(NVMCON1), 4
extern volatile __bit                   FVREN               @ (((unsigned) &FVRCON)*8) + 7;
#define                                 FVREN_bit           BANKMASK(FVRCON), 7
extern volatile __bit                   FVRMD               @ (((unsigned) &PMD0)*8) + 6;
#define                                 FVRMD_bit           BANKMASK(PMD0), 6
extern volatile __bit                   FVRRDY              @ (((unsigned) &FVRCON)*8) + 6;
#define                                 FVRRDY_bit          BANKMASK(FVRCON), 6
extern volatile __bit                   G1EN                @ (((unsigned) &CWG1CON0)*8) + 7;
#define                                 G1EN_bit            BANKMASK(CWG1CON0), 7
extern volatile __bit                   G2EN                @ (((unsigned) &CWG2CON0)*8) + 7;
#define                                 G2EN_bit            BANKMASK(CWG2CON0), 7
extern volatile __bit                   GCEN                @ (((unsigned) &SSP1CON2)*8) + 7;
#define                                 GCEN_bit            BANKMASK(SSP1CON2), 7
extern volatile __bit                   GIE                 @ (((unsigned) &INTCON)*8) + 7;
#define                                 GIE_bit             BANKMASK(INTCON), 7
extern volatile __bit                   GO                  @ (((unsigned) &ADCON0)*8) + 1;
#define                                 GO_bit              BANKMASK(ADCON0), 1
extern volatile __bit                   GO_nDONE            @ (((unsigned) &ADCON0)*8) + 1;
#define                                 GO_nDONE_bit        BANKMASK(ADCON0), 1
extern volatile __bit                   HFFRQ0              @ (((unsigned) &OSCFRQ)*8) + 0;
#define                                 HFFRQ0_bit          BANKMASK(OSCFRQ), 0
extern volatile __bit                   HFFRQ1              @ (((unsigned) &OSCFRQ)*8) + 1;
#define                                 HFFRQ1_bit          BANKMASK(OSCFRQ), 1
extern volatile __bit                   HFFRQ2              @ (((unsigned) &OSCFRQ)*8) + 2;
#define                                 HFFRQ2_bit          BANKMASK(OSCFRQ), 2
extern volatile __bit                   HFFRQ3              @ (((unsigned) &OSCFRQ)*8) + 3;
#define                                 HFFRQ3_bit          BANKMASK(OSCFRQ), 3
extern volatile __bit                   HFOEN               @ (((unsigned) &OSCEN)*8) + 6;
#define                                 HFOEN_bit           BANKMASK(OSCEN), 6
extern volatile __bit                   HFOR                @ (((unsigned) &OSCSTAT1)*8) + 6;
#define                                 HFOR_bit            BANKMASK(OSCSTAT1), 6
extern volatile __bit                   HFTUN0              @ (((unsigned) &OSCTUNE)*8) + 0;
#define                                 HFTUN0_bit          BANKMASK(OSCTUNE), 0
extern volatile __bit                   HFTUN1              @ (((unsigned) &OSCTUNE)*8) + 1;
#define                                 HFTUN1_bit          BANKMASK(OSCTUNE), 1
extern volatile __bit                   HFTUN2              @ (((unsigned) &OSCTUNE)*8) + 2;
#define                                 HFTUN2_bit          BANKMASK(OSCTUNE), 2
extern volatile __bit                   HFTUN3              @ (((unsigned) &OSCTUNE)*8) + 3;
#define                                 HFTUN3_bit          BANKMASK(OSCTUNE), 3
extern volatile __bit                   HFTUN4              @ (((unsigned) &OSCTUNE)*8) + 4;
#define                                 HFTUN4_bit          BANKMASK(OSCTUNE), 4
extern volatile __bit                   HFTUN5              @ (((unsigned) &OSCTUNE)*8) + 5;
#define                                 HFTUN5_bit          BANKMASK(OSCTUNE), 5
extern volatile __bit                   IDLEN               @ (((unsigned) &CPUDOZE)*8) + 7;
#define                                 IDLEN_bit           BANKMASK(CPUDOZE), 7
extern volatile __bit                   INLVLA0             @ (((unsigned) &INLVLA)*8) + 0;
#define                                 INLVLA0_bit         BANKMASK(INLVLA), 0
extern volatile __bit                   INLVLA1             @ (((unsigned) &INLVLA)*8) + 1;
#define                                 INLVLA1_bit         BANKMASK(INLVLA), 1
extern volatile __bit                   INLVLA2             @ (((unsigned) &INLVLA)*8) + 2;
#define                                 INLVLA2_bit         BANKMASK(INLVLA), 2
extern volatile __bit                   INLVLA3             @ (((unsigned) &INLVLA)*8) + 3;
#define                                 INLVLA3_bit         BANKMASK(INLVLA), 3
extern volatile __bit                   INLVLA4             @ (((unsigned) &INLVLA)*8) + 4;
#define                                 INLVLA4_bit         BANKMASK(INLVLA), 4
extern volatile __bit                   INLVLA5             @ (((unsigned) &INLVLA)*8) + 5;
#define                                 INLVLA5_bit         BANKMASK(INLVLA), 5
extern volatile __bit                   INLVLC0             @ (((unsigned) &INLVLC)*8) + 0;
#define                                 INLVLC0_bit         BANKMASK(INLVLC), 0
extern volatile __bit                   INLVLC1             @ (((unsigned) &INLVLC)*8) + 1;
#define                                 INLVLC1_bit         BANKMASK(INLVLC), 1
extern volatile __bit                   INLVLC2             @ (((unsigned) &INLVLC)*8) + 2;
#define                                 INLVLC2_bit         BANKMASK(INLVLC), 2
extern volatile __bit                   INLVLC3             @ (((unsigned) &INLVLC)*8) + 3;
#define                                 INLVLC3_bit         BANKMASK(INLVLC), 3
extern volatile __bit                   INLVLC4             @ (((unsigned) &INLVLC)*8) + 4;
#define                                 INLVLC4_bit         BANKMASK(INLVLC), 4
extern volatile __bit                   INLVLC5             @ (((unsigned) &INLVLC)*8) + 5;
#define                                 INLVLC5_bit         BANKMASK(INLVLC), 5
extern volatile __bit                   INTE                @ (((unsigned) &PIE0)*8) + 0;
#define                                 INTE_bit            BANKMASK(PIE0), 0
extern volatile __bit                   INTEDG              @ (((unsigned) &INTCON)*8) + 0;
#define                                 INTEDG_bit          BANKMASK(INTCON), 0
extern volatile __bit                   INTF                @ (((unsigned) &PIR0)*8) + 0;
#define                                 INTF_bit            BANKMASK(PIR0), 0
extern volatile __bit                   INTPPS0             @ (((unsigned) &INTPPS)*8) + 0;
#define                                 INTPPS0_bit         BANKMASK(INTPPS), 0
extern volatile __bit                   INTPPS1             @ (((unsigned) &INTPPS)*8) + 1;
#define                                 INTPPS1_bit         BANKMASK(INTPPS), 1
extern volatile __bit                   INTPPS2             @ (((unsigned) &INTPPS)*8) + 2;
#define                                 INTPPS2_bit         BANKMASK(INTPPS), 2
extern volatile __bit                   INTPPS3             @ (((unsigned) &INTPPS)*8) + 3;
#define                                 INTPPS3_bit         BANKMASK(INTPPS), 3
extern volatile __bit                   INTPPS4             @ (((unsigned) &INTPPS)*8) + 4;
#define                                 INTPPS4_bit         BANKMASK(INTPPS), 4
extern volatile __bit                   IOCAF0              @ (((unsigned) &IOCAF)*8) + 0;
#define                                 IOCAF0_bit          BANKMASK(IOCAF), 0
extern volatile __bit                   IOCAF1              @ (((unsigned) &IOCAF)*8) + 1;
#define                                 IOCAF1_bit          BANKMASK(IOCAF), 1
extern volatile __bit                   IOCAF2              @ (((unsigned) &IOCAF)*8) + 2;
#define                                 IOCAF2_bit          BANKMASK(IOCAF), 2
extern volatile __bit                   IOCAF3              @ (((unsigned) &IOCAF)*8) + 3;
#define                                 IOCAF3_bit          BANKMASK(IOCAF), 3
extern volatile __bit                   IOCAF4              @ (((unsigned) &IOCAF)*8) + 4;
#define                                 IOCAF4_bit          BANKMASK(IOCAF), 4
extern volatile __bit                   IOCAF5              @ (((unsigned) &IOCAF)*8) + 5;
#define                                 IOCAF5_bit          BANKMASK(IOCAF), 5
extern volatile __bit                   IOCAN0              @ (((unsigned) &IOCAN)*8) + 0;
#define                                 IOCAN0_bit          BANKMASK(IOCAN), 0
extern volatile __bit                   IOCAN1              @ (((unsigned) &IOCAN)*8) + 1;
#define                                 IOCAN1_bit          BANKMASK(IOCAN), 1
extern volatile __bit                   IOCAN2              @ (((unsigned) &IOCAN)*8) + 2;
#define                                 IOCAN2_bit          BANKMASK(IOCAN), 2
extern volatile __bit                   IOCAN3              @ (((unsigned) &IOCAN)*8) + 3;
#define                                 IOCAN3_bit          BANKMASK(IOCAN), 3
extern volatile __bit                   IOCAN4              @ (((unsigned) &IOCAN)*8) + 4;
#define                                 IOCAN4_bit          BANKMASK(IOCAN), 4
extern volatile __bit                   IOCAN5              @ (((unsigned) &IOCAN)*8) + 5;
#define                                 IOCAN5_bit          BANKMASK(IOCAN), 5
extern volatile __bit                   IOCAP0              @ (((unsigned) &IOCAP)*8) + 0;
#define                                 IOCAP0_bit          BANKMASK(IOCAP), 0
extern volatile __bit                   IOCAP1              @ (((unsigned) &IOCAP)*8) + 1;
#define                                 IOCAP1_bit          BANKMASK(IOCAP), 1
extern volatile __bit                   IOCAP2              @ (((unsigned) &IOCAP)*8) + 2;
#define                                 IOCAP2_bit          BANKMASK(IOCAP), 2
extern volatile __bit                   IOCAP3              @ (((unsigned) &IOCAP)*8) + 3;
#define                                 IOCAP3_bit          BANKMASK(IOCAP), 3
extern volatile __bit                   IOCAP4              @ (((unsigned) &IOCAP)*8) + 4;
#define                                 IOCAP4_bit          BANKMASK(IOCAP), 4
extern volatile __bit                   IOCAP5              @ (((unsigned) &IOCAP)*8) + 5;
#define                                 IOCAP5_bit          BANKMASK(IOCAP), 5
extern volatile __bit                   IOCCF0              @ (((unsigned) &IOCCF)*8) + 0;
#define                                 IOCCF0_bit          BANKMASK(IOCCF), 0
extern volatile __bit                   IOCCF1              @ (((unsigned) &IOCCF)*8) + 1;
#define                                 IOCCF1_bit          BANKMASK(IOCCF), 1
extern volatile __bit                   IOCCF2              @ (((unsigned) &IOCCF)*8) + 2;
#define                                 IOCCF2_bit          BANKMASK(IOCCF), 2
extern volatile __bit                   IOCCF3              @ (((unsigned) &IOCCF)*8) + 3;
#define                                 IOCCF3_bit          BANKMASK(IOCCF), 3
extern volatile __bit                   IOCCF4              @ (((unsigned) &IOCCF)*8) + 4;
#define                                 IOCCF4_bit          BANKMASK(IOCCF), 4
extern volatile __bit                   IOCCF5              @ (((unsigned) &IOCCF)*8) + 5;
#define                                 IOCCF5_bit          BANKMASK(IOCCF), 5
extern volatile __bit                   IOCCN0              @ (((unsigned) &IOCCN)*8) + 0;
#define                                 IOCCN0_bit          BANKMASK(IOCCN), 0
extern volatile __bit                   IOCCN1              @ (((unsigned) &IOCCN)*8) + 1;
#define                                 IOCCN1_bit          BANKMASK(IOCCN), 1
extern volatile __bit                   IOCCN2              @ (((unsigned) &IOCCN)*8) + 2;
#define                                 IOCCN2_bit          BANKMASK(IOCCN), 2
extern volatile __bit                   IOCCN3              @ (((unsigned) &IOCCN)*8) + 3;
#define                                 IOCCN3_bit          BANKMASK(IOCCN), 3
extern volatile __bit                   IOCCN4              @ (((unsigned) &IOCCN)*8) + 4;
#define                                 IOCCN4_bit          BANKMASK(IOCCN), 4
extern volatile __bit                   IOCCN5              @ (((unsigned) &IOCCN)*8) + 5;
#define                                 IOCCN5_bit          BANKMASK(IOCCN), 5
extern volatile __bit                   IOCCP0              @ (((unsigned) &IOCCP)*8) + 0;
#define                                 IOCCP0_bit          BANKMASK(IOCCP), 0
extern volatile __bit                   IOCCP1              @ (((unsigned) &IOCCP)*8) + 1;
#define                                 IOCCP1_bit          BANKMASK(IOCCP), 1
extern volatile __bit                   IOCCP2              @ (((unsigned) &IOCCP)*8) + 2;
#define                                 IOCCP2_bit          BANKMASK(IOCCP), 2
extern volatile __bit                   IOCCP3              @ (((unsigned) &IOCCP)*8) + 3;
#define                                 IOCCP3_bit          BANKMASK(IOCCP), 3
extern volatile __bit                   IOCCP4              @ (((unsigned) &IOCCP)*8) + 4;
#define                                 IOCCP4_bit          BANKMASK(IOCCP), 4
extern volatile __bit                   IOCCP5              @ (((unsigned) &IOCCP)*8) + 5;
#define                                 IOCCP5_bit          BANKMASK(IOCCP), 5
extern volatile __bit                   IOCIE               @ (((unsigned) &PIE0)*8) + 4;
#define                                 IOCIE_bit           BANKMASK(PIE0), 4
extern volatile __bit                   IOCIF               @ (((unsigned) &PIR0)*8) + 4;
#define                                 IOCIF_bit           BANKMASK(PIR0), 4
extern volatile __bit                   IOCMD               @ (((unsigned) &PMD0)*8) + 0;
#define                                 IOCMD_bit           BANKMASK(PMD0), 0
extern volatile __bit                   LATA0               @ (((unsigned) &LATA)*8) + 0;
#define                                 LATA0_bit           BANKMASK(LATA), 0
extern volatile __bit                   LATA1               @ (((unsigned) &LATA)*8) + 1;
#define                                 LATA1_bit           BANKMASK(LATA), 1
extern volatile __bit                   LATA2               @ (((unsigned) &LATA)*8) + 2;
#define                                 LATA2_bit           BANKMASK(LATA), 2
extern volatile __bit                   LATA4               @ (((unsigned) &LATA)*8) + 4;
#define                                 LATA4_bit           BANKMASK(LATA), 4
extern volatile __bit                   LATA5               @ (((unsigned) &LATA)*8) + 5;
#define                                 LATA5_bit           BANKMASK(LATA), 5
extern volatile __bit                   LATC0               @ (((unsigned) &LATC)*8) + 0;
#define                                 LATC0_bit           BANKMASK(LATC), 0
extern volatile __bit                   LATC1               @ (((unsigned) &LATC)*8) + 1;
#define                                 LATC1_bit           BANKMASK(LATC), 1
extern volatile __bit                   LATC2               @ (((unsigned) &LATC)*8) + 2;
#define                                 LATC2_bit           BANKMASK(LATC), 2
extern volatile __bit                   LATC3               @ (((unsigned) &LATC)*8) + 3;
#define                                 LATC3_bit           BANKMASK(LATC), 3
extern volatile __bit                   LATC4               @ (((unsigned) &LATC)*8) + 4;
#define                                 LATC4_bit           BANKMASK(LATC), 4
extern volatile __bit                   LATC5               @ (((unsigned) &LATC)*8) + 5;
#define                                 LATC5_bit           BANKMASK(LATC), 5
extern volatile __bit                   LC1D1S0             @ (((unsigned) &CLC1SEL0)*8) + 0;
#define                                 LC1D1S0_bit         BANKMASK(CLC1SEL0), 0
extern volatile __bit                   LC1D1S1             @ (((unsigned) &CLC1SEL0)*8) + 1;
#define                                 LC1D1S1_bit         BANKMASK(CLC1SEL0), 1
extern volatile __bit                   LC1D1S2             @ (((unsigned) &CLC1SEL0)*8) + 2;
#define                                 LC1D1S2_bit         BANKMASK(CLC1SEL0), 2
extern volatile __bit                   LC1D1S3             @ (((unsigned) &CLC1SEL0)*8) + 3;
#define                                 LC1D1S3_bit         BANKMASK(CLC1SEL0), 3
extern volatile __bit                   LC1D1S4             @ (((unsigned) &CLC1SEL0)*8) + 4;
#define                                 LC1D1S4_bit         BANKMASK(CLC1SEL0), 4
extern volatile __bit                   LC1D1S5             @ (((unsigned) &CLC1SEL0)*8) + 5;
#define                                 LC1D1S5_bit         BANKMASK(CLC1SEL0), 5
extern volatile __bit                   LC1D2S0             @ (((unsigned) &CLC1SEL1)*8) + 0;
#define                                 LC1D2S0_bit         BANKMASK(CLC1SEL1), 0
extern volatile __bit                   LC1D2S1             @ (((unsigned) &CLC1SEL1)*8) + 1;
#define                                 LC1D2S1_bit         BANKMASK(CLC1SEL1), 1
extern volatile __bit                   LC1D2S2             @ (((unsigned) &CLC1SEL1)*8) + 2;
#define                                 LC1D2S2_bit         BANKMASK(CLC1SEL1), 2
extern volatile __bit                   LC1D2S3             @ (((unsigned) &CLC1SEL1)*8) + 3;
#define                                 LC1D2S3_bit         BANKMASK(CLC1SEL1), 3
extern volatile __bit                   LC1D2S4             @ (((unsigned) &CLC1SEL1)*8) + 4;
#define                                 LC1D2S4_bit         BANKMASK(CLC1SEL1), 4
extern volatile __bit                   LC1D2S5             @ (((unsigned) &CLC1SEL1)*8) + 5;
#define                                 LC1D2S5_bit         BANKMASK(CLC1SEL1), 5
extern volatile __bit                   LC1D3S0             @ (((unsigned) &CLC1SEL2)*8) + 0;
#define                                 LC1D3S0_bit         BANKMASK(CLC1SEL2), 0
extern volatile __bit                   LC1D3S1             @ (((unsigned) &CLC1SEL2)*8) + 1;
#define                                 LC1D3S1_bit         BANKMASK(CLC1SEL2), 1
extern volatile __bit                   LC1D3S2             @ (((unsigned) &CLC1SEL2)*8) + 2;
#define                                 LC1D3S2_bit         BANKMASK(CLC1SEL2), 2
extern volatile __bit                   LC1D3S3             @ (((unsigned) &CLC1SEL2)*8) + 3;
#define                                 LC1D3S3_bit         BANKMASK(CLC1SEL2), 3
extern volatile __bit                   LC1D3S4             @ (((unsigned) &CLC1SEL2)*8) + 4;
#define                                 LC1D3S4_bit         BANKMASK(CLC1SEL2), 4
extern volatile __bit                   LC1D3S5             @ (((unsigned) &CLC1SEL2)*8) + 5;
#define                                 LC1D3S5_bit         BANKMASK(CLC1SEL2), 5
extern volatile __bit                   LC1D4S0             @ (((unsigned) &CLC1SEL3)*8) + 0;
#define                                 LC1D4S0_bit         BANKMASK(CLC1SEL3), 0
extern volatile __bit                   LC1D4S1             @ (((unsigned) &CLC1SEL3)*8) + 1;
#define                                 LC1D4S1_bit         BANKMASK(CLC1SEL3), 1
extern volatile __bit                   LC1D4S2             @ (((unsigned) &CLC1SEL3)*8) + 2;
#define                                 LC1D4S2_bit         BANKMASK(CLC1SEL3), 2
extern volatile __bit                   LC1D4S3             @ (((unsigned) &CLC1SEL3)*8) + 3;
#define                                 LC1D4S3_bit         BANKMASK(CLC1SEL3), 3
extern volatile __bit                   LC1D4S4             @ (((unsigned) &CLC1SEL3)*8) + 4;
#define                                 LC1D4S4_bit         BANKMASK(CLC1SEL3), 4
extern volatile __bit                   LC1D4S5             @ (((unsigned) &CLC1SEL3)*8) + 5;
#define                                 LC1D4S5_bit         BANKMASK(CLC1SEL3), 5
extern volatile __bit                   LC1EN               @ (((unsigned) &CLC1CON)*8) + 7;
#define                                 LC1EN_bit           BANKMASK(CLC1CON), 7
extern volatile __bit                   LC1G1D1N            @ (((unsigned) &CLC1GLS0)*8) + 0;
#define                                 LC1G1D1N_bit        BANKMASK(CLC1GLS0), 0
extern volatile __bit                   LC1G1D1T            @ (((unsigned) &CLC1GLS0)*8) + 1;
#define                                 LC1G1D1T_bit        BANKMASK(CLC1GLS0), 1
extern volatile __bit                   LC1G1D2N            @ (((unsigned) &CLC1GLS0)*8) + 2;
#define                                 LC1G1D2N_bit        BANKMASK(CLC1GLS0), 2
extern volatile __bit                   LC1G1D2T            @ (((unsigned) &CLC1GLS0)*8) + 3;
#define                                 LC1G1D2T_bit        BANKMASK(CLC1GLS0), 3
extern volatile __bit                   LC1G1D3N            @ (((unsigned) &CLC1GLS0)*8) + 4;
#define                                 LC1G1D3N_bit        BANKMASK(CLC1GLS0), 4
extern volatile __bit                   LC1G1D3T            @ (((unsigned) &CLC1GLS0)*8) + 5;
#define                                 LC1G1D3T_bit        BANKMASK(CLC1GLS0), 5
extern volatile __bit                   LC1G1D4N            @ (((unsigned) &CLC1GLS0)*8) + 6;
#define                                 LC1G1D4N_bit        BANKMASK(CLC1GLS0), 6
extern volatile __bit                   LC1G1D4T            @ (((unsigned) &CLC1GLS0)*8) + 7;
#define                                 LC1G1D4T_bit        BANKMASK(CLC1GLS0), 7
extern volatile __bit                   LC1G1POL            @ (((unsigned) &CLC1POL)*8) + 0;
#define                                 LC1G1POL_bit        BANKMASK(CLC1POL), 0
extern volatile __bit                   LC1G2D1N            @ (((unsigned) &CLC1GLS1)*8) + 0;
#define                                 LC1G2D1N_bit        BANKMASK(CLC1GLS1), 0
extern volatile __bit                   LC1G2D1T            @ (((unsigned) &CLC1GLS1)*8) + 1;
#define                                 LC1G2D1T_bit        BANKMASK(CLC1GLS1), 1
extern volatile __bit                   LC1G2D2N            @ (((unsigned) &CLC1GLS1)*8) + 2;
#define                                 LC1G2D2N_bit        BANKMASK(CLC1GLS1), 2
extern volatile __bit                   LC1G2D2T            @ (((unsigned) &CLC1GLS1)*8) + 3;
#define                                 LC1G2D2T_bit        BANKMASK(CLC1GLS1), 3
extern volatile __bit                   LC1G2D3N            @ (((unsigned) &CLC1GLS1)*8) + 4;
#define                                 LC1G2D3N_bit        BANKMASK(CLC1GLS1), 4
extern volatile __bit                   LC1G2D3T            @ (((unsigned) &CLC1GLS1)*8) + 5;
#define                                 LC1G2D3T_bit        BANKMASK(CLC1GLS1), 5
extern volatile __bit                   LC1G2D4N            @ (((unsigned) &CLC1GLS1)*8) + 6;
#define                                 LC1G2D4N_bit        BANKMASK(CLC1GLS1), 6
extern volatile __bit                   LC1G2D4T            @ (((unsigned) &CLC1GLS1)*8) + 7;
#define                                 LC1G2D4T_bit        BANKMASK(CLC1GLS1), 7
extern volatile __bit                   LC1G2POL            @ (((unsigned) &CLC1POL)*8) + 1;
#define                                 LC1G2POL_bit        BANKMASK(CLC1POL), 1
extern volatile __bit                   LC1G3D1N            @ (((unsigned) &CLC1GLS2)*8) + 0;
#define                                 LC1G3D1N_bit        BANKMASK(CLC1GLS2), 0
extern volatile __bit                   LC1G3D1T            @ (((unsigned) &CLC1GLS2)*8) + 1;
#define                                 LC1G3D1T_bit        BANKMASK(CLC1GLS2), 1
extern volatile __bit                   LC1G3D2N            @ (((unsigned) &CLC1GLS2)*8) + 2;
#define                                 LC1G3D2N_bit        BANKMASK(CLC1GLS2), 2
extern volatile __bit                   LC1G3D2T            @ (((unsigned) &CLC1GLS2)*8) + 3;
#define                                 LC1G3D2T_bit        BANKMASK(CLC1GLS2), 3
extern volatile __bit                   LC1G3D3N            @ (((unsigned) &CLC1GLS2)*8) + 4;
#define                                 LC1G3D3N_bit        BANKMASK(CLC1GLS2), 4
extern volatile __bit                   LC1G3D3T            @ (((unsigned) &CLC1GLS2)*8) + 5;
#define                                 LC1G3D3T_bit        BANKMASK(CLC1GLS2), 5
extern volatile __bit                   LC1G3D4N            @ (((unsigned) &CLC1GLS2)*8) + 6;
#define                                 LC1G3D4N_bit        BANKMASK(CLC1GLS2), 6
extern volatile __bit                   LC1G3D4T            @ (((unsigned) &CLC1GLS2)*8) + 7;
#define                                 LC1G3D4T_bit        BANKMASK(CLC1GLS2), 7
extern volatile __bit                   LC1G3POL            @ (((unsigned) &CLC1POL)*8) + 2;
#define                                 LC1G3POL_bit        BANKMASK(CLC1POL), 2
extern volatile __bit                   LC1G4D1N            @ (((unsigned) &CLC1GLS3)*8) + 0;
#define                                 LC1G4D1N_bit        BANKMASK(CLC1GLS3), 0
extern volatile __bit                   LC1G4D1T            @ (((unsigned) &CLC1GLS3)*8) + 1;
#define                                 LC1G4D1T_bit        BANKMASK(CLC1GLS3), 1
extern volatile __bit                   LC1G4D2N            @ (((unsigned) &CLC1GLS3)*8) + 2;
#define                                 LC1G4D2N_bit        BANKMASK(CLC1GLS3), 2
extern volatile __bit                   LC1G4D2T            @ (((unsigned) &CLC1GLS3)*8) + 3;
#define                                 LC1G4D2T_bit        BANKMASK(CLC1GLS3), 3
extern volatile __bit                   LC1G4D3N            @ (((unsigned) &CLC1GLS3)*8) + 4;
#define                                 LC1G4D3N_bit        BANKMASK(CLC1GLS3), 4
extern volatile __bit                   LC1G4D3T            @ (((unsigned) &CLC1GLS3)*8) + 5;
#define                                 LC1G4D3T_bit        BANKMASK(CLC1GLS3), 5
extern volatile __bit                   LC1G4D4N            @ (((unsigned) &CLC1GLS3)*8) + 6;
#define                                 LC1G4D4N_bit        BANKMASK(CLC1GLS3), 6
extern volatile __bit                   LC1G4D4T            @ (((unsigned) &CLC1GLS3)*8) + 7;
#define                                 LC1G4D4T_bit        BANKMASK(CLC1GLS3), 7
extern volatile __bit                   LC1G4POL            @ (((unsigned) &CLC1POL)*8) + 3;
#define                                 LC1G4POL_bit        BANKMASK(CLC1POL), 3
extern volatile __bit                   LC1INTN             @ (((unsigned) &CLC1CON)*8) + 3;
#define                                 LC1INTN_bit         BANKMASK(CLC1CON), 3
extern volatile __bit                   LC1INTP             @ (((unsigned) &CLC1CON)*8) + 4;
#define                                 LC1INTP_bit         BANKMASK(CLC1CON), 4
extern volatile __bit                   LC1MODE0            @ (((unsigned) &CLC1CON)*8) + 0;
#define                                 LC1MODE0_bit        BANKMASK(CLC1CON), 0
extern volatile __bit                   LC1MODE1            @ (((unsigned) &CLC1CON)*8) + 1;
#define                                 LC1MODE1_bit        BANKMASK(CLC1CON), 1
extern volatile __bit                   LC1MODE2            @ (((unsigned) &CLC1CON)*8) + 2;
#define                                 LC1MODE2_bit        BANKMASK(CLC1CON), 2
extern volatile __bit                   LC1OUT              @ (((unsigned) &CLC1CON)*8) + 5;
#define                                 LC1OUT_bit          BANKMASK(CLC1CON), 5
extern volatile __bit                   LC1POL              @ (((unsigned) &CLC1POL)*8) + 7;
#define                                 LC1POL_bit          BANKMASK(CLC1POL), 7
extern volatile __bit                   LC2D1S0             @ (((unsigned) &CLC2SEL0)*8) + 0;
#define                                 LC2D1S0_bit         BANKMASK(CLC2SEL0), 0
extern volatile __bit                   LC2D1S1             @ (((unsigned) &CLC2SEL0)*8) + 1;
#define                                 LC2D1S1_bit         BANKMASK(CLC2SEL0), 1
extern volatile __bit                   LC2D1S2             @ (((unsigned) &CLC2SEL0)*8) + 2;
#define                                 LC2D1S2_bit         BANKMASK(CLC2SEL0), 2
extern volatile __bit                   LC2D1S3             @ (((unsigned) &CLC2SEL0)*8) + 3;
#define                                 LC2D1S3_bit         BANKMASK(CLC2SEL0), 3
extern volatile __bit                   LC2D1S4             @ (((unsigned) &CLC2SEL0)*8) + 4;
#define                                 LC2D1S4_bit         BANKMASK(CLC2SEL0), 4
extern volatile __bit                   LC2D1S5             @ (((unsigned) &CLC2SEL0)*8) + 5;
#define                                 LC2D1S5_bit         BANKMASK(CLC2SEL0), 5
extern volatile __bit                   LC2D2S0             @ (((unsigned) &CLC2SEL1)*8) + 0;
#define                                 LC2D2S0_bit         BANKMASK(CLC2SEL1), 0
extern volatile __bit                   LC2D2S1             @ (((unsigned) &CLC2SEL1)*8) + 1;
#define                                 LC2D2S1_bit         BANKMASK(CLC2SEL1), 1
extern volatile __bit                   LC2D2S2             @ (((unsigned) &CLC2SEL1)*8) + 2;
#define                                 LC2D2S2_bit         BANKMASK(CLC2SEL1), 2
extern volatile __bit                   LC2D2S3             @ (((unsigned) &CLC2SEL1)*8) + 3;
#define                                 LC2D2S3_bit         BANKMASK(CLC2SEL1), 3
extern volatile __bit                   LC2D2S4             @ (((unsigned) &CLC2SEL1)*8) + 4;
#define                                 LC2D2S4_bit         BANKMASK(CLC2SEL1), 4
extern volatile __bit                   LC2D2S5             @ (((unsigned) &CLC2SEL1)*8) + 5;
#define                                 LC2D2S5_bit         BANKMASK(CLC2SEL1), 5
extern volatile __bit                   LC2D3S0             @ (((unsigned) &CLC2SEL2)*8) + 0;
#define                                 LC2D3S0_bit         BANKMASK(CLC2SEL2), 0
extern volatile __bit                   LC2D3S1             @ (((unsigned) &CLC2SEL2)*8) + 1;
#define                                 LC2D3S1_bit         BANKMASK(CLC2SEL2), 1
extern volatile __bit                   LC2D3S2             @ (((unsigned) &CLC2SEL2)*8) + 2;
#define                                 LC2D3S2_bit         BANKMASK(CLC2SEL2), 2
extern volatile __bit                   LC2D3S3             @ (((unsigned) &CLC2SEL2)*8) + 3;
#define                                 LC2D3S3_bit         BANKMASK(CLC2SEL2), 3
extern volatile __bit                   LC2D3S4             @ (((unsigned) &CLC2SEL2)*8) + 4;
#define                                 LC2D3S4_bit         BANKMASK(CLC2SEL2), 4
extern volatile __bit                   LC2D3S5             @ (((unsigned) &CLC2SEL2)*8) + 5;
#define                                 LC2D3S5_bit         BANKMASK(CLC2SEL2), 5
extern volatile __bit                   LC2D4S0             @ (((unsigned) &CLC2SEL3)*8) + 0;
#define                                 LC2D4S0_bit         BANKMASK(CLC2SEL3), 0
extern volatile __bit                   LC2D4S1             @ (((unsigned) &CLC2SEL3)*8) + 1;
#define                                 LC2D4S1_bit         BANKMASK(CLC2SEL3), 1
extern volatile __bit                   LC2D4S2             @ (((unsigned) &CLC2SEL3)*8) + 2;
#define                                 LC2D4S2_bit         BANKMASK(CLC2SEL3), 2
extern volatile __bit                   LC2D4S3             @ (((unsigned) &CLC2SEL3)*8) + 3;
#define                                 LC2D4S3_bit         BANKMASK(CLC2SEL3), 3
extern volatile __bit                   LC2D4S4             @ (((unsigned) &CLC2SEL3)*8) + 4;
#define                                 LC2D4S4_bit         BANKMASK(CLC2SEL3), 4
extern volatile __bit                   LC2D4S5             @ (((unsigned) &CLC2SEL3)*8) + 5;
#define                                 LC2D4S5_bit         BANKMASK(CLC2SEL3), 5
extern volatile __bit                   LC2EN               @ (((unsigned) &CLC2CON)*8) + 7;
#define                                 LC2EN_bit           BANKMASK(CLC2CON), 7
extern volatile __bit                   LC2G1D1N            @ (((unsigned) &CLC2GLS0)*8) + 0;
#define                                 LC2G1D1N_bit        BANKMASK(CLC2GLS0), 0
extern volatile __bit                   LC2G1D1T            @ (((unsigned) &CLC2GLS0)*8) + 1;
#define                                 LC2G1D1T_bit        BANKMASK(CLC2GLS0), 1
extern volatile __bit                   LC2G1D2N            @ (((unsigned) &CLC2GLS0)*8) + 2;
#define                                 LC2G1D2N_bit        BANKMASK(CLC2GLS0), 2
extern volatile __bit                   LC2G1D2T            @ (((unsigned) &CLC2GLS0)*8) + 3;
#define                                 LC2G1D2T_bit        BANKMASK(CLC2GLS0), 3
extern volatile __bit                   LC2G1D3N            @ (((unsigned) &CLC2GLS0)*8) + 4;
#define                                 LC2G1D3N_bit        BANKMASK(CLC2GLS0), 4
extern volatile __bit                   LC2G1D3T            @ (((unsigned) &CLC2GLS0)*8) + 5;
#define                                 LC2G1D3T_bit        BANKMASK(CLC2GLS0), 5
extern volatile __bit                   LC2G1D4N            @ (((unsigned) &CLC2GLS0)*8) + 6;
#define                                 LC2G1D4N_bit        BANKMASK(CLC2GLS0), 6
extern volatile __bit                   LC2G1D4T            @ (((unsigned) &CLC2GLS0)*8) + 7;
#define                                 LC2G1D4T_bit        BANKMASK(CLC2GLS0), 7
extern volatile __bit                   LC2G1POL            @ (((unsigned) &CLC2POL)*8) + 0;
#define                                 LC2G1POL_bit        BANKMASK(CLC2POL), 0
extern volatile __bit                   LC2G2D1N            @ (((unsigned) &CLC2GLS1)*8) + 0;
#define                                 LC2G2D1N_bit        BANKMASK(CLC2GLS1), 0
extern volatile __bit                   LC2G2D1T            @ (((unsigned) &CLC2GLS1)*8) + 1;
#define                                 LC2G2D1T_bit        BANKMASK(CLC2GLS1), 1
extern volatile __bit                   LC2G2D2N            @ (((unsigned) &CLC2GLS1)*8) + 2;
#define                                 LC2G2D2N_bit        BANKMASK(CLC2GLS1), 2
extern volatile __bit                   LC2G2D2T            @ (((unsigned) &CLC2GLS1)*8) + 3;
#define                                 LC2G2D2T_bit        BANKMASK(CLC2GLS1), 3
extern volatile __bit                   LC2G2D3N            @ (((unsigned) &CLC2GLS1)*8) + 4;
#define                                 LC2G2D3N_bit        BANKMASK(CLC2GLS1), 4
extern volatile __bit                   LC2G2D3T            @ (((unsigned) &CLC2GLS1)*8) + 5;
#define                                 LC2G2D3T_bit        BANKMASK(CLC2GLS1), 5
extern volatile __bit                   LC2G2D4N            @ (((unsigned) &CLC2GLS1)*8) + 6;
#define                                 LC2G2D4N_bit        BANKMASK(CLC2GLS1), 6
extern volatile __bit                   LC2G2D4T            @ (((unsigned) &CLC2GLS1)*8) + 7;
#define                                 LC2G2D4T_bit        BANKMASK(CLC2GLS1), 7
extern volatile __bit                   LC2G2POL            @ (((unsigned) &CLC2POL)*8) + 1;
#define                                 LC2G2POL_bit        BANKMASK(CLC2POL), 1
extern volatile __bit                   LC2G3D1N            @ (((unsigned) &CLC2GLS2)*8) + 0;
#define                                 LC2G3D1N_bit        BANKMASK(CLC2GLS2), 0
extern volatile __bit                   LC2G3D1T            @ (((unsigned) &CLC2GLS2)*8) + 1;
#define                                 LC2G3D1T_bit        BANKMASK(CLC2GLS2), 1
extern volatile __bit                   LC2G3D2N            @ (((unsigned) &CLC2GLS2)*8) + 2;
#define                                 LC2G3D2N_bit        BANKMASK(CLC2GLS2), 2
extern volatile __bit                   LC2G3D2T            @ (((unsigned) &CLC2GLS2)*8) + 3;
#define                                 LC2G3D2T_bit        BANKMASK(CLC2GLS2), 3
extern volatile __bit                   LC2G3D3N            @ (((unsigned) &CLC2GLS2)*8) + 4;
#define                                 LC2G3D3N_bit        BANKMASK(CLC2GLS2), 4
extern volatile __bit                   LC2G3D3T            @ (((unsigned) &CLC2GLS2)*8) + 5;
#define                                 LC2G3D3T_bit        BANKMASK(CLC2GLS2), 5
extern volatile __bit                   LC2G3D4N            @ (((unsigned) &CLC2GLS2)*8) + 6;
#define                                 LC2G3D4N_bit        BANKMASK(CLC2GLS2), 6
extern volatile __bit                   LC2G3D4T            @ (((unsigned) &CLC2GLS2)*8) + 7;
#define                                 LC2G3D4T_bit        BANKMASK(CLC2GLS2), 7
extern volatile __bit                   LC2G3POL            @ (((unsigned) &CLC2POL)*8) + 2;
#define                                 LC2G3POL_bit        BANKMASK(CLC2POL), 2
extern volatile __bit                   LC2G4D1N            @ (((unsigned) &CLC2GLS3)*8) + 0;
#define                                 LC2G4D1N_bit        BANKMASK(CLC2GLS3), 0
extern volatile __bit                   LC2G4D1T            @ (((unsigned) &CLC2GLS3)*8) + 1;
#define                                 LC2G4D1T_bit        BANKMASK(CLC2GLS3), 1
extern volatile __bit                   LC2G4D2N            @ (((unsigned) &CLC2GLS3)*8) + 2;
#define                                 LC2G4D2N_bit        BANKMASK(CLC2GLS3), 2
extern volatile __bit                   LC2G4D2T            @ (((unsigned) &CLC2GLS3)*8) + 3;
#define                                 LC2G4D2T_bit        BANKMASK(CLC2GLS3), 3
extern volatile __bit                   LC2G4D3N            @ (((unsigned) &CLC2GLS3)*8) + 4;
#define                                 LC2G4D3N_bit        BANKMASK(CLC2GLS3), 4
extern volatile __bit                   LC2G4D3T            @ (((unsigned) &CLC2GLS3)*8) + 5;
#define                                 LC2G4D3T_bit        BANKMASK(CLC2GLS3), 5
extern volatile __bit                   LC2G4D4N            @ (((unsigned) &CLC2GLS3)*8) + 6;
#define                                 LC2G4D4N_bit        BANKMASK(CLC2GLS3), 6
extern volatile __bit                   LC2G4D4T            @ (((unsigned) &CLC2GLS3)*8) + 7;
#define                                 LC2G4D4T_bit        BANKMASK(CLC2GLS3), 7
extern volatile __bit                   LC2G4POL            @ (((unsigned) &CLC2POL)*8) + 3;
#define                                 LC2G4POL_bit        BANKMASK(CLC2POL), 3
extern volatile __bit                   LC2INTN             @ (((unsigned) &CLC2CON)*8) + 3;
#define                                 LC2INTN_bit         BANKMASK(CLC2CON), 3
extern volatile __bit                   LC2INTP             @ (((unsigned) &CLC2CON)*8) + 4;
#define                                 LC2INTP_bit         BANKMASK(CLC2CON), 4
extern volatile __bit                   LC2MODE0            @ (((unsigned) &CLC2CON)*8) + 0;
#define                                 LC2MODE0_bit        BANKMASK(CLC2CON), 0
extern volatile __bit                   LC2MODE1            @ (((unsigned) &CLC2CON)*8) + 1;
#define                                 LC2MODE1_bit        BANKMASK(CLC2CON), 1
extern volatile __bit                   LC2MODE2            @ (((unsigned) &CLC2CON)*8) + 2;
#define                                 LC2MODE2_bit        BANKMASK(CLC2CON), 2
extern volatile __bit                   LC2OUT              @ (((unsigned) &CLC2CON)*8) + 5;
#define                                 LC2OUT_bit          BANKMASK(CLC2CON), 5
extern volatile __bit                   LC2POL              @ (((unsigned) &CLC2POL)*8) + 7;
#define                                 LC2POL_bit          BANKMASK(CLC2POL), 7
extern volatile __bit                   LC3D1S0             @ (((unsigned) &CLC3SEL0)*8) + 0;
#define                                 LC3D1S0_bit         BANKMASK(CLC3SEL0), 0
extern volatile __bit                   LC3D1S1             @ (((unsigned) &CLC3SEL0)*8) + 1;
#define                                 LC3D1S1_bit         BANKMASK(CLC3SEL0), 1
extern volatile __bit                   LC3D1S2             @ (((unsigned) &CLC3SEL0)*8) + 2;
#define                                 LC3D1S2_bit         BANKMASK(CLC3SEL0), 2
extern volatile __bit                   LC3D1S3             @ (((unsigned) &CLC3SEL0)*8) + 3;
#define                                 LC3D1S3_bit         BANKMASK(CLC3SEL0), 3
extern volatile __bit                   LC3D1S4             @ (((unsigned) &CLC3SEL0)*8) + 4;
#define                                 LC3D1S4_bit         BANKMASK(CLC3SEL0), 4
extern volatile __bit                   LC3D1S5             @ (((unsigned) &CLC3SEL0)*8) + 5;
#define                                 LC3D1S5_bit         BANKMASK(CLC3SEL0), 5
extern volatile __bit                   LC3D2S0             @ (((unsigned) &CLC3SEL1)*8) + 0;
#define                                 LC3D2S0_bit         BANKMASK(CLC3SEL1), 0
extern volatile __bit                   LC3D2S1             @ (((unsigned) &CLC3SEL1)*8) + 1;
#define                                 LC3D2S1_bit         BANKMASK(CLC3SEL1), 1
extern volatile __bit                   LC3D2S2             @ (((unsigned) &CLC3SEL1)*8) + 2;
#define                                 LC3D2S2_bit         BANKMASK(CLC3SEL1), 2
extern volatile __bit                   LC3D2S3             @ (((unsigned) &CLC3SEL1)*8) + 3;
#define                                 LC3D2S3_bit         BANKMASK(CLC3SEL1), 3
extern volatile __bit                   LC3D2S4             @ (((unsigned) &CLC3SEL1)*8) + 4;
#define                                 LC3D2S4_bit         BANKMASK(CLC3SEL1), 4
extern volatile __bit                   LC3D2S5             @ (((unsigned) &CLC3SEL1)*8) + 5;
#define                                 LC3D2S5_bit         BANKMASK(CLC3SEL1), 5
extern volatile __bit                   LC3D3S0             @ (((unsigned) &CLC3SEL2)*8) + 0;
#define                                 LC3D3S0_bit         BANKMASK(CLC3SEL2), 0
extern volatile __bit                   LC3D3S1             @ (((unsigned) &CLC3SEL2)*8) + 1;
#define                                 LC3D3S1_bit         BANKMASK(CLC3SEL2), 1
extern volatile __bit                   LC3D3S2             @ (((unsigned) &CLC3SEL2)*8) + 2;
#define                                 LC3D3S2_bit         BANKMASK(CLC3SEL2), 2
extern volatile __bit                   LC3D3S3             @ (((unsigned) &CLC3SEL2)*8) + 3;
#define                                 LC3D3S3_bit         BANKMASK(CLC3SEL2), 3
extern volatile __bit                   LC3D3S4             @ (((unsigned) &CLC3SEL2)*8) + 4;
#define                                 LC3D3S4_bit         BANKMASK(CLC3SEL2), 4
extern volatile __bit                   LC3D3S5             @ (((unsigned) &CLC3SEL2)*8) + 5;
#define                                 LC3D3S5_bit         BANKMASK(CLC3SEL2), 5
extern volatile __bit                   LC3D4S0             @ (((unsigned) &CLC3SEL3)*8) + 0;
#define                                 LC3D4S0_bit         BANKMASK(CLC3SEL3), 0
extern volatile __bit                   LC3D4S1             @ (((unsigned) &CLC3SEL3)*8) + 1;
#define                                 LC3D4S1_bit         BANKMASK(CLC3SEL3), 1
extern volatile __bit                   LC3D4S2             @ (((unsigned) &CLC3SEL3)*8) + 2;
#define                                 LC3D4S2_bit         BANKMASK(CLC3SEL3), 2
extern volatile __bit                   LC3D4S3             @ (((unsigned) &CLC3SEL3)*8) + 3;
#define                                 LC3D4S3_bit         BANKMASK(CLC3SEL3), 3
extern volatile __bit                   LC3D4S4             @ (((unsigned) &CLC3SEL3)*8) + 4;
#define                                 LC3D4S4_bit         BANKMASK(CLC3SEL3), 4
extern volatile __bit                   LC3D4S5             @ (((unsigned) &CLC3SEL3)*8) + 5;
#define                                 LC3D4S5_bit         BANKMASK(CLC3SEL3), 5
extern volatile __bit                   LC3EN               @ (((unsigned) &CLC3CON)*8) + 7;
#define                                 LC3EN_bit           BANKMASK(CLC3CON), 7
extern volatile __bit                   LC3G1D1N            @ (((unsigned) &CLC3GLS0)*8) + 0;
#define                                 LC3G1D1N_bit        BANKMASK(CLC3GLS0), 0
extern volatile __bit                   LC3G1D1T            @ (((unsigned) &CLC3GLS0)*8) + 1;
#define                                 LC3G1D1T_bit        BANKMASK(CLC3GLS0), 1
extern volatile __bit                   LC3G1D2N            @ (((unsigned) &CLC3GLS0)*8) + 2;
#define                                 LC3G1D2N_bit        BANKMASK(CLC3GLS0), 2
extern volatile __bit                   LC3G1D2T            @ (((unsigned) &CLC3GLS0)*8) + 3;
#define                                 LC3G1D2T_bit        BANKMASK(CLC3GLS0), 3
extern volatile __bit                   LC3G1D3N            @ (((unsigned) &CLC3GLS0)*8) + 4;
#define                                 LC3G1D3N_bit        BANKMASK(CLC3GLS0), 4
extern volatile __bit                   LC3G1D3T            @ (((unsigned) &CLC3GLS0)*8) + 5;
#define                                 LC3G1D3T_bit        BANKMASK(CLC3GLS0), 5
extern volatile __bit                   LC3G1D4N            @ (((unsigned) &CLC3GLS0)*8) + 6;
#define                                 LC3G1D4N_bit        BANKMASK(CLC3GLS0), 6
extern volatile __bit                   LC3G1D4T            @ (((unsigned) &CLC3GLS0)*8) + 7;
#define                                 LC3G1D4T_bit        BANKMASK(CLC3GLS0), 7
extern volatile __bit                   LC3G1POL            @ (((unsigned) &CLC3POL)*8) + 0;
#define                                 LC3G1POL_bit        BANKMASK(CLC3POL), 0
extern volatile __bit                   LC3G2D1N            @ (((unsigned) &CLC3GLS1)*8) + 0;
#define                                 LC3G2D1N_bit        BANKMASK(CLC3GLS1), 0
extern volatile __bit                   LC3G2D1T            @ (((unsigned) &CLC3GLS1)*8) + 1;
#define                                 LC3G2D1T_bit        BANKMASK(CLC3GLS1), 1
extern volatile __bit                   LC3G2D2N            @ (((unsigned) &CLC3GLS1)*8) + 2;
#define                                 LC3G2D2N_bit        BANKMASK(CLC3GLS1), 2
extern volatile __bit                   LC3G2D2T            @ (((unsigned) &CLC3GLS1)*8) + 3;
#define                                 LC3G2D2T_bit        BANKMASK(CLC3GLS1), 3
extern volatile __bit                   LC3G2D3N            @ (((unsigned) &CLC3GLS1)*8) + 4;
#define                                 LC3G2D3N_bit        BANKMASK(CLC3GLS1), 4
extern volatile __bit                   LC3G2D3T            @ (((unsigned) &CLC3GLS1)*8) + 5;
#define                                 LC3G2D3T_bit        BANKMASK(CLC3GLS1), 5
extern volatile __bit                   LC3G2D4N            @ (((unsigned) &CLC3GLS1)*8) + 6;
#define                                 LC3G2D4N_bit        BANKMASK(CLC3GLS1), 6
extern volatile __bit                   LC3G2D4T            @ (((unsigned) &CLC3GLS1)*8) + 7;
#define                                 LC3G2D4T_bit        BANKMASK(CLC3GLS1), 7
extern volatile __bit                   LC3G2POL            @ (((unsigned) &CLC3POL)*8) + 1;
#define                                 LC3G2POL_bit        BANKMASK(CLC3POL), 1
extern volatile __bit                   LC3G3D1N            @ (((unsigned) &CLC3GLS2)*8) + 0;
#define                                 LC3G3D1N_bit        BANKMASK(CLC3GLS2), 0
extern volatile __bit                   LC3G3D1T            @ (((unsigned) &CLC3GLS2)*8) + 1;
#define                                 LC3G3D1T_bit        BANKMASK(CLC3GLS2), 1
extern volatile __bit                   LC3G3D2N            @ (((unsigned) &CLC3GLS2)*8) + 2;
#define                                 LC3G3D2N_bit        BANKMASK(CLC3GLS2), 2
extern volatile __bit                   LC3G3D2T            @ (((unsigned) &CLC3GLS2)*8) + 3;
#define                                 LC3G3D2T_bit        BANKMASK(CLC3GLS2), 3
extern volatile __bit                   LC3G3D3N            @ (((unsigned) &CLC3GLS2)*8) + 4;
#define                                 LC3G3D3N_bit        BANKMASK(CLC3GLS2), 4
extern volatile __bit                   LC3G3D3T            @ (((unsigned) &CLC3GLS2)*8) + 5;
#define                                 LC3G3D3T_bit        BANKMASK(CLC3GLS2), 5
extern volatile __bit                   LC3G3D4N            @ (((unsigned) &CLC3GLS2)*8) + 6;
#define                                 LC3G3D4N_bit        BANKMASK(CLC3GLS2), 6
extern volatile __bit                   LC3G3D4T            @ (((unsigned) &CLC3GLS2)*8) + 7;
#define                                 LC3G3D4T_bit        BANKMASK(CLC3GLS2), 7
extern volatile __bit                   LC3G3POL            @ (((unsigned) &CLC3POL)*8) + 2;
#define                                 LC3G3POL_bit        BANKMASK(CLC3POL), 2
extern volatile __bit                   LC3G4D1N            @ (((unsigned) &CLC3GLS3)*8) + 0;
#define                                 LC3G4D1N_bit        BANKMASK(CLC3GLS3), 0
extern volatile __bit                   LC3G4D1T            @ (((unsigned) &CLC3GLS3)*8) + 1;
#define                                 LC3G4D1T_bit        BANKMASK(CLC3GLS3), 1
extern volatile __bit                   LC3G4D2N            @ (((unsigned) &CLC3GLS3)*8) + 2;
#define                                 LC3G4D2N_bit        BANKMASK(CLC3GLS3), 2
extern volatile __bit                   LC3G4D2T            @ (((unsigned) &CLC3GLS3)*8) + 3;
#define                                 LC3G4D2T_bit        BANKMASK(CLC3GLS3), 3
extern volatile __bit                   LC3G4D3N            @ (((unsigned) &CLC3GLS3)*8) + 4;
#define                                 LC3G4D3N_bit        BANKMASK(CLC3GLS3), 4
extern volatile __bit                   LC3G4D3T            @ (((unsigned) &CLC3GLS3)*8) + 5;
#define                                 LC3G4D3T_bit        BANKMASK(CLC3GLS3), 5
extern volatile __bit                   LC3G4D4N            @ (((unsigned) &CLC3GLS3)*8) + 6;
#define                                 LC3G4D4N_bit        BANKMASK(CLC3GLS3), 6
extern volatile __bit                   LC3G4D4T            @ (((unsigned) &CLC3GLS3)*8) + 7;
#define                                 LC3G4D4T_bit        BANKMASK(CLC3GLS3), 7
extern volatile __bit                   LC3G4POL            @ (((unsigned) &CLC3POL)*8) + 3;
#define                                 LC3G4POL_bit        BANKMASK(CLC3POL), 3
extern volatile __bit                   LC3INTN             @ (((unsigned) &CLC3CON)*8) + 3;
#define                                 LC3INTN_bit         BANKMASK(CLC3CON), 3
extern volatile __bit                   LC3INTP             @ (((unsigned) &CLC3CON)*8) + 4;
#define                                 LC3INTP_bit         BANKMASK(CLC3CON), 4
extern volatile __bit                   LC3MODE0            @ (((unsigned) &CLC3CON)*8) + 0;
#define                                 LC3MODE0_bit        BANKMASK(CLC3CON), 0
extern volatile __bit                   LC3MODE1            @ (((unsigned) &CLC3CON)*8) + 1;
#define                                 LC3MODE1_bit        BANKMASK(CLC3CON), 1
extern volatile __bit                   LC3MODE2            @ (((unsigned) &CLC3CON)*8) + 2;
#define                                 LC3MODE2_bit        BANKMASK(CLC3CON), 2
extern volatile __bit                   LC3OUT              @ (((unsigned) &CLC3CON)*8) + 5;
#define                                 LC3OUT_bit          BANKMASK(CLC3CON), 5
extern volatile __bit                   LC3POL              @ (((unsigned) &CLC3POL)*8) + 7;
#define                                 LC3POL_bit          BANKMASK(CLC3POL), 7
extern volatile __bit                   LC4D1S0             @ (((unsigned) &CLC4SEL0)*8) + 0;
#define                                 LC4D1S0_bit         BANKMASK(CLC4SEL0), 0
extern volatile __bit                   LC4D1S1             @ (((unsigned) &CLC4SEL0)*8) + 1;
#define                                 LC4D1S1_bit         BANKMASK(CLC4SEL0), 1
extern volatile __bit                   LC4D1S2             @ (((unsigned) &CLC4SEL0)*8) + 2;
#define                                 LC4D1S2_bit         BANKMASK(CLC4SEL0), 2
extern volatile __bit                   LC4D1S3             @ (((unsigned) &CLC4SEL0)*8) + 3;
#define                                 LC4D1S3_bit         BANKMASK(CLC4SEL0), 3
extern volatile __bit                   LC4D1S4             @ (((unsigned) &CLC4SEL0)*8) + 4;
#define                                 LC4D1S4_bit         BANKMASK(CLC4SEL0), 4
extern volatile __bit                   LC4D1S5             @ (((unsigned) &CLC4SEL0)*8) + 5;
#define                                 LC4D1S5_bit         BANKMASK(CLC4SEL0), 5
extern volatile __bit                   LC4D2S0             @ (((unsigned) &CLC4SEL1)*8) + 0;
#define                                 LC4D2S0_bit         BANKMASK(CLC4SEL1), 0
extern volatile __bit                   LC4D2S1             @ (((unsigned) &CLC4SEL1)*8) + 1;
#define                                 LC4D2S1_bit         BANKMASK(CLC4SEL1), 1
extern volatile __bit                   LC4D2S2             @ (((unsigned) &CLC4SEL1)*8) + 2;
#define                                 LC4D2S2_bit         BANKMASK(CLC4SEL1), 2
extern volatile __bit                   LC4D2S3             @ (((unsigned) &CLC4SEL1)*8) + 3;
#define                                 LC4D2S3_bit         BANKMASK(CLC4SEL1), 3
extern volatile __bit                   LC4D2S4             @ (((unsigned) &CLC4SEL1)*8) + 4;
#define                                 LC4D2S4_bit         BANKMASK(CLC4SEL1), 4
extern volatile __bit                   LC4D2S5             @ (((unsigned) &CLC4SEL1)*8) + 5;
#define                                 LC4D2S5_bit         BANKMASK(CLC4SEL1), 5
extern volatile __bit                   LC4D3S0             @ (((unsigned) &CLC4SEL2)*8) + 0;
#define                                 LC4D3S0_bit         BANKMASK(CLC4SEL2), 0
extern volatile __bit                   LC4D3S1             @ (((unsigned) &CLC4SEL2)*8) + 1;
#define                                 LC4D3S1_bit         BANKMASK(CLC4SEL2), 1
extern volatile __bit                   LC4D3S2             @ (((unsigned) &CLC4SEL2)*8) + 2;
#define                                 LC4D3S2_bit         BANKMASK(CLC4SEL2), 2
extern volatile __bit                   LC4D3S3             @ (((unsigned) &CLC4SEL2)*8) + 3;
#define                                 LC4D3S3_bit         BANKMASK(CLC4SEL2), 3
extern volatile __bit                   LC4D3S4             @ (((unsigned) &CLC4SEL2)*8) + 4;
#define                                 LC4D3S4_bit         BANKMASK(CLC4SEL2), 4
extern volatile __bit                   LC4D3S5             @ (((unsigned) &CLC4SEL2)*8) + 5;
#define                                 LC4D3S5_bit         BANKMASK(CLC4SEL2), 5
extern volatile __bit                   LC4D4S0             @ (((unsigned) &CLC4SEL3)*8) + 0;
#define                                 LC4D4S0_bit         BANKMASK(CLC4SEL3), 0
extern volatile __bit                   LC4D4S1             @ (((unsigned) &CLC4SEL3)*8) + 1;
#define                                 LC4D4S1_bit         BANKMASK(CLC4SEL3), 1
extern volatile __bit                   LC4D4S2             @ (((unsigned) &CLC4SEL3)*8) + 2;
#define                                 LC4D4S2_bit         BANKMASK(CLC4SEL3), 2
extern volatile __bit                   LC4D4S3             @ (((unsigned) &CLC4SEL3)*8) + 3;
#define                                 LC4D4S3_bit         BANKMASK(CLC4SEL3), 3
extern volatile __bit                   LC4D4S4             @ (((unsigned) &CLC4SEL3)*8) + 4;
#define                                 LC4D4S4_bit         BANKMASK(CLC4SEL3), 4
extern volatile __bit                   LC4D4S5             @ (((unsigned) &CLC4SEL3)*8) + 5;
#define                                 LC4D4S5_bit         BANKMASK(CLC4SEL3), 5
extern volatile __bit                   LC4EN               @ (((unsigned) &CLC4CON)*8) + 7;
#define                                 LC4EN_bit           BANKMASK(CLC4CON), 7
extern volatile __bit                   LC4G1D1N            @ (((unsigned) &CLC4GLS0)*8) + 0;
#define                                 LC4G1D1N_bit        BANKMASK(CLC4GLS0), 0
extern volatile __bit                   LC4G1D1T            @ (((unsigned) &CLC4GLS0)*8) + 1;
#define                                 LC4G1D1T_bit        BANKMASK(CLC4GLS0), 1
extern volatile __bit                   LC4G1D2N            @ (((unsigned) &CLC4GLS0)*8) + 2;
#define                                 LC4G1D2N_bit        BANKMASK(CLC4GLS0), 2
extern volatile __bit                   LC4G1D2T            @ (((unsigned) &CLC4GLS0)*8) + 3;
#define                                 LC4G1D2T_bit        BANKMASK(CLC4GLS0), 3
extern volatile __bit                   LC4G1D3N            @ (((unsigned) &CLC4GLS0)*8) + 4;
#define                                 LC4G1D3N_bit        BANKMASK(CLC4GLS0), 4
extern volatile __bit                   LC4G1D3T            @ (((unsigned) &CLC4GLS0)*8) + 5;
#define                                 LC4G1D3T_bit        BANKMASK(CLC4GLS0), 5
extern volatile __bit                   LC4G1D4N            @ (((unsigned) &CLC4GLS0)*8) + 6;
#define                                 LC4G1D4N_bit        BANKMASK(CLC4GLS0), 6
extern volatile __bit                   LC4G1D4T            @ (((unsigned) &CLC4GLS0)*8) + 7;
#define                                 LC4G1D4T_bit        BANKMASK(CLC4GLS0), 7
extern volatile __bit                   LC4G1POL            @ (((unsigned) &CLC4POL)*8) + 0;
#define                                 LC4G1POL_bit        BANKMASK(CLC4POL), 0
extern volatile __bit                   LC4G2D1N            @ (((unsigned) &CLC4GLS1)*8) + 0;
#define                                 LC4G2D1N_bit        BANKMASK(CLC4GLS1), 0
extern volatile __bit                   LC4G2D1T            @ (((unsigned) &CLC4GLS1)*8) + 1;
#define                                 LC4G2D1T_bit        BANKMASK(CLC4GLS1), 1
extern volatile __bit                   LC4G2D2N            @ (((unsigned) &CLC4GLS1)*8) + 2;
#define                                 LC4G2D2N_bit        BANKMASK(CLC4GLS1), 2
extern volatile __bit                   LC4G2D2T            @ (((unsigned) &CLC4GLS1)*8) + 3;
#define                                 LC4G2D2T_bit        BANKMASK(CLC4GLS1), 3
extern volatile __bit                   LC4G2D3N            @ (((unsigned) &CLC4GLS1)*8) + 4;
#define                                 LC4G2D3N_bit        BANKMASK(CLC4GLS1), 4
extern volatile __bit                   LC4G2D3T            @ (((unsigned) &CLC4GLS1)*8) + 5;
#define                                 LC4G2D3T_bit        BANKMASK(CLC4GLS1), 5
extern volatile __bit                   LC4G2D4N            @ (((unsigned) &CLC4GLS1)*8) + 6;
#define                                 LC4G2D4N_bit        BANKMASK(CLC4GLS1), 6
extern volatile __bit                   LC4G2D4T            @ (((unsigned) &CLC4GLS1)*8) + 7;
#define                                 LC4G2D4T_bit        BANKMASK(CLC4GLS1), 7
extern volatile __bit                   LC4G2POL            @ (((unsigned) &CLC4POL)*8) + 1;
#define                                 LC4G2POL_bit        BANKMASK(CLC4POL), 1
extern volatile __bit                   LC4G3D1N            @ (((unsigned) &CLC4GLS2)*8) + 0;
#define                                 LC4G3D1N_bit        BANKMASK(CLC4GLS2), 0
extern volatile __bit                   LC4G3D1T            @ (((unsigned) &CLC4GLS2)*8) + 1;
#define                                 LC4G3D1T_bit        BANKMASK(CLC4GLS2), 1
extern volatile __bit                   LC4G3D2N            @ (((unsigned) &CLC4GLS2)*8) + 2;
#define                                 LC4G3D2N_bit        BANKMASK(CLC4GLS2), 2
extern volatile __bit                   LC4G3D2T            @ (((unsigned) &CLC4GLS2)*8) + 3;
#define                                 LC4G3D2T_bit        BANKMASK(CLC4GLS2), 3
extern volatile __bit                   LC4G3D3N            @ (((unsigned) &CLC4GLS2)*8) + 4;
#define                                 LC4G3D3N_bit        BANKMASK(CLC4GLS2), 4
extern volatile __bit                   LC4G3D3T            @ (((unsigned) &CLC4GLS2)*8) + 5;
#define                                 LC4G3D3T_bit        BANKMASK(CLC4GLS2), 5
extern volatile __bit                   LC4G3D4N            @ (((unsigned) &CLC4GLS2)*8) + 6;
#define                                 LC4G3D4N_bit        BANKMASK(CLC4GLS2), 6
extern volatile __bit                   LC4G3D4T            @ (((unsigned) &CLC4GLS2)*8) + 7;
#define                                 LC4G3D4T_bit        BANKMASK(CLC4GLS2), 7
extern volatile __bit                   LC4G3POL            @ (((unsigned) &CLC4POL)*8) + 2;
#define                                 LC4G3POL_bit        BANKMASK(CLC4POL), 2
extern volatile __bit                   LC4G4D1N            @ (((unsigned) &CLC4GLS3)*8) + 0;
#define                                 LC4G4D1N_bit        BANKMASK(CLC4GLS3), 0
extern volatile __bit                   LC4G4D1T            @ (((unsigned) &CLC4GLS3)*8) + 1;
#define                                 LC4G4D1T_bit        BANKMASK(CLC4GLS3), 1
extern volatile __bit                   LC4G4D2N            @ (((unsigned) &CLC4GLS3)*8) + 2;
#define                                 LC4G4D2N_bit        BANKMASK(CLC4GLS3), 2
extern volatile __bit                   LC4G4D2T            @ (((unsigned) &CLC4GLS3)*8) + 3;
#define                                 LC4G4D2T_bit        BANKMASK(CLC4GLS3), 3
extern volatile __bit                   LC4G4D3N            @ (((unsigned) &CLC4GLS3)*8) + 4;
#define                                 LC4G4D3N_bit        BANKMASK(CLC4GLS3), 4
extern volatile __bit                   LC4G4D3T            @ (((unsigned) &CLC4GLS3)*8) + 5;
#define                                 LC4G4D3T_bit        BANKMASK(CLC4GLS3), 5
extern volatile __bit                   LC4G4D4N            @ (((unsigned) &CLC4GLS3)*8) + 6;
#define                                 LC4G4D4N_bit        BANKMASK(CLC4GLS3), 6
extern volatile __bit                   LC4G4D4T            @ (((unsigned) &CLC4GLS3)*8) + 7;
#define                                 LC4G4D4T_bit        BANKMASK(CLC4GLS3), 7
extern volatile __bit                   LC4G4POL            @ (((unsigned) &CLC4POL)*8) + 3;
#define                                 LC4G4POL_bit        BANKMASK(CLC4POL), 3
extern volatile __bit                   LC4INTN             @ (((unsigned) &CLC4CON)*8) + 3;
#define                                 LC4INTN_bit         BANKMASK(CLC4CON), 3
extern volatile __bit                   LC4INTP             @ (((unsigned) &CLC4CON)*8) + 4;
#define                                 LC4INTP_bit         BANKMASK(CLC4CON), 4
extern volatile __bit                   LC4MODE0            @ (((unsigned) &CLC4CON)*8) + 0;
#define                                 LC4MODE0_bit        BANKMASK(CLC4CON), 0
extern volatile __bit                   LC4MODE1            @ (((unsigned) &CLC4CON)*8) + 1;
#define                                 LC4MODE1_bit        BANKMASK(CLC4CON), 1
extern volatile __bit                   LC4MODE2            @ (((unsigned) &CLC4CON)*8) + 2;
#define                                 LC4MODE2_bit        BANKMASK(CLC4CON), 2
extern volatile __bit                   LC4OUT              @ (((unsigned) &CLC4CON)*8) + 5;
#define                                 LC4OUT_bit          BANKMASK(CLC4CON), 5
extern volatile __bit                   LC4POL              @ (((unsigned) &CLC4POL)*8) + 7;
#define                                 LC4POL_bit          BANKMASK(CLC4POL), 7
extern volatile __bit                   LFOEN               @ (((unsigned) &OSCEN)*8) + 4;
#define                                 LFOEN_bit           BANKMASK(OSCEN), 4
extern volatile __bit                   LFOR                @ (((unsigned) &OSCSTAT1)*8) + 4;
#define                                 LFOR_bit            BANKMASK(OSCSTAT1), 4
extern volatile __bit                   LWLO                @ (((unsigned) &NVMCON1)*8) + 5;
#define                                 LWLO_bit            BANKMASK(NVMCON1), 5
extern volatile __bit                   MC1OUT              @ (((unsigned) &CMOUT)*8) + 0;
#define                                 MC1OUT_bit          BANKMASK(CMOUT), 0
extern volatile __bit                   MC2OUT              @ (((unsigned) &CMOUT)*8) + 1;
#define                                 MC2OUT_bit          BANKMASK(CMOUT), 1
extern volatile __bit                   MDBIT               @ (((unsigned) &MDCON)*8) + 0;
#define                                 MDBIT_bit           BANKMASK(MDCON), 0
extern volatile __bit                   MDCH0               @ (((unsigned) &MDCARH)*8) + 0;
#define                                 MDCH0_bit           BANKMASK(MDCARH), 0
extern volatile __bit                   MDCH1               @ (((unsigned) &MDCARH)*8) + 1;
#define                                 MDCH1_bit           BANKMASK(MDCARH), 1
extern volatile __bit                   MDCH2               @ (((unsigned) &MDCARH)*8) + 2;
#define                                 MDCH2_bit           BANKMASK(MDCARH), 2
extern volatile __bit                   MDCH3               @ (((unsigned) &MDCARH)*8) + 3;
#define                                 MDCH3_bit           BANKMASK(MDCARH), 3
extern volatile __bit                   MDCHPOL             @ (((unsigned) &MDCARH)*8) + 6;
#define                                 MDCHPOL_bit         BANKMASK(MDCARH), 6
extern volatile __bit                   MDCHSYNC            @ (((unsigned) &MDCARH)*8) + 5;
#define                                 MDCHSYNC_bit        BANKMASK(MDCARH), 5
extern volatile __bit                   MDCIN1PPS0          @ (((unsigned) &MDCIN1PPS)*8) + 0;
#define                                 MDCIN1PPS0_bit      BANKMASK(MDCIN1PPS), 0
extern volatile __bit                   MDCIN1PPS1          @ (((unsigned) &MDCIN1PPS)*8) + 1;
#define                                 MDCIN1PPS1_bit      BANKMASK(MDCIN1PPS), 1
extern volatile __bit                   MDCIN1PPS2          @ (((unsigned) &MDCIN1PPS)*8) + 2;
#define                                 MDCIN1PPS2_bit      BANKMASK(MDCIN1PPS), 2
extern volatile __bit                   MDCIN1PPS3          @ (((unsigned) &MDCIN1PPS)*8) + 3;
#define                                 MDCIN1PPS3_bit      BANKMASK(MDCIN1PPS), 3
extern volatile __bit                   MDCIN1PPS4          @ (((unsigned) &MDCIN1PPS)*8) + 4;
#define                                 MDCIN1PPS4_bit      BANKMASK(MDCIN1PPS), 4
extern volatile __bit                   MDCIN2PPS0          @ (((unsigned) &MDCIN2PPS)*8) + 0;
#define                                 MDCIN2PPS0_bit      BANKMASK(MDCIN2PPS), 0
extern volatile __bit                   MDCIN2PPS1          @ (((unsigned) &MDCIN2PPS)*8) + 1;
#define                                 MDCIN2PPS1_bit      BANKMASK(MDCIN2PPS), 1
extern volatile __bit                   MDCIN2PPS2          @ (((unsigned) &MDCIN2PPS)*8) + 2;
#define                                 MDCIN2PPS2_bit      BANKMASK(MDCIN2PPS), 2
extern volatile __bit                   MDCIN2PPS3          @ (((unsigned) &MDCIN2PPS)*8) + 3;
#define                                 MDCIN2PPS3_bit      BANKMASK(MDCIN2PPS), 3
extern volatile __bit                   MDCIN2PPS4          @ (((unsigned) &MDCIN2PPS)*8) + 4;
#define                                 MDCIN2PPS4_bit      BANKMASK(MDCIN2PPS), 4
extern volatile __bit                   MDCL0               @ (((unsigned) &MDCARL)*8) + 0;
#define                                 MDCL0_bit           BANKMASK(MDCARL), 0
extern volatile __bit                   MDCL1               @ (((unsigned) &MDCARL)*8) + 1;
#define                                 MDCL1_bit           BANKMASK(MDCARL), 1
extern volatile __bit                   MDCL2               @ (((unsigned) &MDCARL)*8) + 2;
#define                                 MDCL2_bit           BANKMASK(MDCARL), 2
extern volatile __bit                   MDCL3               @ (((unsigned) &MDCARL)*8) + 3;
#define                                 MDCL3_bit           BANKMASK(MDCARL), 3
extern volatile __bit                   MDCLPOL             @ (((unsigned) &MDCARL)*8) + 6;
#define                                 MDCLPOL_bit         BANKMASK(MDCARL), 6
extern volatile __bit                   MDCLSYNC            @ (((unsigned) &MDCARL)*8) + 5;
#define                                 MDCLSYNC_bit        BANKMASK(MDCARL), 5
extern volatile __bit                   MDEN                @ (((unsigned) &MDCON)*8) + 7;
#define                                 MDEN_bit            BANKMASK(MDCON), 7
extern volatile __bit                   MDMINPPS0           @ (((unsigned) &MDMINPPS)*8) + 0;
#define                                 MDMINPPS0_bit       BANKMASK(MDMINPPS), 0
extern volatile __bit                   MDMINPPS1           @ (((unsigned) &MDMINPPS)*8) + 1;
#define                                 MDMINPPS1_bit       BANKMASK(MDMINPPS), 1
extern volatile __bit                   MDMINPPS2           @ (((unsigned) &MDMINPPS)*8) + 2;
#define                                 MDMINPPS2_bit       BANKMASK(MDMINPPS), 2
extern volatile __bit                   MDMINPPS3           @ (((unsigned) &MDMINPPS)*8) + 3;
#define                                 MDMINPPS3_bit       BANKMASK(MDMINPPS), 3
extern volatile __bit                   MDMINPPS4           @ (((unsigned) &MDMINPPS)*8) + 4;
#define                                 MDMINPPS4_bit       BANKMASK(MDMINPPS), 4
extern volatile __bit                   MDMS0               @ (((unsigned) &MDSRC)*8) + 0;
#define                                 MDMS0_bit           BANKMASK(MDSRC), 0
extern volatile __bit                   MDMS1               @ (((unsigned) &MDSRC)*8) + 1;
#define                                 MDMS1_bit           BANKMASK(MDSRC), 1
extern volatile __bit                   MDMS2               @ (((unsigned) &MDSRC)*8) + 2;
#define                                 MDMS2_bit           BANKMASK(MDSRC), 2
extern volatile __bit                   MDMS3               @ (((unsigned) &MDSRC)*8) + 3;
#define                                 MDMS3_bit           BANKMASK(MDSRC), 3
extern volatile __bit                   MDOPOL              @ (((unsigned) &MDCON)*8) + 4;
#define                                 MDOPOL_bit          BANKMASK(MDCON), 4
extern volatile __bit                   MDOUT               @ (((unsigned) &MDCON)*8) + 3;
#define                                 MDOUT_bit           BANKMASK(MDCON), 3
extern volatile __bit                   MLC1OUT             @ (((unsigned) &CLCDATA)*8) + 0;
#define                                 MLC1OUT_bit         BANKMASK(CLCDATA), 0
extern volatile __bit                   MLC2OUT             @ (((unsigned) &CLCDATA)*8) + 1;
#define                                 MLC2OUT_bit         BANKMASK(CLCDATA), 1
extern volatile __bit                   MLC3OUT             @ (((unsigned) &CLCDATA)*8) + 2;
#define                                 MLC3OUT_bit         BANKMASK(CLCDATA), 2
extern volatile __bit                   MLC4OUT             @ (((unsigned) &CLCDATA)*8) + 3;
#define                                 MLC4OUT_bit         BANKMASK(CLCDATA), 3
extern volatile __bit                   MSK0                @ (((unsigned) &SSP1MSK)*8) + 0;
#define                                 MSK0_bit            BANKMASK(SSP1MSK), 0
extern volatile __bit                   MSK1                @ (((unsigned) &SSP1MSK)*8) + 1;
#define                                 MSK1_bit            BANKMASK(SSP1MSK), 1
extern volatile __bit                   MSK2                @ (((unsigned) &SSP1MSK)*8) + 2;
#define                                 MSK2_bit            BANKMASK(SSP1MSK), 2
extern volatile __bit                   MSK3                @ (((unsigned) &SSP1MSK)*8) + 3;
#define                                 MSK3_bit            BANKMASK(SSP1MSK), 3
extern volatile __bit                   MSK4                @ (((unsigned) &SSP1MSK)*8) + 4;
#define                                 MSK4_bit            BANKMASK(SSP1MSK), 4
extern volatile __bit                   MSK5                @ (((unsigned) &SSP1MSK)*8) + 5;
#define                                 MSK5_bit            BANKMASK(SSP1MSK), 5
extern volatile __bit                   MSK6                @ (((unsigned) &SSP1MSK)*8) + 6;
#define                                 MSK6_bit            BANKMASK(SSP1MSK), 6
extern volatile __bit                   MSK7                @ (((unsigned) &SSP1MSK)*8) + 7;
#define                                 MSK7_bit            BANKMASK(SSP1MSK), 7
extern volatile __bit                   MSSP1MD             @ (((unsigned) &PMD4)*8) + 1;
#define                                 MSSP1MD_bit         BANKMASK(PMD4), 1
extern volatile __bit                   N1EN                @ (((unsigned) &NCO1CON)*8) + 7;
#define                                 N1EN_bit            BANKMASK(NCO1CON), 7
extern volatile __bit                   N1OUT               @ (((unsigned) &NCO1CON)*8) + 5;
#define                                 N1OUT_bit           BANKMASK(NCO1CON), 5
extern volatile __bit                   N1PFM               @ (((unsigned) &NCO1CON)*8) + 0;
#define                                 N1PFM_bit           BANKMASK(NCO1CON), 0
extern volatile __bit                   N1POL               @ (((unsigned) &NCO1CON)*8) + 4;
#define                                 N1POL_bit           BANKMASK(NCO1CON), 4
extern volatile __bit                   NCO1IE              @ (((unsigned) &PIE2)*8) + 0;
#define                                 NCO1IE_bit          BANKMASK(PIE2), 0
extern volatile __bit                   NCO1IF              @ (((unsigned) &PIR2)*8) + 0;
#define                                 NCO1IF_bit          BANKMASK(PIR2), 0
extern volatile __bit                   NCOMD               @ (((unsigned) &PMD1)*8) + 7;
#define                                 NCOMD_bit           BANKMASK(PMD1), 7
extern volatile __bit                   NDIV0               @ (((unsigned) &OSCCON1)*8) + 0;
#define                                 NDIV0_bit           BANKMASK(OSCCON1), 0
extern volatile __bit                   NDIV1               @ (((unsigned) &OSCCON1)*8) + 1;
#define                                 NDIV1_bit           BANKMASK(OSCCON1), 1
extern volatile __bit                   NDIV2               @ (((unsigned) &OSCCON1)*8) + 2;
#define                                 NDIV2_bit           BANKMASK(OSCCON1), 2
extern volatile __bit                   NDIV3               @ (((unsigned) &OSCCON1)*8) + 3;
#define                                 NDIV3_bit           BANKMASK(OSCCON1), 3
extern volatile __bit                   NOSC0               @ (((unsigned) &OSCCON1)*8) + 4;
#define                                 NOSC0_bit           BANKMASK(OSCCON1), 4
extern volatile __bit                   NOSC1               @ (((unsigned) &OSCCON1)*8) + 5;
#define                                 NOSC1_bit           BANKMASK(OSCCON1), 5
extern volatile __bit                   NOSC2               @ (((unsigned) &OSCCON1)*8) + 6;
#define                                 NOSC2_bit           BANKMASK(OSCCON1), 6
extern volatile __bit                   NOSCR               @ (((unsigned) &OSCCON3)*8) + 3;
#define                                 NOSCR_bit           BANKMASK(OSCCON3), 3
extern volatile __bit                   NVMADR0             @ (((unsigned) &NVMADRL)*8) + 0;
#define                                 NVMADR0_bit         BANKMASK(NVMADRL), 0
extern volatile __bit                   NVMADR1             @ (((unsigned) &NVMADRL)*8) + 1;
#define                                 NVMADR1_bit         BANKMASK(NVMADRL), 1
extern volatile __bit                   NVMADR10            @ (((unsigned) &NVMADRH)*8) + 2;
#define                                 NVMADR10_bit        BANKMASK(NVMADRH), 2
extern volatile __bit                   NVMADR11            @ (((unsigned) &NVMADRH)*8) + 3;
#define                                 NVMADR11_bit        BANKMASK(NVMADRH), 3
extern volatile __bit                   NVMADR12            @ (((unsigned) &NVMADRH)*8) + 4;
#define                                 NVMADR12_bit        BANKMASK(NVMADRH), 4
extern volatile __bit                   NVMADR13            @ (((unsigned) &NVMADRH)*8) + 5;
#define                                 NVMADR13_bit        BANKMASK(NVMADRH), 5
extern volatile __bit                   NVMADR14            @ (((unsigned) &NVMADRH)*8) + 6;
#define                                 NVMADR14_bit        BANKMASK(NVMADRH), 6
extern volatile __bit                   NVMADR2             @ (((unsigned) &NVMADRL)*8) + 2;
#define                                 NVMADR2_bit         BANKMASK(NVMADRL), 2
extern volatile __bit                   NVMADR3             @ (((unsigned) &NVMADRL)*8) + 3;
#define                                 NVMADR3_bit         BANKMASK(NVMADRL), 3
extern volatile __bit                   NVMADR4             @ (((unsigned) &NVMADRL)*8) + 4;
#define                                 NVMADR4_bit         BANKMASK(NVMADRL), 4
extern volatile __bit                   NVMADR5             @ (((unsigned) &NVMADRL)*8) + 5;
#define                                 NVMADR5_bit         BANKMASK(NVMADRL), 5
extern volatile __bit                   NVMADR6             @ (((unsigned) &NVMADRL)*8) + 6;
#define                                 NVMADR6_bit         BANKMASK(NVMADRL), 6
extern volatile __bit                   NVMADR7             @ (((unsigned) &NVMADRL)*8) + 7;
#define                                 NVMADR7_bit         BANKMASK(NVMADRL), 7
extern volatile __bit                   NVMADR8             @ (((unsigned) &NVMADRH)*8) + 0;
#define                                 NVMADR8_bit         BANKMASK(NVMADRH), 0
extern volatile __bit                   NVMADR9             @ (((unsigned) &NVMADRH)*8) + 1;
#define                                 NVMADR9_bit         BANKMASK(NVMADRH), 1
extern volatile __bit                   NVMDAT0             @ (((unsigned) &NVMDATL)*8) + 0;
#define                                 NVMDAT0_bit         BANKMASK(NVMDATL), 0
extern volatile __bit                   NVMDAT1             @ (((unsigned) &NVMDATL)*8) + 1;
#define                                 NVMDAT1_bit         BANKMASK(NVMDATL), 1
extern volatile __bit                   NVMDAT10            @ (((unsigned) &NVMDATH)*8) + 2;
#define                                 NVMDAT10_bit        BANKMASK(NVMDATH), 2
extern volatile __bit                   NVMDAT11            @ (((unsigned) &NVMDATH)*8) + 3;
#define                                 NVMDAT11_bit        BANKMASK(NVMDATH), 3
extern volatile __bit                   NVMDAT12            @ (((unsigned) &NVMDATH)*8) + 4;
#define                                 NVMDAT12_bit        BANKMASK(NVMDATH), 4
extern volatile __bit                   NVMDAT13            @ (((unsigned) &NVMDATH)*8) + 5;
#define                                 NVMDAT13_bit        BANKMASK(NVMDATH), 5
extern volatile __bit                   NVMDAT2             @ (((unsigned) &NVMDATL)*8) + 2;
#define                                 NVMDAT2_bit         BANKMASK(NVMDATL), 2
extern volatile __bit                   NVMDAT3             @ (((unsigned) &NVMDATL)*8) + 3;
#define                                 NVMDAT3_bit         BANKMASK(NVMDATL), 3
extern volatile __bit                   NVMDAT4             @ (((unsigned) &NVMDATL)*8) + 4;
#define                                 NVMDAT4_bit         BANKMASK(NVMDATL), 4
extern volatile __bit                   NVMDAT5             @ (((unsigned) &NVMDATL)*8) + 5;
#define                                 NVMDAT5_bit         BANKMASK(NVMDATL), 5
extern volatile __bit                   NVMDAT6             @ (((unsigned) &NVMDATL)*8) + 6;
#define                                 NVMDAT6_bit         BANKMASK(NVMDATL), 6
extern volatile __bit                   NVMDAT7             @ (((unsigned) &NVMDATL)*8) + 7;
#define                                 NVMDAT7_bit         BANKMASK(NVMDATL), 7
extern volatile __bit                   NVMDAT8             @ (((unsigned) &NVMDATH)*8) + 0;
#define                                 NVMDAT8_bit         BANKMASK(NVMDATH), 0
extern volatile __bit                   NVMDAT9             @ (((unsigned) &NVMDATH)*8) + 1;
#define                                 NVMDAT9_bit         BANKMASK(NVMDATH), 1
extern volatile __bit                   NVMIE               @ (((unsigned) &PIE2)*8) + 4;
#define                                 NVMIE_bit           BANKMASK(PIE2), 4
extern volatile __bit                   NVMIF               @ (((unsigned) &PIR2)*8) + 4;
#define                                 NVMIF_bit           BANKMASK(PIR2), 4
extern volatile __bit                   NVMMD               @ (((unsigned) &PMD0)*8) + 2;
#define                                 NVMMD_bit           BANKMASK(PMD0), 2
extern volatile __bit                   NVMREGS             @ (((unsigned) &NVMCON1)*8) + 6;
#define                                 NVMREGS_bit         BANKMASK(NVMCON1), 6
extern volatile __bit                   ODCA0               @ (((unsigned) &ODCONA)*8) + 0;
#define                                 ODCA0_bit           BANKMASK(ODCONA), 0
extern volatile __bit                   ODCA1               @ (((unsigned) &ODCONA)*8) + 1;
#define                                 ODCA1_bit           BANKMASK(ODCONA), 1
extern volatile __bit                   ODCA2               @ (((unsigned) &ODCONA)*8) + 2;
#define                                 ODCA2_bit           BANKMASK(ODCONA), 2
extern volatile __bit                   ODCA4               @ (((unsigned) &ODCONA)*8) + 4;
#define                                 ODCA4_bit           BANKMASK(ODCONA), 4
extern volatile __bit                   ODCA5               @ (((unsigned) &ODCONA)*8) + 5;
#define                                 ODCA5_bit           BANKMASK(ODCONA), 5
extern volatile __bit                   ODCC0               @ (((unsigned) &ODCONC)*8) + 0;
#define                                 ODCC0_bit           BANKMASK(ODCONC), 0
extern volatile __bit                   ODCC1               @ (((unsigned) &ODCONC)*8) + 1;
#define                                 ODCC1_bit           BANKMASK(ODCONC), 1
extern volatile __bit                   ODCC2               @ (((unsigned) &ODCONC)*8) + 2;
#define                                 ODCC2_bit           BANKMASK(ODCONC), 2
extern volatile __bit                   ODCC3               @ (((unsigned) &ODCONC)*8) + 3;
#define                                 ODCC3_bit           BANKMASK(ODCONC), 3
extern volatile __bit                   ODCC4               @ (((unsigned) &ODCONC)*8) + 4;
#define                                 ODCC4_bit           BANKMASK(ODCONC), 4
extern volatile __bit                   ODCC5               @ (((unsigned) &ODCONC)*8) + 5;
#define                                 ODCC5_bit           BANKMASK(ODCONC), 5
extern volatile __bit                   OERR                @ (((unsigned) &RC1STA)*8) + 1;
#define                                 OERR_bit            BANKMASK(RC1STA), 1
extern volatile __bit                   ORDY                @ (((unsigned) &OSCCON3)*8) + 4;
#define                                 ORDY_bit            BANKMASK(OSCCON3), 4
extern volatile __bit                   OSFIE               @ (((unsigned) &PIE3)*8) + 7;
#define                                 OSFIE_bit           BANKMASK(PIE3), 7
extern volatile __bit                   OSFIF               @ (((unsigned) &PIR3)*8) + 7;
#define                                 OSFIF_bit           BANKMASK(PIR3), 7
extern volatile __bit                   P5TSEL0             @ (((unsigned) &PWMTMRS)*8) + 0;
#define                                 P5TSEL0_bit         BANKMASK(PWMTMRS), 0
extern volatile __bit                   P5TSEL1             @ (((unsigned) &PWMTMRS)*8) + 1;
#define                                 P5TSEL1_bit         BANKMASK(PWMTMRS), 1
extern volatile __bit                   P6TSEL0             @ (((unsigned) &PWMTMRS)*8) + 2;
#define                                 P6TSEL0_bit         BANKMASK(PWMTMRS), 2
extern volatile __bit                   P6TSEL1             @ (((unsigned) &PWMTMRS)*8) + 3;
#define                                 P6TSEL1_bit         BANKMASK(PWMTMRS), 3
extern volatile __bit                   PCIE                @ (((unsigned) &SSP1CON3)*8) + 6;
#define                                 PCIE_bit            BANKMASK(SSP1CON3), 6
extern volatile __bit                   PEIE                @ (((unsigned) &INTCON)*8) + 6;
#define                                 PEIE_bit            BANKMASK(INTCON), 6
extern volatile __bit                   PEN                 @ (((unsigned) &SSP1CON2)*8) + 2;
#define                                 PEN_bit             BANKMASK(SSP1CON2), 2
extern volatile __bit                   PLLR                @ (((unsigned) &OSCSTAT1)*8) + 0;
#define                                 PLLR_bit            BANKMASK(OSCSTAT1), 0
extern volatile __bit                   PPSLOCKED           @ (((unsigned) &PPSLOCK)*8) + 0;
#define                                 PPSLOCKED_bit       BANKMASK(PPSLOCK), 0
extern volatile __bit                   PWM5DCH0            @ (((unsigned) &PWM5DCH)*8) + 0;
#define                                 PWM5DCH0_bit        BANKMASK(PWM5DCH), 0
extern volatile __bit                   PWM5DCH1            @ (((unsigned) &PWM5DCH)*8) + 1;
#define                                 PWM5DCH1_bit        BANKMASK(PWM5DCH), 1
extern volatile __bit                   PWM5DCH2            @ (((unsigned) &PWM5DCH)*8) + 2;
#define                                 PWM5DCH2_bit        BANKMASK(PWM5DCH), 2
extern volatile __bit                   PWM5DCH3            @ (((unsigned) &PWM5DCH)*8) + 3;
#define                                 PWM5DCH3_bit        BANKMASK(PWM5DCH), 3
extern volatile __bit                   PWM5DCH4            @ (((unsigned) &PWM5DCH)*8) + 4;
#define                                 PWM5DCH4_bit        BANKMASK(PWM5DCH), 4
extern volatile __bit                   PWM5DCH5            @ (((unsigned) &PWM5DCH)*8) + 5;
#define                                 PWM5DCH5_bit        BANKMASK(PWM5DCH), 5
extern volatile __bit                   PWM5DCH6            @ (((unsigned) &PWM5DCH)*8) + 6;
#define                                 PWM5DCH6_bit        BANKMASK(PWM5DCH), 6
extern volatile __bit                   PWM5DCH7            @ (((unsigned) &PWM5DCH)*8) + 7;
#define                                 PWM5DCH7_bit        BANKMASK(PWM5DCH), 7
extern volatile __bit                   PWM5DCL0            @ (((unsigned) &PWM5DCL)*8) + 6;
#define                                 PWM5DCL0_bit        BANKMASK(PWM5DCL), 6
extern volatile __bit                   PWM5DCL1            @ (((unsigned) &PWM5DCL)*8) + 7;
#define                                 PWM5DCL1_bit        BANKMASK(PWM5DCL), 7
extern volatile __bit                   PWM5EN              @ (((unsigned) &PWM5CON)*8) + 7;
#define                                 PWM5EN_bit          BANKMASK(PWM5CON), 7
extern volatile __bit                   PWM5MD              @ (((unsigned) &PMD3)*8) + 4;
#define                                 PWM5MD_bit          BANKMASK(PMD3), 4
extern volatile __bit                   PWM5OUT             @ (((unsigned) &PWM5CON)*8) + 5;
#define                                 PWM5OUT_bit         BANKMASK(PWM5CON), 5
extern volatile __bit                   PWM5POL             @ (((unsigned) &PWM5CON)*8) + 4;
#define                                 PWM5POL_bit         BANKMASK(PWM5CON), 4
extern volatile __bit                   PWM6DCH0            @ (((unsigned) &PWM6DCH)*8) + 0;
#define                                 PWM6DCH0_bit        BANKMASK(PWM6DCH), 0
extern volatile __bit                   PWM6DCH1            @ (((unsigned) &PWM6DCH)*8) + 1;
#define                                 PWM6DCH1_bit        BANKMASK(PWM6DCH), 1
extern volatile __bit                   PWM6DCH2            @ (((unsigned) &PWM6DCH)*8) + 2;
#define                                 PWM6DCH2_bit        BANKMASK(PWM6DCH), 2
extern volatile __bit                   PWM6DCH3            @ (((unsigned) &PWM6DCH)*8) + 3;
#define                                 PWM6DCH3_bit        BANKMASK(PWM6DCH), 3
extern volatile __bit                   PWM6DCH4            @ (((unsigned) &PWM6DCH)*8) + 4;
#define                                 PWM6DCH4_bit        BANKMASK(PWM6DCH), 4
extern volatile __bit                   PWM6DCH5            @ (((unsigned) &PWM6DCH)*8) + 5;
#define                                 PWM6DCH5_bit        BANKMASK(PWM6DCH), 5
extern volatile __bit                   PWM6DCH6            @ (((unsigned) &PWM6DCH)*8) + 6;
#define                                 PWM6DCH6_bit        BANKMASK(PWM6DCH), 6
extern volatile __bit                   PWM6DCH7            @ (((unsigned) &PWM6DCH)*8) + 7;
#define                                 PWM6DCH7_bit        BANKMASK(PWM6DCH), 7
extern volatile __bit                   PWM6DCL0            @ (((unsigned) &PWM6DCL)*8) + 6;
#define                                 PWM6DCL0_bit        BANKMASK(PWM6DCL), 6
extern volatile __bit                   PWM6DCL1            @ (((unsigned) &PWM6DCL)*8) + 7;
#define                                 PWM6DCL1_bit        BANKMASK(PWM6DCL), 7
extern volatile __bit                   PWM6EN              @ (((unsigned) &PWM6CON)*8) + 7;
#define                                 PWM6EN_bit          BANKMASK(PWM6CON), 7
extern volatile __bit                   PWM6MD              @ (((unsigned) &PMD3)*8) + 5;
#define                                 PWM6MD_bit          BANKMASK(PMD3), 5
extern volatile __bit                   PWM6OUT             @ (((unsigned) &PWM6CON)*8) + 5;
#define                                 PWM6OUT_bit         BANKMASK(PWM6CON), 5
extern volatile __bit                   PWM6POL             @ (((unsigned) &PWM6CON)*8) + 4;
#define                                 PWM6POL_bit         BANKMASK(PWM6CON), 4
extern volatile __bit                   RA0                 @ (((unsigned) &PORTA)*8) + 0;
#define                                 RA0_bit             BANKMASK(PORTA), 0
extern volatile __bit                   RA0PPS0             @ (((unsigned) &RA0PPS)*8) + 0;
#define                                 RA0PPS0_bit         BANKMASK(RA0PPS), 0
extern volatile __bit                   RA0PPS1             @ (((unsigned) &RA0PPS)*8) + 1;
#define                                 RA0PPS1_bit         BANKMASK(RA0PPS), 1
extern volatile __bit                   RA0PPS2             @ (((unsigned) &RA0PPS)*8) + 2;
#define                                 RA0PPS2_bit         BANKMASK(RA0PPS), 2
extern volatile __bit                   RA0PPS3             @ (((unsigned) &RA0PPS)*8) + 3;
#define                                 RA0PPS3_bit         BANKMASK(RA0PPS), 3
extern volatile __bit                   RA0PPS4             @ (((unsigned) &RA0PPS)*8) + 4;
#define                                 RA0PPS4_bit         BANKMASK(RA0PPS), 4
extern volatile __bit                   RA1                 @ (((unsigned) &PORTA)*8) + 1;
#define                                 RA1_bit             BANKMASK(PORTA), 1
extern volatile __bit                   RA1PPS0             @ (((unsigned) &RA1PPS)*8) + 0;
#define                                 RA1PPS0_bit         BANKMASK(RA1PPS), 0
extern volatile __bit                   RA1PPS1             @ (((unsigned) &RA1PPS)*8) + 1;
#define                                 RA1PPS1_bit         BANKMASK(RA1PPS), 1
extern volatile __bit                   RA1PPS2             @ (((unsigned) &RA1PPS)*8) + 2;
#define                                 RA1PPS2_bit         BANKMASK(RA1PPS), 2
extern volatile __bit                   RA1PPS3             @ (((unsigned) &RA1PPS)*8) + 3;
#define                                 RA1PPS3_bit         BANKMASK(RA1PPS), 3
extern volatile __bit                   RA1PPS4             @ (((unsigned) &RA1PPS)*8) + 4;
#define                                 RA1PPS4_bit         BANKMASK(RA1PPS), 4
extern volatile __bit                   RA2                 @ (((unsigned) &PORTA)*8) + 2;
#define                                 RA2_bit             BANKMASK(PORTA), 2
extern volatile __bit                   RA2PPS0             @ (((unsigned) &RA2PPS)*8) + 0;
#define                                 RA2PPS0_bit         BANKMASK(RA2PPS), 0
extern volatile __bit                   RA2PPS1             @ (((unsigned) &RA2PPS)*8) + 1;
#define                                 RA2PPS1_bit         BANKMASK(RA2PPS), 1
extern volatile __bit                   RA2PPS2             @ (((unsigned) &RA2PPS)*8) + 2;
#define                                 RA2PPS2_bit         BANKMASK(RA2PPS), 2
extern volatile __bit                   RA2PPS3             @ (((unsigned) &RA2PPS)*8) + 3;
#define                                 RA2PPS3_bit         BANKMASK(RA2PPS), 3
extern volatile __bit                   RA2PPS4             @ (((unsigned) &RA2PPS)*8) + 4;
#define                                 RA2PPS4_bit         BANKMASK(RA2PPS), 4
extern volatile __bit                   RA3                 @ (((unsigned) &PORTA)*8) + 3;
#define                                 RA3_bit             BANKMASK(PORTA), 3
extern volatile __bit                   RA4                 @ (((unsigned) &PORTA)*8) + 4;
#define                                 RA4_bit             BANKMASK(PORTA), 4
extern volatile __bit                   RA4PPS0             @ (((unsigned) &RA4PPS)*8) + 0;
#define                                 RA4PPS0_bit         BANKMASK(RA4PPS), 0
extern volatile __bit                   RA4PPS1             @ (((unsigned) &RA4PPS)*8) + 1;
#define                                 RA4PPS1_bit         BANKMASK(RA4PPS), 1
extern volatile __bit                   RA4PPS2             @ (((unsigned) &RA4PPS)*8) + 2;
#define                                 RA4PPS2_bit         BANKMASK(RA4PPS), 2
extern volatile __bit                   RA4PPS3             @ (((unsigned) &RA4PPS)*8) + 3;
#define                                 RA4PPS3_bit         BANKMASK(RA4PPS), 3
extern volatile __bit                   RA4PPS4             @ (((unsigned) &RA4PPS)*8) + 4;
#define                                 RA4PPS4_bit         BANKMASK(RA4PPS), 4
extern volatile __bit                   RA5                 @ (((unsigned) &PORTA)*8) + 5;
#define                                 RA5_bit             BANKMASK(PORTA), 5
extern volatile __bit                   RA5PPS0             @ (((unsigned) &RA5PPS)*8) + 0;
#define                                 RA5PPS0_bit         BANKMASK(RA5PPS), 0
extern volatile __bit                   RA5PPS1             @ (((unsigned) &RA5PPS)*8) + 1;
#define                                 RA5PPS1_bit         BANKMASK(RA5PPS), 1
extern volatile __bit                   RA5PPS2             @ (((unsigned) &RA5PPS)*8) + 2;
#define                                 RA5PPS2_bit         BANKMASK(RA5PPS), 2
extern volatile __bit                   RA5PPS3             @ (((unsigned) &RA5PPS)*8) + 3;
#define                                 RA5PPS3_bit         BANKMASK(RA5PPS), 3
extern volatile __bit                   RA5PPS4             @ (((unsigned) &RA5PPS)*8) + 4;
#define                                 RA5PPS4_bit         BANKMASK(RA5PPS), 4
extern volatile __bit                   RC0                 @ (((unsigned) &PORTC)*8) + 0;
#define                                 RC0_bit             BANKMASK(PORTC), 0
extern volatile __bit                   RC0PPS0             @ (((unsigned) &RC0PPS)*8) + 0;
#define                                 RC0PPS0_bit         BANKMASK(RC0PPS), 0
extern volatile __bit                   RC0PPS1             @ (((unsigned) &RC0PPS)*8) + 1;
#define                                 RC0PPS1_bit         BANKMASK(RC0PPS), 1
extern volatile __bit                   RC0PPS2             @ (((unsigned) &RC0PPS)*8) + 2;
#define                                 RC0PPS2_bit         BANKMASK(RC0PPS), 2
extern volatile __bit                   RC0PPS3             @ (((unsigned) &RC0PPS)*8) + 3;
#define                                 RC0PPS3_bit         BANKMASK(RC0PPS), 3
extern volatile __bit                   RC0PPS4             @ (((unsigned) &RC0PPS)*8) + 4;
#define                                 RC0PPS4_bit         BANKMASK(RC0PPS), 4
extern volatile __bit                   RC1                 @ (((unsigned) &PORTC)*8) + 1;
#define                                 RC1_bit             BANKMASK(PORTC), 1
extern volatile __bit                   RC1PPS0             @ (((unsigned) &RC1PPS)*8) + 0;
#define                                 RC1PPS0_bit         BANKMASK(RC1PPS), 0
extern volatile __bit                   RC1PPS1             @ (((unsigned) &RC1PPS)*8) + 1;
#define                                 RC1PPS1_bit         BANKMASK(RC1PPS), 1
extern volatile __bit                   RC1PPS2             @ (((unsigned) &RC1PPS)*8) + 2;
#define                                 RC1PPS2_bit         BANKMASK(RC1PPS), 2
extern volatile __bit                   RC1PPS3             @ (((unsigned) &RC1PPS)*8) + 3;
#define                                 RC1PPS3_bit         BANKMASK(RC1PPS), 3
extern volatile __bit                   RC1PPS4             @ (((unsigned) &RC1PPS)*8) + 4;
#define                                 RC1PPS4_bit         BANKMASK(RC1PPS), 4
extern volatile __bit                   RC2                 @ (((unsigned) &PORTC)*8) + 2;
#define                                 RC2_bit             BANKMASK(PORTC), 2
extern volatile __bit                   RC2PPS0             @ (((unsigned) &RC2PPS)*8) + 0;
#define                                 RC2PPS0_bit         BANKMASK(RC2PPS), 0
extern volatile __bit                   RC2PPS1             @ (((unsigned) &RC2PPS)*8) + 1;
#define                                 RC2PPS1_bit         BANKMASK(RC2PPS), 1
extern volatile __bit                   RC2PPS2             @ (((unsigned) &RC2PPS)*8) + 2;
#define                                 RC2PPS2_bit         BANKMASK(RC2PPS), 2
extern volatile __bit                   RC2PPS3             @ (((unsigned) &RC2PPS)*8) + 3;
#define                                 RC2PPS3_bit         BANKMASK(RC2PPS), 3
extern volatile __bit                   RC2PPS4             @ (((unsigned) &RC2PPS)*8) + 4;
#define                                 RC2PPS4_bit         BANKMASK(RC2PPS), 4
extern volatile __bit                   RC3                 @ (((unsigned) &PORTC)*8) + 3;
#define                                 RC3_bit             BANKMASK(PORTC), 3
extern volatile __bit                   RC3PPS0             @ (((unsigned) &RC3PPS)*8) + 0;
#define                                 RC3PPS0_bit         BANKMASK(RC3PPS), 0
extern volatile __bit                   RC3PPS1             @ (((unsigned) &RC3PPS)*8) + 1;
#define                                 RC3PPS1_bit         BANKMASK(RC3PPS), 1
extern volatile __bit                   RC3PPS2             @ (((unsigned) &RC3PPS)*8) + 2;
#define                                 RC3PPS2_bit         BANKMASK(RC3PPS), 2
extern volatile __bit                   RC3PPS3             @ (((unsigned) &RC3PPS)*8) + 3;
#define                                 RC3PPS3_bit         BANKMASK(RC3PPS), 3
extern volatile __bit                   RC3PPS4             @ (((unsigned) &RC3PPS)*8) + 4;
#define                                 RC3PPS4_bit         BANKMASK(RC3PPS), 4
extern volatile __bit                   RC4                 @ (((unsigned) &PORTC)*8) + 4;
#define                                 RC4_bit             BANKMASK(PORTC), 4
extern volatile __bit                   RC4PPS0             @ (((unsigned) &RC4PPS)*8) + 0;
#define                                 RC4PPS0_bit         BANKMASK(RC4PPS), 0
extern volatile __bit                   RC4PPS1             @ (((unsigned) &RC4PPS)*8) + 1;
#define                                 RC4PPS1_bit         BANKMASK(RC4PPS), 1
extern volatile __bit                   RC4PPS2             @ (((unsigned) &RC4PPS)*8) + 2;
#define                                 RC4PPS2_bit         BANKMASK(RC4PPS), 2
extern volatile __bit                   RC4PPS3             @ (((unsigned) &RC4PPS)*8) + 3;
#define                                 RC4PPS3_bit         BANKMASK(RC4PPS), 3
extern volatile __bit                   RC4PPS4             @ (((unsigned) &RC4PPS)*8) + 4;
#define                                 RC4PPS4_bit         BANKMASK(RC4PPS), 4
extern volatile __bit                   RC5                 @ (((unsigned) &PORTC)*8) + 5;
#define                                 RC5_bit             BANKMASK(PORTC), 5
extern volatile __bit                   RC5PPS0             @ (((unsigned) &RC5PPS)*8) + 0;
#define                                 RC5PPS0_bit         BANKMASK(RC5PPS), 0
extern volatile __bit                   RC5PPS1             @ (((unsigned) &RC5PPS)*8) + 1;
#define                                 RC5PPS1_bit         BANKMASK(RC5PPS), 1
extern volatile __bit                   RC5PPS2             @ (((unsigned) &RC5PPS)*8) + 2;
#define                                 RC5PPS2_bit         BANKMASK(RC5PPS), 2
extern volatile __bit                   RC5PPS3             @ (((unsigned) &RC5PPS)*8) + 3;
#define                                 RC5PPS3_bit         BANKMASK(RC5PPS), 3
extern volatile __bit                   RC5PPS4             @ (((unsigned) &RC5PPS)*8) + 4;
#define                                 RC5PPS4_bit         BANKMASK(RC5PPS), 4
extern volatile __bit                   RCEN                @ (((unsigned) &SSP1CON2)*8) + 3;
#define                                 RCEN_bit            BANKMASK(SSP1CON2), 3
extern volatile __bit                   RCIDL               @ (((unsigned) &BAUD1CON)*8) + 6;
#define                                 RCIDL_bit           BANKMASK(BAUD1CON), 6
extern volatile __bit                   RCIE                @ (((unsigned) &PIE1)*8) + 5;
#define                                 RCIE_bit            BANKMASK(PIE1), 5
extern volatile __bit                   RCIF                @ (((unsigned) &PIR1)*8) + 5;
#define                                 RCIF_bit            BANKMASK(PIR1), 5
extern volatile __bit                   RD                  @ (((unsigned) &NVMCON1)*8) + 0;
#define                                 RD_bit              BANKMASK(NVMCON1), 0
extern volatile __bit                   ROI                 @ (((unsigned) &CPUDOZE)*8) + 5;
#define                                 ROI_bit             BANKMASK(CPUDOZE), 5
extern volatile __bit                   RSEN                @ (((unsigned) &SSP1CON2)*8) + 1;
#define                                 RSEN_bit            BANKMASK(SSP1CON2), 1
extern volatile __bit                   RX9                 @ (((unsigned) &RC1STA)*8) + 6;
#define                                 RX9_bit             BANKMASK(RC1STA), 6
extern volatile __bit                   RX9D                @ (((unsigned) &RC1STA)*8) + 0;
#define                                 RX9D_bit            BANKMASK(RC1STA), 0
extern volatile __bit                   RXDTPPS0            @ (((unsigned) &RXPPS)*8) + 0;
#define                                 RXDTPPS0_bit        BANKMASK(RXPPS), 0
extern volatile __bit                   RXDTPPS1            @ (((unsigned) &RXPPS)*8) + 1;
#define                                 RXDTPPS1_bit        BANKMASK(RXPPS), 1
extern volatile __bit                   RXDTPPS2            @ (((unsigned) &RXPPS)*8) + 2;
#define                                 RXDTPPS2_bit        BANKMASK(RXPPS), 2
extern volatile __bit                   RXDTPPS3            @ (((unsigned) &RXPPS)*8) + 3;
#define                                 RXDTPPS3_bit        BANKMASK(RXPPS), 3
extern volatile __bit                   RXDTPPS4            @ (((unsigned) &RXPPS)*8) + 4;
#define                                 RXDTPPS4_bit        BANKMASK(RXPPS), 4
extern volatile __bit                   R_nW                @ (((unsigned) &SSP1STAT)*8) + 2;
#define                                 R_nW_bit            BANKMASK(SSP1STAT), 2
extern volatile __bit                   SBCDE               @ (((unsigned) &SSP1CON3)*8) + 2;
#define                                 SBCDE_bit           BANKMASK(SSP1CON3), 2
extern volatile __bit                   SBOREN              @ (((unsigned) &BORCON)*8) + 7;
#define                                 SBOREN_bit          BANKMASK(BORCON), 7
extern volatile __bit                   SCIE                @ (((unsigned) &SSP1CON3)*8) + 5;
#define                                 SCIE_bit            BANKMASK(SSP1CON3), 5
extern volatile __bit                   SCKP                @ (((unsigned) &BAUD1CON)*8) + 4;
#define                                 SCKP_bit            BANKMASK(BAUD1CON), 4
extern volatile __bit                   SDAHT               @ (((unsigned) &SSP1CON3)*8) + 3;
#define                                 SDAHT_bit           BANKMASK(SSP1CON3), 3
extern volatile __bit                   SEN                 @ (((unsigned) &SSP1CON2)*8) + 0;
#define                                 SEN_bit             BANKMASK(SSP1CON2), 0
extern volatile __bit                   SENDB               @ (((unsigned) &TX1STA)*8) + 3;
#define                                 SENDB_bit           BANKMASK(TX1STA), 3
extern volatile __bit                   SLRA0               @ (((unsigned) &SLRCONA)*8) + 0;
#define                                 SLRA0_bit           BANKMASK(SLRCONA), 0
extern volatile __bit                   SLRA1               @ (((unsigned) &SLRCONA)*8) + 1;
#define                                 SLRA1_bit           BANKMASK(SLRCONA), 1
extern volatile __bit                   SLRA2               @ (((unsigned) &SLRCONA)*8) + 2;
#define                                 SLRA2_bit           BANKMASK(SLRCONA), 2
extern volatile __bit                   SLRA4               @ (((unsigned) &SLRCONA)*8) + 4;
#define                                 SLRA4_bit           BANKMASK(SLRCONA), 4
extern volatile __bit                   SLRA5               @ (((unsigned) &SLRCONA)*8) + 5;
#define                                 SLRA5_bit           BANKMASK(SLRCONA), 5
extern volatile __bit                   SLRC0               @ (((unsigned) &SLRCONC)*8) + 0;
#define                                 SLRC0_bit           BANKMASK(SLRCONC), 0
extern volatile __bit                   SLRC1               @ (((unsigned) &SLRCONC)*8) + 1;
#define                                 SLRC1_bit           BANKMASK(SLRCONC), 1
extern volatile __bit                   SLRC2               @ (((unsigned) &SLRCONC)*8) + 2;
#define                                 SLRC2_bit           BANKMASK(SLRCONC), 2
extern volatile __bit                   SLRC3               @ (((unsigned) &SLRCONC)*8) + 3;
#define                                 SLRC3_bit           BANKMASK(SLRCONC), 3
extern volatile __bit                   SLRC4               @ (((unsigned) &SLRCONC)*8) + 4;
#define                                 SLRC4_bit           BANKMASK(SLRCONC), 4
extern volatile __bit                   SLRC5               @ (((unsigned) &SLRCONC)*8) + 5;
#define                                 SLRC5_bit           BANKMASK(SLRCONC), 5
extern volatile __bit                   SMP                 @ (((unsigned) &SSP1STAT)*8) + 7;
#define                                 SMP_bit             BANKMASK(SSP1STAT), 7
extern volatile __bit                   SOR                 @ (((unsigned) &OSCSTAT1)*8) + 3;
#define                                 SOR_bit             BANKMASK(OSCSTAT1), 3
extern volatile __bit                   SOSCBE              @ (((unsigned) &OSCCON3)*8) + 5;
#define                                 SOSCBE_bit          BANKMASK(OSCCON3), 5
extern volatile __bit                   SOSCEN              @ (((unsigned) &OSCEN)*8) + 3;
#define                                 SOSCEN_bit          BANKMASK(OSCEN), 3
extern volatile __bit                   SOSCPWR             @ (((unsigned) &OSCCON3)*8) + 6;
#define                                 SOSCPWR_bit         BANKMASK(OSCCON3), 6
extern volatile __bit                   SPEN                @ (((unsigned) &RC1STA)*8) + 7;
#define                                 SPEN_bit            BANKMASK(RC1STA), 7
extern volatile __bit                   SREN                @ (((unsigned) &RC1STA)*8) + 5;
#define                                 SREN_bit            BANKMASK(RC1STA), 5
extern volatile __bit                   SSP1ADD0            @ (((unsigned) &SSP1ADD)*8) + 0;
#define                                 SSP1ADD0_bit        BANKMASK(SSP1ADD), 0
extern volatile __bit                   SSP1ADD1            @ (((unsigned) &SSP1ADD)*8) + 1;
#define                                 SSP1ADD1_bit        BANKMASK(SSP1ADD), 1
extern volatile __bit                   SSP1ADD2            @ (((unsigned) &SSP1ADD)*8) + 2;
#define                                 SSP1ADD2_bit        BANKMASK(SSP1ADD), 2
extern volatile __bit                   SSP1ADD3            @ (((unsigned) &SSP1ADD)*8) + 3;
#define                                 SSP1ADD3_bit        BANKMASK(SSP1ADD), 3
extern volatile __bit                   SSP1ADD4            @ (((unsigned) &SSP1ADD)*8) + 4;
#define                                 SSP1ADD4_bit        BANKMASK(SSP1ADD), 4
extern volatile __bit                   SSP1ADD5            @ (((unsigned) &SSP1ADD)*8) + 5;
#define                                 SSP1ADD5_bit        BANKMASK(SSP1ADD), 5
extern volatile __bit                   SSP1ADD6            @ (((unsigned) &SSP1ADD)*8) + 6;
#define                                 SSP1ADD6_bit        BANKMASK(SSP1ADD), 6
extern volatile __bit                   SSP1ADD7            @ (((unsigned) &SSP1ADD)*8) + 7;
#define                                 SSP1ADD7_bit        BANKMASK(SSP1ADD), 7
extern volatile __bit                   SSP1BUF0            @ (((unsigned) &SSP1BUF)*8) + 0;
#define                                 SSP1BUF0_bit        BANKMASK(SSP1BUF), 0
extern volatile __bit                   SSP1BUF1            @ (((unsigned) &SSP1BUF)*8) + 1;
#define                                 SSP1BUF1_bit        BANKMASK(SSP1BUF), 1
extern volatile __bit                   SSP1BUF2            @ (((unsigned) &SSP1BUF)*8) + 2;
#define                                 SSP1BUF2_bit        BANKMASK(SSP1BUF), 2
extern volatile __bit                   SSP1BUF3            @ (((unsigned) &SSP1BUF)*8) + 3;
#define                                 SSP1BUF3_bit        BANKMASK(SSP1BUF), 3
extern volatile __bit                   SSP1BUF4            @ (((unsigned) &SSP1BUF)*8) + 4;
#define                                 SSP1BUF4_bit        BANKMASK(SSP1BUF), 4
extern volatile __bit                   SSP1BUF5            @ (((unsigned) &SSP1BUF)*8) + 5;
#define                                 SSP1BUF5_bit        BANKMASK(SSP1BUF), 5
extern volatile __bit                   SSP1BUF6            @ (((unsigned) &SSP1BUF)*8) + 6;
#define                                 SSP1BUF6_bit        BANKMASK(SSP1BUF), 6
extern volatile __bit                   SSP1BUF7            @ (((unsigned) &SSP1BUF)*8) + 7;
#define                                 SSP1BUF7_bit        BANKMASK(SSP1BUF), 7
extern volatile __bit                   SSP1CLKPPS0         @ (((unsigned) &SSP1CLKPPS)*8) + 0;
#define                                 SSP1CLKPPS0_bit     BANKMASK(SSP1CLKPPS), 0
extern volatile __bit                   SSP1CLKPPS1         @ (((unsigned) &SSP1CLKPPS)*8) + 1;
#define                                 SSP1CLKPPS1_bit     BANKMASK(SSP1CLKPPS), 1
extern volatile __bit                   SSP1CLKPPS2         @ (((unsigned) &SSP1CLKPPS)*8) + 2;
#define                                 SSP1CLKPPS2_bit     BANKMASK(SSP1CLKPPS), 2
extern volatile __bit                   SSP1CLKPPS3         @ (((unsigned) &SSP1CLKPPS)*8) + 3;
#define                                 SSP1CLKPPS3_bit     BANKMASK(SSP1CLKPPS), 3
extern volatile __bit                   SSP1CLKPPS4         @ (((unsigned) &SSP1CLKPPS)*8) + 4;
#define                                 SSP1CLKPPS4_bit     BANKMASK(SSP1CLKPPS), 4
extern volatile __bit                   SSP1DATPPS0         @ (((unsigned) &SSP1DATPPS)*8) + 0;
#define                                 SSP1DATPPS0_bit     BANKMASK(SSP1DATPPS), 0
extern volatile __bit                   SSP1DATPPS1         @ (((unsigned) &SSP1DATPPS)*8) + 1;
#define                                 SSP1DATPPS1_bit     BANKMASK(SSP1DATPPS), 1
extern volatile __bit                   SSP1DATPPS2         @ (((unsigned) &SSP1DATPPS)*8) + 2;
#define                                 SSP1DATPPS2_bit     BANKMASK(SSP1DATPPS), 2
extern volatile __bit                   SSP1DATPPS3         @ (((unsigned) &SSP1DATPPS)*8) + 3;
#define                                 SSP1DATPPS3_bit     BANKMASK(SSP1DATPPS), 3
extern volatile __bit                   SSP1DATPPS4         @ (((unsigned) &SSP1DATPPS)*8) + 4;
#define                                 SSP1DATPPS4_bit     BANKMASK(SSP1DATPPS), 4
extern volatile __bit                   SSP1IE              @ (((unsigned) &PIE1)*8) + 3;
#define                                 SSP1IE_bit          BANKMASK(PIE1), 3
extern volatile __bit                   SSP1IF              @ (((unsigned) &PIR1)*8) + 3;
#define                                 SSP1IF_bit          BANKMASK(PIR1), 3
extern volatile __bit                   SSP1MSK0            @ (((unsigned) &SSP1MSK)*8) + 0;
#define                                 SSP1MSK0_bit        BANKMASK(SSP1MSK), 0
extern volatile __bit                   SSP1MSK1            @ (((unsigned) &SSP1MSK)*8) + 1;
#define                                 SSP1MSK1_bit        BANKMASK(SSP1MSK), 1
extern volatile __bit                   SSP1MSK2            @ (((unsigned) &SSP1MSK)*8) + 2;
#define                                 SSP1MSK2_bit        BANKMASK(SSP1MSK), 2
extern volatile __bit                   SSP1MSK3            @ (((unsigned) &SSP1MSK)*8) + 3;
#define                                 SSP1MSK3_bit        BANKMASK(SSP1MSK), 3
extern volatile __bit                   SSP1MSK4            @ (((unsigned) &SSP1MSK)*8) + 4;
#define                                 SSP1MSK4_bit        BANKMASK(SSP1MSK), 4
extern volatile __bit                   SSP1MSK5            @ (((unsigned) &SSP1MSK)*8) + 5;
#define                                 SSP1MSK5_bit        BANKMASK(SSP1MSK), 5
extern volatile __bit                   SSP1MSK6            @ (((unsigned) &SSP1MSK)*8) + 6;
#define                                 SSP1MSK6_bit        BANKMASK(SSP1MSK), 6
extern volatile __bit                   SSP1MSK7            @ (((unsigned) &SSP1MSK)*8) + 7;
#define                                 SSP1MSK7_bit        BANKMASK(SSP1MSK), 7
extern volatile __bit                   SSP1SSPPS0          @ (((unsigned) &SSP1SSPPS)*8) + 0;
#define                                 SSP1SSPPS0_bit      BANKMASK(SSP1SSPPS), 0
extern volatile __bit                   SSP1SSPPS1          @ (((unsigned) &SSP1SSPPS)*8) + 1;
#define                                 SSP1SSPPS1_bit      BANKMASK(SSP1SSPPS), 1
extern volatile __bit                   SSP1SSPPS2          @ (((unsigned) &SSP1SSPPS)*8) + 2;
#define                                 SSP1SSPPS2_bit      BANKMASK(SSP1SSPPS), 2
extern volatile __bit                   SSP1SSPPS3          @ (((unsigned) &SSP1SSPPS)*8) + 3;
#define                                 SSP1SSPPS3_bit      BANKMASK(SSP1SSPPS), 3
extern volatile __bit                   SSP1SSPPS4          @ (((unsigned) &SSP1SSPPS)*8) + 4;
#define                                 SSP1SSPPS4_bit      BANKMASK(SSP1SSPPS), 4
extern volatile __bit                   SSPEN               @ (((unsigned) &SSP1CON1)*8) + 5;
#define                                 SSPEN_bit           BANKMASK(SSP1CON1), 5
extern volatile __bit                   SSPM0               @ (((unsigned) &SSP1CON1)*8) + 0;
#define                                 SSPM0_bit           BANKMASK(SSP1CON1), 0
extern volatile __bit                   SSPM1               @ (((unsigned) &SSP1CON1)*8) + 1;
#define                                 SSPM1_bit           BANKMASK(SSP1CON1), 1
extern volatile __bit                   SSPM2               @ (((unsigned) &SSP1CON1)*8) + 2;
#define                                 SSPM2_bit           BANKMASK(SSP1CON1), 2
extern volatile __bit                   SSPM3               @ (((unsigned) &SSP1CON1)*8) + 3;
#define                                 SSPM3_bit           BANKMASK(SSP1CON1), 3
extern volatile __bit                   SSPOV               @ (((unsigned) &SSP1CON1)*8) + 6;
#define                                 SSPOV_bit           BANKMASK(SSP1CON1), 6
extern volatile __bit                   STKOVF              @ (((unsigned) &PCON0)*8) + 7;
#define                                 STKOVF_bit          BANKMASK(PCON0), 7
extern volatile __bit                   STKUNF              @ (((unsigned) &PCON0)*8) + 6;
#define                                 STKUNF_bit          BANKMASK(PCON0), 6
extern volatile __bit                   SWDTEN              @ (((unsigned) &WDTCON)*8) + 0;
#define                                 SWDTEN_bit          BANKMASK(WDTCON), 0
extern volatile __bit                   SYNC                @ (((unsigned) &TX1STA)*8) + 4;
#define                                 SYNC_bit            BANKMASK(TX1STA), 4
extern volatile __bit                   SYSCMD              @ (((unsigned) &PMD0)*8) + 7;
#define                                 SYSCMD_bit          BANKMASK(PMD0), 7
extern volatile __bit                   T016BIT             @ (((unsigned) &T0CON0)*8) + 4;
#define                                 T016BIT_bit         BANKMASK(T0CON0), 4
extern volatile __bit                   T0ASYNC             @ (((unsigned) &T0CON1)*8) + 4;
#define                                 T0ASYNC_bit         BANKMASK(T0CON1), 4
extern volatile __bit                   T0CKIPPS0           @ (((unsigned) &T0CKIPPS)*8) + 0;
#define                                 T0CKIPPS0_bit       BANKMASK(T0CKIPPS), 0
extern volatile __bit                   T0CKIPPS1           @ (((unsigned) &T0CKIPPS)*8) + 1;
#define                                 T0CKIPPS1_bit       BANKMASK(T0CKIPPS), 1
extern volatile __bit                   T0CKIPPS2           @ (((unsigned) &T0CKIPPS)*8) + 2;
#define                                 T0CKIPPS2_bit       BANKMASK(T0CKIPPS), 2
extern volatile __bit                   T0CKIPPS3           @ (((unsigned) &T0CKIPPS)*8) + 3;
#define                                 T0CKIPPS3_bit       BANKMASK(T0CKIPPS), 3
extern volatile __bit                   T0CKIPPS4           @ (((unsigned) &T0CKIPPS)*8) + 4;
#define                                 T0CKIPPS4_bit       BANKMASK(T0CKIPPS), 4
extern volatile __bit                   T0CKPS0             @ (((unsigned) &T0CON1)*8) + 0;
#define                                 T0CKPS0_bit         BANKMASK(T0CON1), 0
extern volatile __bit                   T0CKPS1             @ (((unsigned) &T0CON1)*8) + 1;
#define                                 T0CKPS1_bit         BANKMASK(T0CON1), 1
extern volatile __bit                   T0CKPS2             @ (((unsigned) &T0CON1)*8) + 2;
#define                                 T0CKPS2_bit         BANKMASK(T0CON1), 2
extern volatile __bit                   T0CKPS3             @ (((unsigned) &T0CON1)*8) + 3;
#define                                 T0CKPS3_bit         BANKMASK(T0CON1), 3
extern volatile __bit                   T0CS0               @ (((unsigned) &T0CON1)*8) + 5;
#define                                 T0CS0_bit           BANKMASK(T0CON1), 5
extern volatile __bit                   T0CS1               @ (((unsigned) &T0CON1)*8) + 6;
#define                                 T0CS1_bit           BANKMASK(T0CON1), 6
extern volatile __bit                   T0CS2               @ (((unsigned) &T0CON1)*8) + 7;
#define                                 T0CS2_bit           BANKMASK(T0CON1), 7
extern volatile __bit                   T0EN                @ (((unsigned) &T0CON0)*8) + 7;
#define                                 T0EN_bit            BANKMASK(T0CON0), 7
extern volatile __bit                   T0OUT               @ (((unsigned) &T0CON0)*8) + 5;
#define                                 T0OUT_bit           BANKMASK(T0CON0), 5
extern volatile __bit                   T0OUTPS0            @ (((unsigned) &T0CON0)*8) + 0;
#define                                 T0OUTPS0_bit        BANKMASK(T0CON0), 0
extern volatile __bit                   T0OUTPS1            @ (((unsigned) &T0CON0)*8) + 1;
#define                                 T0OUTPS1_bit        BANKMASK(T0CON0), 1
extern volatile __bit                   T0OUTPS2            @ (((unsigned) &T0CON0)*8) + 2;
#define                                 T0OUTPS2_bit        BANKMASK(T0CON0), 2
extern volatile __bit                   T0OUTPS3            @ (((unsigned) &T0CON0)*8) + 3;
#define                                 T0OUTPS3_bit        BANKMASK(T0CON0), 3
extern volatile __bit                   T1CKIPPS0           @ (((unsigned) &T1CKIPPS)*8) + 0;
#define                                 T1CKIPPS0_bit       BANKMASK(T1CKIPPS), 0
extern volatile __bit                   T1CKIPPS1           @ (((unsigned) &T1CKIPPS)*8) + 1;
#define                                 T1CKIPPS1_bit       BANKMASK(T1CKIPPS), 1
extern volatile __bit                   T1CKIPPS2           @ (((unsigned) &T1CKIPPS)*8) + 2;
#define                                 T1CKIPPS2_bit       BANKMASK(T1CKIPPS), 2
extern volatile __bit                   T1CKIPPS3           @ (((unsigned) &T1CKIPPS)*8) + 3;
#define                                 T1CKIPPS3_bit       BANKMASK(T1CKIPPS), 3
extern volatile __bit                   T1CKIPPS4           @ (((unsigned) &T1CKIPPS)*8) + 4;
#define                                 T1CKIPPS4_bit       BANKMASK(T1CKIPPS), 4
extern volatile __bit                   T1CKPS0             @ (((unsigned) &T1CON)*8) + 4;
#define                                 T1CKPS0_bit         BANKMASK(T1CON), 4
extern volatile __bit                   T1CKPS1             @ (((unsigned) &T1CON)*8) + 5;
#define                                 T1CKPS1_bit         BANKMASK(T1CON), 5
extern volatile __bit                   T1GGO_nDONE         @ (((unsigned) &T1GCON)*8) + 3;
#define                                 T1GGO_nDONE_bit     BANKMASK(T1GCON), 3
extern volatile __bit                   T1GPOL              @ (((unsigned) &T1GCON)*8) + 6;
#define                                 T1GPOL_bit          BANKMASK(T1GCON), 6
extern volatile __bit                   T1GPPS0             @ (((unsigned) &T1GPPS)*8) + 0;
#define                                 T1GPPS0_bit         BANKMASK(T1GPPS), 0
extern volatile __bit                   T1GPPS1             @ (((unsigned) &T1GPPS)*8) + 1;
#define                                 T1GPPS1_bit         BANKMASK(T1GPPS), 1
extern volatile __bit                   T1GPPS2             @ (((unsigned) &T1GPPS)*8) + 2;
#define                                 T1GPPS2_bit         BANKMASK(T1GPPS), 2
extern volatile __bit                   T1GPPS3             @ (((unsigned) &T1GPPS)*8) + 3;
#define                                 T1GPPS3_bit         BANKMASK(T1GPPS), 3
extern volatile __bit                   T1GPPS4             @ (((unsigned) &T1GPPS)*8) + 4;
#define                                 T1GPPS4_bit         BANKMASK(T1GPPS), 4
extern volatile __bit                   T1GSPM              @ (((unsigned) &T1GCON)*8) + 4;
#define                                 T1GSPM_bit          BANKMASK(T1GCON), 4
extern volatile __bit                   T1GSS0              @ (((unsigned) &T1GCON)*8) + 0;
#define                                 T1GSS0_bit          BANKMASK(T1GCON), 0
extern volatile __bit                   T1GSS1              @ (((unsigned) &T1GCON)*8) + 1;
#define                                 T1GSS1_bit          BANKMASK(T1GCON), 1
extern volatile __bit                   T1GTM               @ (((unsigned) &T1GCON)*8) + 5;
#define                                 T1GTM_bit           BANKMASK(T1GCON), 5
extern volatile __bit                   T1GVAL              @ (((unsigned) &T1GCON)*8) + 2;
#define                                 T1GVAL_bit          BANKMASK(T1GCON), 2
extern volatile __bit                   T1SOSC              @ (((unsigned) &T1CON)*8) + 3;
#define                                 T1SOSC_bit          BANKMASK(T1CON), 3
extern volatile __bit                   T1SYNC              @ (((unsigned) &T1CON)*8) + 2;
#define                                 T1SYNC_bit          BANKMASK(T1CON), 2
extern volatile __bit                   T2CKPS0             @ (((unsigned) &T2CON)*8) + 0;
#define                                 T2CKPS0_bit         BANKMASK(T2CON), 0
extern volatile __bit                   T2CKPS1             @ (((unsigned) &T2CON)*8) + 1;
#define                                 T2CKPS1_bit         BANKMASK(T2CON), 1
extern volatile __bit                   T2OUTPS0            @ (((unsigned) &T2CON)*8) + 3;
#define                                 T2OUTPS0_bit        BANKMASK(T2CON), 3
extern volatile __bit                   T2OUTPS1            @ (((unsigned) &T2CON)*8) + 4;
#define                                 T2OUTPS1_bit        BANKMASK(T2CON), 4
extern volatile __bit                   T2OUTPS2            @ (((unsigned) &T2CON)*8) + 5;
#define                                 T2OUTPS2_bit        BANKMASK(T2CON), 5
extern volatile __bit                   T2OUTPS3            @ (((unsigned) &T2CON)*8) + 6;
#define                                 T2OUTPS3_bit        BANKMASK(T2CON), 6
extern volatile __bit                   T3CKPS0             @ (((unsigned) &T3CON)*8) + 4;
#define                                 T3CKPS0_bit         BANKMASK(T3CON), 4
extern volatile __bit                   T3CKPS1             @ (((unsigned) &T3CON)*8) + 5;
#define                                 T3CKPS1_bit         BANKMASK(T3CON), 5
extern volatile __bit                   T3GGO_nDONE         @ (((unsigned) &T3GCON)*8) + 3;
#define                                 T3GGO_nDONE_bit     BANKMASK(T3GCON), 3
extern volatile __bit                   T3GPOL              @ (((unsigned) &T3GCON)*8) + 6;
#define                                 T3GPOL_bit          BANKMASK(T3GCON), 6
extern volatile __bit                   T3GSPM              @ (((unsigned) &T3GCON)*8) + 4;
#define                                 T3GSPM_bit          BANKMASK(T3GCON), 4
extern volatile __bit                   T3GSS0              @ (((unsigned) &T3GCON)*8) + 0;
#define                                 T3GSS0_bit          BANKMASK(T3GCON), 0
extern volatile __bit                   T3GSS1              @ (((unsigned) &T3GCON)*8) + 1;
#define                                 T3GSS1_bit          BANKMASK(T3GCON), 1
extern volatile __bit                   T3GTM               @ (((unsigned) &T3GCON)*8) + 5;
#define                                 T3GTM_bit           BANKMASK(T3GCON), 5
extern volatile __bit                   T3GVAL              @ (((unsigned) &T3GCON)*8) + 2;
#define                                 T3GVAL_bit          BANKMASK(T3GCON), 2
extern volatile __bit                   T3SOSC              @ (((unsigned) &T3CON)*8) + 3;
#define                                 T3SOSC_bit          BANKMASK(T3CON), 3
extern volatile __bit                   T3SYNC              @ (((unsigned) &T3CON)*8) + 2;
#define                                 T3SYNC_bit          BANKMASK(T3CON), 2
extern volatile __bit                   T4CKPS0             @ (((unsigned) &T4CON)*8) + 0;
#define                                 T4CKPS0_bit         BANKMASK(T4CON), 0
extern volatile __bit                   T4CKPS1             @ (((unsigned) &T4CON)*8) + 1;
#define                                 T4CKPS1_bit         BANKMASK(T4CON), 1
extern volatile __bit                   T4OUTPS0            @ (((unsigned) &T4CON)*8) + 3;
#define                                 T4OUTPS0_bit        BANKMASK(T4CON), 3
extern volatile __bit                   T4OUTPS1            @ (((unsigned) &T4CON)*8) + 4;
#define                                 T4OUTPS1_bit        BANKMASK(T4CON), 4
extern volatile __bit                   T4OUTPS2            @ (((unsigned) &T4CON)*8) + 5;
#define                                 T4OUTPS2_bit        BANKMASK(T4CON), 5
extern volatile __bit                   T4OUTPS3            @ (((unsigned) &T4CON)*8) + 6;
#define                                 T4OUTPS3_bit        BANKMASK(T4CON), 6
extern volatile __bit                   T5CKPS0             @ (((unsigned) &T5CON)*8) + 4;
#define                                 T5CKPS0_bit         BANKMASK(T5CON), 4
extern volatile __bit                   T5CKPS1             @ (((unsigned) &T5CON)*8) + 5;
#define                                 T5CKPS1_bit         BANKMASK(T5CON), 5
extern volatile __bit                   T5GGO_nDONE         @ (((unsigned) &T5GCON)*8) + 3;
#define                                 T5GGO_nDONE_bit     BANKMASK(T5GCON), 3
extern volatile __bit                   T5GPOL              @ (((unsigned) &T5GCON)*8) + 6;
#define                                 T5GPOL_bit          BANKMASK(T5GCON), 6
extern volatile __bit                   T5GSPM              @ (((unsigned) &T5GCON)*8) + 4;
#define                                 T5GSPM_bit          BANKMASK(T5GCON), 4
extern volatile __bit                   T5GSS0              @ (((unsigned) &T5GCON)*8) + 0;
#define                                 T5GSS0_bit          BANKMASK(T5GCON), 0
extern volatile __bit                   T5GSS1              @ (((unsigned) &T5GCON)*8) + 1;
#define                                 T5GSS1_bit          BANKMASK(T5GCON), 1
extern volatile __bit                   T5GTM               @ (((unsigned) &T5GCON)*8) + 5;
#define                                 T5GTM_bit           BANKMASK(T5GCON), 5
extern volatile __bit                   T5GVAL              @ (((unsigned) &T5GCON)*8) + 2;
#define                                 T5GVAL_bit          BANKMASK(T5GCON), 2
extern volatile __bit                   T5SOSC              @ (((unsigned) &T5CON)*8) + 3;
#define                                 T5SOSC_bit          BANKMASK(T5CON), 3
extern volatile __bit                   T5SYNC              @ (((unsigned) &T5CON)*8) + 2;
#define                                 T5SYNC_bit          BANKMASK(T5CON), 2
extern volatile __bit                   T6CKPS0             @ (((unsigned) &T6CON)*8) + 0;
#define                                 T6CKPS0_bit         BANKMASK(T6CON), 0
extern volatile __bit                   T6CKPS1             @ (((unsigned) &T6CON)*8) + 1;
#define                                 T6CKPS1_bit         BANKMASK(T6CON), 1
extern volatile __bit                   T6OUTPS0            @ (((unsigned) &T6CON)*8) + 3;
#define                                 T6OUTPS0_bit        BANKMASK(T6CON), 3
extern volatile __bit                   T6OUTPS1            @ (((unsigned) &T6CON)*8) + 4;
#define                                 T6OUTPS1_bit        BANKMASK(T6CON), 4
extern volatile __bit                   T6OUTPS2            @ (((unsigned) &T6CON)*8) + 5;
#define                                 T6OUTPS2_bit        BANKMASK(T6CON), 5
extern volatile __bit                   T6OUTPS3            @ (((unsigned) &T6CON)*8) + 6;
#define                                 T6OUTPS3_bit        BANKMASK(T6CON), 6
extern volatile __bit                   TMR00               @ (((unsigned) &TMR0L)*8) + 0;
#define                                 TMR00_bit           BANKMASK(TMR0L), 0
extern volatile __bit                   TMR01               @ (((unsigned) &TMR0L)*8) + 1;
#define                                 TMR01_bit           BANKMASK(TMR0L), 1
extern volatile __bit                   TMR010              @ (((unsigned) &TMR0H)*8) + 2;
#define                                 TMR010_bit          BANKMASK(TMR0H), 2
extern volatile __bit                   TMR011              @ (((unsigned) &TMR0H)*8) + 3;
#define                                 TMR011_bit          BANKMASK(TMR0H), 3
extern volatile __bit                   TMR012              @ (((unsigned) &TMR0H)*8) + 4;
#define                                 TMR012_bit          BANKMASK(TMR0H), 4
extern volatile __bit                   TMR013              @ (((unsigned) &TMR0H)*8) + 5;
#define                                 TMR013_bit          BANKMASK(TMR0H), 5
extern volatile __bit                   TMR014              @ (((unsigned) &TMR0H)*8) + 6;
#define                                 TMR014_bit          BANKMASK(TMR0H), 6
extern volatile __bit                   TMR015              @ (((unsigned) &TMR0H)*8) + 7;
#define                                 TMR015_bit          BANKMASK(TMR0H), 7
extern volatile __bit                   TMR02               @ (((unsigned) &TMR0L)*8) + 2;
#define                                 TMR02_bit           BANKMASK(TMR0L), 2
extern volatile __bit                   TMR03               @ (((unsigned) &TMR0L)*8) + 3;
#define                                 TMR03_bit           BANKMASK(TMR0L), 3
extern volatile __bit                   TMR04               @ (((unsigned) &TMR0L)*8) + 4;
#define                                 TMR04_bit           BANKMASK(TMR0L), 4
extern volatile __bit                   TMR05               @ (((unsigned) &TMR0L)*8) + 5;
#define                                 TMR05_bit           BANKMASK(TMR0L), 5
extern volatile __bit                   TMR06               @ (((unsigned) &TMR0L)*8) + 6;
#define                                 TMR06_bit           BANKMASK(TMR0L), 6
extern volatile __bit                   TMR07               @ (((unsigned) &TMR0L)*8) + 7;
#define                                 TMR07_bit           BANKMASK(TMR0L), 7
extern volatile __bit                   TMR08               @ (((unsigned) &TMR0H)*8) + 0;
#define                                 TMR08_bit           BANKMASK(TMR0H), 0
extern volatile __bit                   TMR09               @ (((unsigned) &TMR0H)*8) + 1;
#define                                 TMR09_bit           BANKMASK(TMR0H), 1
extern volatile __bit                   TMR0IE              @ (((unsigned) &PIE0)*8) + 5;
#define                                 TMR0IE_bit          BANKMASK(PIE0), 5
extern volatile __bit                   TMR0IF              @ (((unsigned) &PIR0)*8) + 5;
#define                                 TMR0IF_bit          BANKMASK(PIR0), 5
extern volatile __bit                   TMR0MD              @ (((unsigned) &PMD1)*8) + 0;
#define                                 TMR0MD_bit          BANKMASK(PMD1), 0
extern volatile __bit                   TMR1CS0             @ (((unsigned) &T1CON)*8) + 6;
#define                                 TMR1CS0_bit         BANKMASK(T1CON), 6
extern volatile __bit                   TMR1CS1             @ (((unsigned) &T1CON)*8) + 7;
#define                                 TMR1CS1_bit         BANKMASK(T1CON), 7
extern volatile __bit                   TMR1GE              @ (((unsigned) &T1GCON)*8) + 7;
#define                                 TMR1GE_bit          BANKMASK(T1GCON), 7
extern volatile __bit                   TMR1GIE             @ (((unsigned) &PIE1)*8) + 7;
#define                                 TMR1GIE_bit         BANKMASK(PIE1), 7
extern volatile __bit                   TMR1GIF             @ (((unsigned) &PIR1)*8) + 7;
#define                                 TMR1GIF_bit         BANKMASK(PIR1), 7
extern volatile __bit                   TMR1IE              @ (((unsigned) &PIE1)*8) + 0;
#define                                 TMR1IE_bit          BANKMASK(PIE1), 0
extern volatile __bit                   TMR1IF              @ (((unsigned) &PIR1)*8) + 0;
#define                                 TMR1IF_bit          BANKMASK(PIR1), 0
extern volatile __bit                   TMR1MD              @ (((unsigned) &PMD1)*8) + 1;
#define                                 TMR1MD_bit          BANKMASK(PMD1), 1
extern volatile __bit                   TMR1ON              @ (((unsigned) &T1CON)*8) + 0;
#define                                 TMR1ON_bit          BANKMASK(T1CON), 0
extern volatile __bit                   TMR2IE              @ (((unsigned) &PIE1)*8) + 1;
#define                                 TMR2IE_bit          BANKMASK(PIE1), 1
extern volatile __bit                   TMR2IF              @ (((unsigned) &PIR1)*8) + 1;
#define                                 TMR2IF_bit          BANKMASK(PIR1), 1
extern volatile __bit                   TMR2MD              @ (((unsigned) &PMD1)*8) + 2;
#define                                 TMR2MD_bit          BANKMASK(PMD1), 2
extern volatile __bit                   TMR2ON              @ (((unsigned) &T2CON)*8) + 2;
#define                                 TMR2ON_bit          BANKMASK(T2CON), 2
extern volatile __bit                   TMR3CS0             @ (((unsigned) &T3CON)*8) + 6;
#define                                 TMR3CS0_bit         BANKMASK(T3CON), 6
extern volatile __bit                   TMR3CS1             @ (((unsigned) &T3CON)*8) + 7;
#define                                 TMR3CS1_bit         BANKMASK(T3CON), 7
extern volatile __bit                   TMR3GE              @ (((unsigned) &T3GCON)*8) + 7;
#define                                 TMR3GE_bit          BANKMASK(T3GCON), 7
extern volatile __bit                   TMR3GIE             @ (((unsigned) &PIE3)*8) + 5;
#define                                 TMR3GIE_bit         BANKMASK(PIE3), 5
extern volatile __bit                   TMR3GIF             @ (((unsigned) &PIR3)*8) + 5;
#define                                 TMR3GIF_bit         BANKMASK(PIR3), 5
extern volatile __bit                   TMR3IE              @ (((unsigned) &PIE3)*8) + 4;
#define                                 TMR3IE_bit          BANKMASK(PIE3), 4
extern volatile __bit                   TMR3IF              @ (((unsigned) &PIR3)*8) + 4;
#define                                 TMR3IF_bit          BANKMASK(PIR3), 4
extern volatile __bit                   TMR3MD              @ (((unsigned) &PMD1)*8) + 3;
#define                                 TMR3MD_bit          BANKMASK(PMD1), 3
extern volatile __bit                   TMR3ON              @ (((unsigned) &T3CON)*8) + 0;
#define                                 TMR3ON_bit          BANKMASK(T3CON), 0
extern volatile __bit                   TMR4IE              @ (((unsigned) &PIE2)*8) + 1;
#define                                 TMR4IE_bit          BANKMASK(PIE2), 1
extern volatile __bit                   TMR4IF              @ (((unsigned) &PIR2)*8) + 1;
#define                                 TMR4IF_bit          BANKMASK(PIR2), 1
extern volatile __bit                   TMR4MD              @ (((unsigned) &PMD1)*8) + 4;
#define                                 TMR4MD_bit          BANKMASK(PMD1), 4
extern volatile __bit                   TMR4ON              @ (((unsigned) &T4CON)*8) + 2;
#define                                 TMR4ON_bit          BANKMASK(T4CON), 2
extern volatile __bit                   TMR5CS0             @ (((unsigned) &T5CON)*8) + 6;
#define                                 TMR5CS0_bit         BANKMASK(T5CON), 6
extern volatile __bit                   TMR5CS1             @ (((unsigned) &T5CON)*8) + 7;
#define                                 TMR5CS1_bit         BANKMASK(T5CON), 7
extern volatile __bit                   TMR5GE              @ (((unsigned) &T5GCON)*8) + 7;
#define                                 TMR5GE_bit          BANKMASK(T5GCON), 7
extern volatile __bit                   TMR5GIE             @ (((unsigned) &PIE4)*8) + 5;
#define                                 TMR5GIE_bit         BANKMASK(PIE4), 5
extern volatile __bit                   TMR5GIF             @ (((unsigned) &PIR4)*8) + 5;
#define                                 TMR5GIF_bit         BANKMASK(PIR4), 5
extern volatile __bit                   TMR5IE              @ (((unsigned) &PIE4)*8) + 4;
#define                                 TMR5IE_bit          BANKMASK(PIE4), 4
extern volatile __bit                   TMR5IF              @ (((unsigned) &PIR4)*8) + 4;
#define                                 TMR5IF_bit          BANKMASK(PIR4), 4
extern volatile __bit                   TMR5MD              @ (((unsigned) &PMD1)*8) + 5;
#define                                 TMR5MD_bit          BANKMASK(PMD1), 5
extern volatile __bit                   TMR5ON              @ (((unsigned) &T5CON)*8) + 0;
#define                                 TMR5ON_bit          BANKMASK(T5CON), 0
extern volatile __bit                   TMR6IE              @ (((unsigned) &PIE2)*8) + 7;
#define                                 TMR6IE_bit          BANKMASK(PIE2), 7
extern volatile __bit                   TMR6IF              @ (((unsigned) &PIR2)*8) + 7;
#define                                 TMR6IF_bit          BANKMASK(PIR2), 7
extern volatile __bit                   TMR6MD              @ (((unsigned) &PMD1)*8) + 6;
#define                                 TMR6MD_bit          BANKMASK(PMD1), 6
extern volatile __bit                   TMR6ON              @ (((unsigned) &T6CON)*8) + 2;
#define                                 TMR6ON_bit          BANKMASK(T6CON), 2
extern volatile __bit                   TRISA0              @ (((unsigned) &TRISA)*8) + 0;
#define                                 TRISA0_bit          BANKMASK(TRISA), 0
extern volatile __bit                   TRISA1              @ (((unsigned) &TRISA)*8) + 1;
#define                                 TRISA1_bit          BANKMASK(TRISA), 1
extern volatile __bit                   TRISA2              @ (((unsigned) &TRISA)*8) + 2;
#define                                 TRISA2_bit          BANKMASK(TRISA), 2
extern volatile __bit                   TRISA4              @ (((unsigned) &TRISA)*8) + 4;
#define                                 TRISA4_bit          BANKMASK(TRISA), 4
extern volatile __bit                   TRISA5              @ (((unsigned) &TRISA)*8) + 5;
#define                                 TRISA5_bit          BANKMASK(TRISA), 5
extern volatile __bit                   TRISC0              @ (((unsigned) &TRISC)*8) + 0;
#define                                 TRISC0_bit          BANKMASK(TRISC), 0
extern volatile __bit                   TRISC1              @ (((unsigned) &TRISC)*8) + 1;
#define                                 TRISC1_bit          BANKMASK(TRISC), 1
extern volatile __bit                   TRISC2              @ (((unsigned) &TRISC)*8) + 2;
#define                                 TRISC2_bit          BANKMASK(TRISC), 2
extern volatile __bit                   TRISC3              @ (((unsigned) &TRISC)*8) + 3;
#define                                 TRISC3_bit          BANKMASK(TRISC), 3
extern volatile __bit                   TRISC4              @ (((unsigned) &TRISC)*8) + 4;
#define                                 TRISC4_bit          BANKMASK(TRISC), 4
extern volatile __bit                   TRISC5              @ (((unsigned) &TRISC)*8) + 5;
#define                                 TRISC5_bit          BANKMASK(TRISC), 5
extern volatile __bit                   TRMT                @ (((unsigned) &TX1STA)*8) + 1;
#define                                 TRMT_bit            BANKMASK(TX1STA), 1
extern volatile __bit                   TSEN                @ (((unsigned) &FVRCON)*8) + 5;
#define                                 TSEN_bit            BANKMASK(FVRCON), 5
extern volatile __bit                   TSRNG               @ (((unsigned) &FVRCON)*8) + 4;
#define                                 TSRNG_bit           BANKMASK(FVRCON), 4
extern volatile __bit                   TX9                 @ (((unsigned) &TX1STA)*8) + 6;
#define                                 TX9_bit             BANKMASK(TX1STA), 6
extern volatile __bit                   TX9D                @ (((unsigned) &TX1STA)*8) + 0;
#define                                 TX9D_bit            BANKMASK(TX1STA), 0
extern volatile __bit                   TXCKPPS0            @ (((unsigned) &TXPPS)*8) + 0;
#define                                 TXCKPPS0_bit        BANKMASK(TXPPS), 0
extern volatile __bit                   TXCKPPS1            @ (((unsigned) &TXPPS)*8) + 1;
#define                                 TXCKPPS1_bit        BANKMASK(TXPPS), 1
extern volatile __bit                   TXCKPPS2            @ (((unsigned) &TXPPS)*8) + 2;
#define                                 TXCKPPS2_bit        BANKMASK(TXPPS), 2
extern volatile __bit                   TXCKPPS3            @ (((unsigned) &TXPPS)*8) + 3;
#define                                 TXCKPPS3_bit        BANKMASK(TXPPS), 3
extern volatile __bit                   TXCKPPS4            @ (((unsigned) &TXPPS)*8) + 4;
#define                                 TXCKPPS4_bit        BANKMASK(TXPPS), 4
extern volatile __bit                   TXEN                @ (((unsigned) &TX1STA)*8) + 5;
#define                                 TXEN_bit            BANKMASK(TX1STA), 5
extern volatile __bit                   TXIE                @ (((unsigned) &PIE1)*8) + 4;
#define                                 TXIE_bit            BANKMASK(PIE1), 4
extern volatile __bit                   TXIF                @ (((unsigned) &PIR1)*8) + 4;
#define                                 TXIF_bit            BANKMASK(PIR1), 4
extern volatile __bit                   UA                  @ (((unsigned) &SSP1STAT)*8) + 1;
#define                                 UA_bit              BANKMASK(SSP1STAT), 1
extern volatile __bit                   UART1MD             @ (((unsigned) &PMD4)*8) + 5;
#define                                 UART1MD_bit         BANKMASK(PMD4), 5
extern volatile __bit                   VREGPM              @ (((unsigned) &VREGCON)*8) + 1;
#define                                 VREGPM_bit          BANKMASK(VREGCON), 1
extern volatile __bit                   WCOL                @ (((unsigned) &SSP1CON1)*8) + 7;
#define                                 WCOL_bit            BANKMASK(SSP1CON1), 7
extern volatile __bit                   WDTPS0              @ (((unsigned) &WDTCON)*8) + 1;
#define                                 WDTPS0_bit          BANKMASK(WDTCON), 1
extern volatile __bit                   WDTPS1              @ (((unsigned) &WDTCON)*8) + 2;
#define                                 WDTPS1_bit          BANKMASK(WDTCON), 2
extern volatile __bit                   WDTPS2              @ (((unsigned) &WDTCON)*8) + 3;
#define                                 WDTPS2_bit          BANKMASK(WDTCON), 3
extern volatile __bit                   WDTPS3              @ (((unsigned) &WDTCON)*8) + 4;
#define                                 WDTPS3_bit          BANKMASK(WDTCON), 4
extern volatile __bit                   WDTPS4              @ (((unsigned) &WDTCON)*8) + 5;
#define                                 WDTPS4_bit          BANKMASK(WDTCON), 5
extern volatile __bit                   WPUA0               @ (((unsigned) &WPUA)*8) + 0;
#define                                 WPUA0_bit           BANKMASK(WPUA), 0
extern volatile __bit                   WPUA1               @ (((unsigned) &WPUA)*8) + 1;
#define                                 WPUA1_bit           BANKMASK(WPUA), 1
extern volatile __bit                   WPUA2               @ (((unsigned) &WPUA)*8) + 2;
#define                                 WPUA2_bit           BANKMASK(WPUA), 2
extern volatile __bit                   WPUA3               @ (((unsigned) &WPUA)*8) + 3;
#define                                 WPUA3_bit           BANKMASK(WPUA), 3
extern volatile __bit                   WPUA4               @ (((unsigned) &WPUA)*8) + 4;
#define                                 WPUA4_bit           BANKMASK(WPUA), 4
extern volatile __bit                   WPUA5               @ (((unsigned) &WPUA)*8) + 5;
#define                                 WPUA5_bit           BANKMASK(WPUA), 5
extern volatile __bit                   WPUC0               @ (((unsigned) &WPUC)*8) + 0;
#define                                 WPUC0_bit           BANKMASK(WPUC), 0
extern volatile __bit                   WPUC1               @ (((unsigned) &WPUC)*8) + 1;
#define                                 WPUC1_bit           BANKMASK(WPUC), 1
extern volatile __bit                   WPUC2               @ (((unsigned) &WPUC)*8) + 2;
#define                                 WPUC2_bit           BANKMASK(WPUC), 2
extern volatile __bit                   WPUC3               @ (((unsigned) &WPUC)*8) + 3;
#define                                 WPUC3_bit           BANKMASK(WPUC), 3
extern volatile __bit                   WPUC4               @ (((unsigned) &WPUC)*8) + 4;
#define                                 WPUC4_bit           BANKMASK(WPUC), 4
extern volatile __bit                   WPUC5               @ (((unsigned) &WPUC)*8) + 5;
#define                                 WPUC5_bit           BANKMASK(WPUC), 5
extern volatile __bit                   WR                  @ (((unsigned) &NVMCON1)*8) + 1;
#define                                 WR_bit              BANKMASK(NVMCON1), 1
extern volatile __bit                   WREN                @ (((unsigned) &NVMCON1)*8) + 2;
#define                                 WREN_bit            BANKMASK(NVMCON1), 2
extern volatile __bit                   WRERR               @ (((unsigned) &NVMCON1)*8) + 3;
#define                                 WRERR_bit           BANKMASK(NVMCON1), 3
extern volatile __bit                   WUE                 @ (((unsigned) &BAUD1CON)*8) + 1;
#define                                 WUE_bit             BANKMASK(BAUD1CON), 1
extern volatile __bit                   ZERO                @ (((unsigned) &STATUS)*8) + 2;
#define                                 ZERO_bit            BANKMASK(STATUS), 2
extern volatile __bit                   Z_SHAD              @ (((unsigned) &STATUS_SHAD)*8) + 2;
#define                                 Z_SHAD_bit          BANKMASK(STATUS_SHAD), 2
extern volatile __bit                   nBOR                @ (((unsigned) &PCON0)*8) + 0;
#define                                 nBOR_bit            BANKMASK(PCON0), 0
extern volatile __bit                   nPD                 @ (((unsigned) &STATUS)*8) + 3;
#define                                 nPD_bit             BANKMASK(STATUS), 3
extern volatile __bit                   nPOR                @ (((unsigned) &PCON0)*8) + 1;
#define                                 nPOR_bit            BANKMASK(PCON0), 1
extern volatile __bit                   nRI                 @ (((unsigned) &PCON0)*8) + 2;
#define                                 nRI_bit             BANKMASK(PCON0), 2
extern volatile __bit                   nRMCLR              @ (((unsigned) &PCON0)*8) + 3;
#define                                 nRMCLR_bit          BANKMASK(PCON0), 3
extern volatile __bit                   nRWDT               @ (((unsigned) &PCON0)*8) + 4;
#define                                 nRWDT_bit           BANKMASK(PCON0), 4
extern volatile __bit                   nTO                 @ (((unsigned) &STATUS)*8) + 4;
#define                                 nTO_bit             BANKMASK(STATUS), 4

#endif // _PIC16F18324_H_
